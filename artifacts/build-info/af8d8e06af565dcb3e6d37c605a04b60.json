{"id":"af8d8e06af565dcb3e6d37c605a04b60","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/CBIOToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract CBIO is ERC20 {\n\n    constructor() ERC20('Credito de Descarbonizacao','CBIO'){\n        _mint(msg.sender, 100000000 ether);\n    }\n\n}"},"contracts/EmissorCBIO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract EmissorCBIO {\n    using SafeERC20 for ERC20;\n\n    ERC20 public cbioToken;\n    mapping(address => bool) allowedEmissors;\n    mapping(address => uint) cbiosEmited;\n    address ownerExchange;\n\n    constructor(address _cbioToken) {\n        cbioToken = ERC20(_cbioToken);\n        ownerExchange = msg.sender;\n    }\n\n    function addEmissor() public {\n        if(msg.sender == ownerExchange){\n            allowedEmissors[msg.sender] = true;\n        }\n    }\n\n    function emitCBIO(address _receiver, uint256 _amount) public {\n        require(_amount > 0, \"EmissorCBIO: amount must be greater than 0\");\n        require(_amount < cbioToken.balanceOf(address(this)), \"EmissorCBIO: amount must be less than the balance of the contract\");\n        if(allowedEmissors[msg.sender]){\n            cbioToken.safeTransfer(_receiver, _amount);\n            cbiosEmited[_receiver] += _amount;\n        }\n    }\n\n    function isAddressAllowed(address _address) public view returns(bool){\n        return allowedEmissors[_address];\n    }\n\n    function getCBIOSemited(address _address) public view returns(uint){\n        return cbiosEmited[_address];\n    }\n}"},"contracts/Exchange.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Exchange is ERC20 {\n\n    address public cbiosTokenAddress;\n\n    constructor(address _Cbiostoken) ERC20(\"CBios\", \"CBIO\") {\n        require(_Cbiostoken != address(0), \"Token address passed is a null address\");\n        cbiosTokenAddress = _Cbiostoken;\n    }\n\n    function getReserve() public view returns (uint) {\n        return ERC20(cbiosTokenAddress).balanceOf(address(this));\n    }\n\n    function addLiquidity(uint _amount) public payable returns (uint) {\n        uint liquidity;\n        uint ethBalance = address(this).balance;\n        uint cbiosTokenReserve = getReserve();\n        ERC20 cbiosToken = ERC20(cbiosTokenAddress);\n\n        if(cbiosTokenReserve == 0) {\n            cbiosToken.transferFrom(msg.sender, address(this), _amount);\n\n            liquidity = ethBalance;\n            _mint(msg.sender, liquidity);\n        } else {\n            uint ethReserve =  ethBalance - msg.value;\n            uint cbiosTokenAmount = (msg.value * cbiosTokenReserve)/(ethReserve);\n\n            require(_amount >= cbiosTokenAmount, \"Amount of tokens sent is less than the minimum tokens required\");\n            cbiosToken.transferFrom(msg.sender, address(this), cbiosTokenAmount);\n            liquidity = (totalSupply() * msg.value)/ ethReserve;\n            _mint(msg.sender, liquidity);\n        }\n         return liquidity;\n    }\n\n    function removeLiquidity(uint _amount) public returns (uint , uint) {\n        require(_amount > 0, \"_amount should be greater than zero\");\n        uint ethReserve = address(this).balance;\n        uint _totalSupply = totalSupply();\n        uint ethAmount = (ethReserve * _amount)/ _totalSupply;\n        uint cbiosTokenAmount = (getReserve() * _amount)/ _totalSupply;\n        _burn(msg.sender, _amount);\n        payable(msg.sender).transfer(ethAmount);\n        ERC20(cbiosTokenAddress).transfer(msg.sender, cbiosTokenAmount);\n        return (ethAmount, cbiosTokenAmount);\n    }\n\n    function getAmountOfTokens(\n        uint256 inputAmount,\n        uint256 inputReserve,\n        uint256 outputReserve\n    ) public pure returns (uint256) {\n        require(inputReserve > 0 && outputReserve > 0, \"invalid reserves\");\n        uint256 inputAmountWithFee = inputAmount * 99;\n        uint256 numerator = inputAmountWithFee * outputReserve;\n        uint256 denominator = (inputReserve * 100) + inputAmountWithFee;\n        return numerator / denominator;\n    }\n\n    function ethToCbiosToken(uint _minTokens) public payable {\n        uint256 tokenReserve = getReserve();\n\n        uint256 tokensBought = getAmountOfTokens(\n            msg.value,\n            address(this).balance - msg.value,\n            tokenReserve\n        );\n\n        require(tokensBought >= _minTokens, \"insufficient output amount\");\n        ERC20(cbiosTokenAddress).transfer(msg.sender, tokensBought);\n    }\n\n    function cbiosTokenToEth(uint _tokensSold, uint _minEth) public {\n        uint256 tokenReserve = getReserve();\n        uint256 ethBought = getAmountOfTokens(\n            _tokensSold,\n            tokenReserve,\n            address(this).balance\n        );\n        require(ethBought >= _minEth, \"insufficient output amount\");\n        ERC20(cbiosTokenAddress).transferFrom(\n            msg.sender,\n            address(this),\n            _tokensSold\n        );\n        payable(msg.sender).transfer(ethBought);\n    }\n}"},"contracts/RetireCBIO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract RetirerCBIO{\n    using SafeERC20 for ERC20;\n\n    ERC20 public cbioToken;\n    mapping(address => bool) allowedRetire;\n    mapping(address => uint) cbiosRetired;\n    address ownerExchange;\n\n    constructor(address _cbioToken) {\n        cbioToken = ERC20(_cbioToken);\n        ownerExchange = msg.sender;\n    }\n\n    function addRetirer() public {\n        if(msg.sender == ownerExchange){\n            allowedRetire[msg.sender] = true;\n        }\n    }\n\n    function isAddressAllowed(address _address) public view returns(bool){\n        return allowedRetire[_address];\n    }\n    function getCBIOSRetired(address _address) public view returns(uint){\n        return cbiosRetired[_address];\n    }\n\n    function RetireCBIO(address _sender, uint256 _amount) public {\n        require(_amount > 0, \"RetireCBIO: amount must be greater than 0\");\n        if(allowedRetire[msg.sender]){\n            cbioToken.safeTransferFrom(_sender, address(this), _amount);\n            cbiosRetired[_sender] += _amount;\n        }\n    }\n\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1358],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":1359,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1419:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"1419:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1419:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1428:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1428:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1428:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1436:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1436:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1436:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1170:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,1358],"name":"ERC20","nameLocation":"1410:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1457:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1509:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1583:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1633:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1618:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1644:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2032:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2042:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2050:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2042:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2065:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2075:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2065:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1673:298:0","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2002:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1988:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2009:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2032:0:0"},"scope":586,"src":"1976:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2223:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2240:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2233:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2095:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2167:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2208:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:0"},"scope":586,"src":"2154:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2436:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2453:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2446:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2258:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2380:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2421:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:0"},"scope":586,"src":"2365:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3156:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3166:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2473:613:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3108:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3149:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:0"},"scope":586,"src":"3091:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3312:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3329:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3322:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3188:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3262:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3303:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:0"},"scope":586,"src":"3242:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3489:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3506:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3499:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3354:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3433:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3425:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3480:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:0"},"scope":586,"src":"3406:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3812:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3830:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3822:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3838:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3870:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3877:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3881:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3860:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3860:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3898:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3537:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3753:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3745:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3765:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3757:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3806:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:0"},"scope":586,"src":"3727:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4072:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4089:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4101:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4082:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3922:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4001:5:0","nodeType":"VariableDeclaration","scope":141,"src":"3993:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4016:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4008:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4063:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:0"},"scope":586,"src":"3974:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4520:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4538:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4530:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4546:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4577:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4584:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4593:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4568:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4568:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4610:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4129:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4456:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4448:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4473:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4465:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4514:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:0"},"scope":586,"src":"4431:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5323:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5341:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5333:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5351:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5389:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5395:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5404:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5373:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5373:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5431:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5437:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5441:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5421:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5421:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5458:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4634:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5229:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5251:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5243:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5271:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5263:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5317:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:0"},"scope":586,"src":"5190:286:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5965:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5983:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5975:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5991:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6022:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6029:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6048:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6055:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6038:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6066:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6013:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"6013:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6087:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5482:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5906:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5915:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5959:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:0"},"scope":586,"src":"5871:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6691:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6709:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6739:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6776:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6783:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6766:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6809:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6829:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6801:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6896:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6929:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6936:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6945:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6964:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6920:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6920:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"7001:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6111:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6627:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6636:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6685:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:0"},"scope":586,"src":"6592:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7581:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7599:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7591:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7677:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7669:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7765:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7771:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7775:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7744:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7744:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7793:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7815:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7825:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7848:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7863:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7840:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7922:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7946:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7964:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7978:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7946:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8161:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8171:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8178:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8161:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8219:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8225:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8229:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8210:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8205:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8267:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8273:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8277:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8247:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8247:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7025:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7509:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7531:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7523:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7551:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7581:0:0"},"scope":586,"src":"7473:818:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8632:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8650:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8642:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8751:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8760:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8718:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8718:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8778:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8794:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8778:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8810:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8946:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8956:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8968:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8946:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8999:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8994:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9079:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9088:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9047:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9047:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8297:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8590:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8582:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8607:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8599:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8632:0:0"},"scope":586,"src":"8567:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9487:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9505:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9497:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9617:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9575:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9575:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9635:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9660:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9670:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9696:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9714:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9688:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9769:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9793:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9803:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9814:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9831:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9793:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9930:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9946:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9930:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9987:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10008:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9978:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9973:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"10046:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10067:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"10026:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"10026:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9108:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9445:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9437:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9462:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9454:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9487:0:0"},"scope":586,"src":"9422:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10617:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10635:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10627:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10713:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10705:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10784:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10796:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10803:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10814:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10784:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10844:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10851:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10860:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10835:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10830:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10087:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10539:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10531:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10562:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10554:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10587:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10579:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10617:0:0"},"scope":586,"src":"10504:370:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11275:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11285:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11322:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11329:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11312:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11351:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:0","memberName":"max","nodeType":"MemberAccess","src":"11371:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11347:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11390:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11412:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11432:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11404:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11486:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11523:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11530:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11539:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11558:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11514:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11514:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10880:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11197:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11189:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11220:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11212:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11245:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11275:0:0"},"scope":586,"src":"11155:441:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12299:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11602:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12227:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12249:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12241:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12269:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12261:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12299:0:0"},"scope":586,"src":"12180:121:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"13007:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12307:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12935:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12927:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12957:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12949:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12977:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12969:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"13007:0:0"},"scope":586,"src":"12889:120:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1401:11610:0","usedErrors":[]}],"src":"105:12907:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":664,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[725]},"id":726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"139:480:3","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":725,"linearizedBaseContracts":[725],"name":"IERC20Permit","nameLocation":"630:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"649:792:3","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":710,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:3","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"owner","nameLocation":"1479:5:3","nodeType":"VariableDeclaration","scope":710,"src":"1471:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"spender","nameLocation":"1502:7:3","nodeType":"VariableDeclaration","scope":710,"src":"1494:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"value","nameLocation":"1527:5:3","nodeType":"VariableDeclaration","scope":710,"src":"1519:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:3","nodeType":"VariableDeclaration","scope":710,"src":"1542:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"v","nameLocation":"1574:1:3","nodeType":"VariableDeclaration","scope":710,"src":"1568:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":702,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"r","nameLocation":"1593:1:3","nodeType":"VariableDeclaration","scope":710,"src":"1585:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"s","nameLocation":"1612:1:3","nodeType":"VariableDeclaration","scope":710,"src":"1604:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"1628:0:3"},"scope":725,"src":"1446:183:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"1635:294:3","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":718,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:3","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"owner","nameLocation":"1958:5:3","nodeType":"VariableDeclaration","scope":718,"src":"1950:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:3"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"1988:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:3"},"scope":725,"src":"1934:63:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"2003:128:3","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":724,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:3","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"2214:2:3"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"2240:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:3"},"scope":725,"src":"2189:60:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":726,"src":"620:1631:3","usedErrors":[]}],"src":"114:2138:3"},"id":3},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1336],"IERC20":[664],"IERC20Permit":[725],"SafeERC20":[1006]},"id":1007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":727,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":665,"src":"140:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":726,"src":"164:46:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":730,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":1337,"src":"211:36:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"249:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1006,"linearizedBaseContracts":[1006],"name":"SafeERC20","nameLocation":"715:9:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":734,"libraryName":{"id":732,"name":"Address","nameLocations":["737:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1336,"src":"737:7:4"},"nodeType":"UsingForDirective","src":"731:26:4","typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":756,"nodeType":"Block","src":"865:103:4","statements":[{"expression":{"arguments":[{"id":745,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"895:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":748,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"925:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:4","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":631,"src":"925:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:4","memberName":"selector","nodeType":"MemberAccess","src":"925:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"950:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"954:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"875:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"875:86:4"}]},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"token","nameLocation":"801:5:4","nodeType":"VariableDeclaration","scope":757,"src":"794:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":736,"nodeType":"UserDefinedTypeName","pathNode":{"id":735,"name":"IERC20","nameLocations":["794:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"794:6:4"},"referencedDeclaration":664,"src":"794:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"to","nameLocation":"824:2:4","nodeType":"VariableDeclaration","scope":757,"src":"816:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"value","nameLocation":"844:5:4","nodeType":"VariableDeclaration","scope":757,"src":"836:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:4"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"865:0:4"},"scope":1006,"src":"763:205:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"1102:113:4","statements":[{"expression":{"arguments":[{"id":770,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"1132:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":773,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"1162:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:4","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":663,"src":"1162:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:4","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"1191:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"1197:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"1201:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":771,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":769,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1112:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"1112:96:4"}]},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:4","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"token","nameLocation":"1016:5:4","nodeType":"VariableDeclaration","scope":783,"src":"1009:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":759,"nodeType":"UserDefinedTypeName","pathNode":{"id":758,"name":"IERC20","nameLocations":["1009:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1009:6:4"},"referencedDeclaration":664,"src":"1009:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"from","nameLocation":"1039:4:4","nodeType":"VariableDeclaration","scope":783,"src":"1031:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"to","nameLocation":"1061:2:4","nodeType":"VariableDeclaration","scope":783,"src":"1053:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"value","nameLocation":"1081:5:4","nodeType":"VariableDeclaration","scope":783,"src":"1073:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:4"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"1102:0:4"},"scope":1006,"src":"974:241:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"1581:497:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1830:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}],"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:4","typeDescriptions":{}}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"1877:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":799,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"1846:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":641,"src":"1846:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"1808:163:4"},{"expression":{"arguments":[{"id":815,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2001:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":818,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2031:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2031:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":821,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"2055:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2064:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":816,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":814,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1981:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"1981:90:4"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"1221:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"token","nameLocation":"1512:5:4","nodeType":"VariableDeclaration","scope":827,"src":"1505:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"IERC20","nameLocations":["1505:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1505:6:4"},"referencedDeclaration":664,"src":"1505:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"spender","nameLocation":"1535:7:4","nodeType":"VariableDeclaration","scope":827,"src":"1527:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"value","nameLocation":"1560:5:4","nodeType":"VariableDeclaration","scope":827,"src":"1552:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:4"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"1581:0:4"},"scope":1006,"src":"1475:603:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"2200:194:4","statements":[{"assignments":[838],"declarations":[{"constant":false,"id":838,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:4","nodeType":"VariableDeclaration","scope":862,"src":"2210:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":849,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:4","typeDescriptions":{}}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2264:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":839,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2233:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":641,"src":"2233:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"2275:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:4"},{"expression":{"arguments":[{"id":851,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2310:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":854,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2340:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2340:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":857,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2364:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2373:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":850,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2290:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"2290:97:4"}]},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:4","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"token","nameLocation":"2131:5:4","nodeType":"VariableDeclaration","scope":863,"src":"2124:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":829,"nodeType":"UserDefinedTypeName","pathNode":{"id":828,"name":"IERC20","nameLocations":["2124:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2124:6:4"},"referencedDeclaration":664,"src":"2124:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"2154:7:4","nodeType":"VariableDeclaration","scope":863,"src":"2146:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"value","nameLocation":"2179:5:4","nodeType":"VariableDeclaration","scope":863,"src":"2171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:4"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"2200:0:4"},"scope":1006,"src":"2084:310:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2516:370:4","statements":[{"id":909,"nodeType":"UncheckedBlock","src":"2526:354:4","statements":[{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:4","nodeType":"VariableDeclaration","scope":909,"src":"2550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":883,"initialValue":{"arguments":[{"arguments":[{"id":879,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:4","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2604:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2573:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":641,"src":"2573:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":885,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2634:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2650:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"2626:75:4"},{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:4","nodeType":"VariableDeclaration","scope":909,"src":"2715:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":896,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2738:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2753:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:4"},{"expression":{"arguments":[{"id":898,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2792:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2822:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2822:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2846:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"2855:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":899,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":897,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2772:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"2772:97:4"}]}]},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:4","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"token","nameLocation":"2447:5:4","nodeType":"VariableDeclaration","scope":911,"src":"2440:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":865,"nodeType":"UserDefinedTypeName","pathNode":{"id":864,"name":"IERC20","nameLocations":["2440:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2440:6:4"},"referencedDeclaration":664,"src":"2440:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"spender","nameLocation":"2470:7:4","nodeType":"VariableDeclaration","scope":911,"src":"2462:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"value","nameLocation":"2495:5:4","nodeType":"VariableDeclaration","scope":911,"src":"2487:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:4"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"2516:0:4"},"scope":1006,"src":"2400:486:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"3107:257:4","statements":[{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:4","nodeType":"VariableDeclaration","scope":966,"src":"3117:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[{"id":935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3152:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":933,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3139:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":718,"src":"3139:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:4"},{"expression":{"arguments":[{"id":941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3181:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"3188:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3197:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":944,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3204:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3214:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":946,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3217:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":947,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3220:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":938,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3168:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:4","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":710,"src":"3168:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"3168:54:4"},{"assignments":[951],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:4","nodeType":"VariableDeclaration","scope":966,"src":"3232:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":956,"initialValue":{"arguments":[{"id":954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3266:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":952,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3253:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":718,"src":"3253:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3290:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3304:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"3282:75:4"}]},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:4","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"token","nameLocation":"2934:5:4","nodeType":"VariableDeclaration","scope":967,"src":"2921:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"},"typeName":{"id":913,"nodeType":"UserDefinedTypeName","pathNode":{"id":912,"name":"IERC20Permit","nameLocations":["2921:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"2921:12:4"},"referencedDeclaration":725,"src":"2921:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"owner","nameLocation":"2957:5:4","nodeType":"VariableDeclaration","scope":967,"src":"2949:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"spender","nameLocation":"2980:7:4","nodeType":"VariableDeclaration","scope":967,"src":"2972:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"value","nameLocation":"3005:5:4","nodeType":"VariableDeclaration","scope":967,"src":"2997:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:4","nodeType":"VariableDeclaration","scope":967,"src":"3020:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"v","nameLocation":"3052:1:4","nodeType":"VariableDeclaration","scope":967,"src":"3046:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":923,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"r","nameLocation":"3071:1:4","nodeType":"VariableDeclaration","scope":967,"src":"3063:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"s","nameLocation":"3090:1:4","nodeType":"VariableDeclaration","scope":967,"src":"3082:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"3107:0:4"},"scope":1006,"src":"2892:472:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"3817:636:4","statements":[{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:4","nodeType":"VariableDeclaration","scope":1004,"src":"4166:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"id":983,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"4220:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":980,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4200:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:4","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:4","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1096,"src":"4192:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":987,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4275:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:4","memberName":"length","nodeType":"MemberAccess","src":"4275:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1003,"nodeType":"IfStatement","src":"4271:176:4","trueBody":{"id":1002,"nodeType":"Block","src":"4298:149:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":994,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4370:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":995,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:4","typeDescriptions":{}}}],"id":997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":992,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:4","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"4351:85:4"}]}}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"3370:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:4","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"token","nameLocation":"3783:5:4","nodeType":"VariableDeclaration","scope":1005,"src":"3776:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":970,"nodeType":"UserDefinedTypeName","pathNode":{"id":969,"name":"IERC20","nameLocations":["3776:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"3776:6:4"},"referencedDeclaration":664,"src":"3776:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"data","nameLocation":"3803:4:4","nodeType":"VariableDeclaration","scope":1005,"src":"3790:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":972,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:4"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"3817:0:4"},"scope":1006,"src":"3747:706:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1007,"src":"707:3748:4","usedErrors":[]}],"src":"115:4341:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1336]},"id":1337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1008,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1336,"linearizedBaseContracts":[1336],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1023,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1017,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:5","memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:5","memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1016,"id":1022,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":1024,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":1336,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1035,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}],"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1038,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[1044,null],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":1057,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1051,"initialValue":{"arguments":[{"hexValue":"","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1045,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:5","memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1047,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":1053,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":1058,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":1058,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":1336,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"3555:96:5","statements":[{"expression":{"arguments":[{"id":1069,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"3594:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3602:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1068,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1116,1160],"referencedDeclaration":1160,"src":"3572:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1067,"id":1074,"nodeType":"Return","src":"3565:79:5"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":1076,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":1076,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":1336,"src":"3466:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"4020:76:5","statements":[{"expression":{"arguments":[{"id":1089,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4059:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4067:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1092,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4076:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1088,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1116,1160],"referencedDeclaration":1160,"src":"4037:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1087,"id":1094,"nodeType":"Return","src":"4030:59:5"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"3657:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:5","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"target","nameLocation":"3912:6:5","nodeType":"VariableDeclaration","scope":1096,"src":"3904:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"data","nameLocation":"3941:4:5","nodeType":"VariableDeclaration","scope":1096,"src":"3928:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1080,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:5","nodeType":"VariableDeclaration","scope":1096,"src":"3955:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1082,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:5"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"4006:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1085,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:5"},"scope":1336,"src":"3873:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"4601:111:5","statements":[{"expression":{"arguments":[{"id":1109,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4640:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"4648:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1108,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1116,1160],"referencedDeclaration":1160,"src":"4618:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1107,"id":1114,"nodeType":"Return","src":"4611:94:5"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"4102:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:5","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"target","nameLocation":"4506:6:5","nodeType":"VariableDeclaration","scope":1116,"src":"4498:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"data","nameLocation":"4535:4:5","nodeType":"VariableDeclaration","scope":1116,"src":"4522:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"value","nameLocation":"4557:5:5","nodeType":"VariableDeclaration","scope":1116,"src":"4549:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"4587:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:5"},"scope":1336,"src":"4458:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"5139:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1133,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:5","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5182:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"5149:81:5"},{"assignments":[1142,1144],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"success","nameLocation":"5246:7:5","nodeType":"VariableDeclaration","scope":1159,"src":"5241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:5","nodeType":"VariableDeclaration","scope":1159,"src":"5255:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1151,"initialValue":{"arguments":[{"id":1149,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5308:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1145,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5282:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:5","memberName":"call","nodeType":"MemberAccess","src":"5282:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5301:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:5"},{"expression":{"arguments":[{"id":1153,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5357:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5365:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1155,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"5374:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1156,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"5386:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1152,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"5330:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1129,"id":1158,"nodeType":"Return","src":"5323:76:5"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"4718:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:5","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"target","nameLocation":"5008:6:5","nodeType":"VariableDeclaration","scope":1160,"src":"5000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"data","nameLocation":"5037:4:5","nodeType":"VariableDeclaration","scope":1160,"src":"5024:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1120,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"value","nameLocation":"5059:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"5051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:5","nodeType":"VariableDeclaration","scope":1160,"src":"5074:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1124,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:5"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1160,"src":"5125:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:5"},"scope":1336,"src":"4960:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"5683:97:5","statements":[{"expression":{"arguments":[{"id":1171,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"5719:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5727:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1170,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1177,1206],"referencedDeclaration":1206,"src":"5700:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1169,"id":1175,"nodeType":"Return","src":"5693:80:5"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"5412:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:5","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"target","nameLocation":"5619:6:5","nodeType":"VariableDeclaration","scope":1177,"src":"5611:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"data","nameLocation":"5640:4:5","nodeType":"VariableDeclaration","scope":1177,"src":"5627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"5669:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1167,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:5"},"scope":1336,"src":"5583:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"6122:168:5","statements":[{"assignments":[1190,1192],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"success","nameLocation":"6138:7:5","nodeType":"VariableDeclaration","scope":1205,"src":"6133:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:5","nodeType":"VariableDeclaration","scope":1205,"src":"6147:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"id":1195,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"6192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1193,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6174:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:5"},{"expression":{"arguments":[{"id":1199,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6249:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1201,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6258:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1202,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"6270:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1198,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6214:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1188,"id":1204,"nodeType":"Return","src":"6207:76:5"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"5786:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:5","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"target","nameLocation":"6009:6:5","nodeType":"VariableDeclaration","scope":1206,"src":"6001:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"data","nameLocation":"6038:4:5","nodeType":"VariableDeclaration","scope":1206,"src":"6025:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1181,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:5","nodeType":"VariableDeclaration","scope":1206,"src":"6052:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1183,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:5"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"6108:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1186,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:5"},"scope":1336,"src":"5964:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1222,"nodeType":"Block","src":"6566:101:5","statements":[{"expression":{"arguments":[{"id":1217,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6604:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6612:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1216,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1223,1252],"referencedDeclaration":1252,"src":"6583:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1215,"id":1221,"nodeType":"Return","src":"6576:84:5"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"6296:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:5","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"target","nameLocation":"6507:6:5","nodeType":"VariableDeclaration","scope":1223,"src":"6499:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"data","nameLocation":"6528:4:5","nodeType":"VariableDeclaration","scope":1223,"src":"6515:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:5"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"6552:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:5"},"scope":1336,"src":"6469:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"7008:170:5","statements":[{"assignments":[1236,1238],"declarations":[{"constant":false,"id":1236,"mutability":"mutable","name":"success","nameLocation":"7024:7:5","nodeType":"VariableDeclaration","scope":1251,"src":"7019:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1235,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:5","nodeType":"VariableDeclaration","scope":1251,"src":"7033:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1237,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1243,"initialValue":{"arguments":[{"id":1241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"7080:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1239,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"7060:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:5"},{"expression":{"arguments":[{"id":1245,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"7129:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1247,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"7146:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1248,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7158:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1244,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7102:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1234,"id":1250,"nodeType":"Return","src":"7095:76:5"}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"6673:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:5","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"target","nameLocation":"6900:6:5","nodeType":"VariableDeclaration","scope":1252,"src":"6892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"data","nameLocation":"6929:4:5","nodeType":"VariableDeclaration","scope":1252,"src":"6916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:5","nodeType":"VariableDeclaration","scope":1252,"src":"6943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1229,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:5"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"6994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1232,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:5"},"scope":1336,"src":"6853:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"7660:434:5","statements":[{"condition":{"id":1266,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7674:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1288,"nodeType":"Block","src":"8030:58:5","statements":[{"expression":{"arguments":[{"id":1284,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8052:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1285,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"8064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1283,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8044:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"8044:33:5"}]},"id":1289,"nodeType":"IfStatement","src":"7670:418:5","trueBody":{"id":1282,"nodeType":"Block","src":"7683:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1267,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7701:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:5","memberName":"length","nodeType":"MemberAccess","src":"7701:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1279,"nodeType":"IfStatement","src":"7697:286:5","trueBody":{"id":1278,"nodeType":"Block","src":"7725:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1273,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"7927:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1272,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"7916:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"ExpressionStatement","src":"7908:60:5"}]}},{"expression":{"id":1280,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8003:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1265,"id":1281,"nodeType":"Return","src":"7996:17:5"}]}}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"7184:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"target","nameLocation":"7519:6:5","nodeType":"VariableDeclaration","scope":1291,"src":"7511:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"success","nameLocation":"7540:7:5","nodeType":"VariableDeclaration","scope":1291,"src":"7535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1256,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:5","nodeType":"VariableDeclaration","scope":1291,"src":"7557:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:5","nodeType":"VariableDeclaration","scope":1291,"src":"7590:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"7646:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:5"},"scope":1336,"src":"7466:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"8475:135:5","statements":[{"condition":{"id":1303,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8489:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1312,"nodeType":"Block","src":"8546:58:5","statements":[{"expression":{"arguments":[{"id":1308,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"8568:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1309,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"8580:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1307,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8560:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"8560:33:5"}]},"id":1313,"nodeType":"IfStatement","src":"8485:119:5","trueBody":{"id":1306,"nodeType":"Block","src":"8498:42:5","statements":[{"expression":{"id":1304,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"8519:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1302,"id":1305,"nodeType":"Return","src":"8512:17:5"}]}}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"8100:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:5","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"success","nameLocation":"8355:7:5","nodeType":"VariableDeclaration","scope":1315,"src":"8350:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1293,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:5","nodeType":"VariableDeclaration","scope":1315,"src":"8372:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:5","nodeType":"VariableDeclaration","scope":1315,"src":"8405:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1297,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:5"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"8461:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1300,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:5"},"scope":1336,"src":"8315:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1334,"nodeType":"Block","src":"8699:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1322,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8775:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:5","memberName":"length","nodeType":"MemberAccess","src":"8775:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1332,"nodeType":"Block","src":"9105:45:5","statements":[{"expression":{"arguments":[{"id":1329,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"9126:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1328,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"9119:20:5"}]},"id":1333,"nodeType":"IfStatement","src":"8771:379:5","trueBody":{"id":1327,"nodeType":"Block","src":"8798:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:5"},"nodeType":"YulFunctionCall","src":"8997:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:5"},"nodeType":"YulFunctionCall","src":"9038:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:5"},"nodeType":"YulFunctionCall","src":"9031:44:5"},"nodeType":"YulExpressionStatement","src":"9031:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1317,"isOffset":false,"isSlot":false,"src":"9003:10:5","valueSize":1},{"declaration":1317,"isOffset":false,"isSlot":false,"src":"9046:10:5","valueSize":1}],"id":1326,"nodeType":"InlineAssembly","src":"8947:142:5"}]}}]},"id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:5","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:5","nodeType":"VariableDeclaration","scope":1335,"src":"8633:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1316,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:5","nodeType":"VariableDeclaration","scope":1335,"src":"8658:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1318,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:5"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"8699:0:5"},"scope":1336,"src":"8616:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1337,"src":"194:8964:5","usedErrors":[]}],"src":"101:9058:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1338,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1358,"linearizedBaseContracts":[1358],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1347,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1343,"id":1346,"nodeType":"Return","src":"712:17:6"}]},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1358,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1352,"id":1355,"nodeType":"Return","src":"819:15:6"}]},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1350,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1358,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1359,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"contracts/CBIOToken.sol":{"ast":{"absolutePath":"contracts/CBIOToken.sol","exportedSymbols":{"CBIO":[1378],"Context":[1358],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":1379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"32:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1379,"sourceUnit":587,"src":"57:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1362,"name":"ERC20","nameLocations":["131:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"131:5:7"},"id":1363,"nodeType":"InheritanceSpecifier","src":"131:5:7"}],"canonicalName":"CBIO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1378,"linearizedBaseContracts":[1378,586,689,664,1358],"name":"CBIO","nameLocation":"123:4:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1376,"nodeType":"Block","src":"200:51:7","statements":[{"expression":{"arguments":[{"expression":{"id":1371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"216:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"220:6:7","memberName":"sender","nodeType":"MemberAccess","src":"216:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"313030303030303030","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"228:15:7","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"value":"100000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"}],"id":1370,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"210:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"210:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1375,"nodeType":"ExpressionStatement","src":"210:34:7"}]},"id":1377,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4372656469746f20646520446573636172626f6e697a6163616f","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"164:28:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac815c348f73e246dc046ccde009c2cae264e06856f80fcc0cd0838b8643f4eb","typeString":"literal_string \"Credito de Descarbonizacao\""},"value":"Credito de Descarbonizacao"},{"hexValue":"4342494f","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"193:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0118a9b2efa123fbfdc4a46151f5a6d249bfe6e72fc93e83ca0e829feb9c6527","typeString":"literal_string \"CBIO\""},"value":"CBIO"}],"id":1368,"kind":"baseConstructorSpecifier","modifierName":{"id":1365,"name":"ERC20","nameLocations":["158:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"158:5:7"},"nodeType":"ModifierInvocation","src":"158:42:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"155:2:7"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"200:0:7"},"scope":1378,"src":"144:107:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1379,"src":"114:140:7","usedErrors":[]}],"src":"32:222:7"},"id":7},"contracts/EmissorCBIO.sol":{"ast":{"absolutePath":"contracts/EmissorCBIO.sol","exportedSymbols":{"Address":[1336],"Context":[1358],"ERC20":[586],"EmissorCBIO":[1505],"IERC20":[664],"IERC20Metadata":[689],"IERC20Permit":[725],"SafeERC20":[1006]},"id":1506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1380,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":587,"src":"57:55:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1506,"sourceUnit":1007,"src":"113:65:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EmissorCBIO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1505,"linearizedBaseContracts":[1505],"name":"EmissorCBIO","nameLocation":"189:11:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1386,"libraryName":{"id":1383,"name":"SafeERC20","nameLocations":["213:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"213:9:8"},"nodeType":"UsingForDirective","src":"207:26:8","typeName":{"id":1385,"nodeType":"UserDefinedTypeName","pathNode":{"id":1384,"name":"ERC20","nameLocations":["227:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"227:5:8"},"referencedDeclaration":586,"src":"227:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}}},{"constant":false,"functionSelector":"99e1f6f9","id":1389,"mutability":"mutable","name":"cbioToken","nameLocation":"252:9:8","nodeType":"VariableDeclaration","scope":1505,"src":"239:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"},"typeName":{"id":1388,"nodeType":"UserDefinedTypeName","pathNode":{"id":1387,"name":"ERC20","nameLocations":["239:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"239:5:8"},"referencedDeclaration":586,"src":"239:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"visibility":"public"},{"constant":false,"id":1393,"mutability":"mutable","name":"allowedEmissors","nameLocation":"292:15:8","nodeType":"VariableDeclaration","scope":1505,"src":"267:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1392,"keyType":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"267:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1391,"name":"bool","nodeType":"ElementaryTypeName","src":"286:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"cbiosEmited","nameLocation":"338:11:8","nodeType":"VariableDeclaration","scope":1505,"src":"313:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1396,"keyType":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"321:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"313:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1395,"name":"uint","nodeType":"ElementaryTypeName","src":"332:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"ownerExchange","nameLocation":"363:13:8","nodeType":"VariableDeclaration","scope":1505,"src":"355:21:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"415:82:8","statements":[{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1404,"name":"cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"425:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1406,"name":"_cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"443:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"437:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"437:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"src":"425:29:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1409,"nodeType":"ExpressionStatement","src":"425:29:8"},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"ownerExchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"464:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1411,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"480:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"484:6:8","memberName":"sender","nodeType":"MemberAccess","src":"480:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"464:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1414,"nodeType":"ExpressionStatement","src":"464:26:8"}]},"id":1416,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"_cbioToken","nameLocation":"403:10:8","nodeType":"VariableDeclaration","scope":1416,"src":"395:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"394:20:8"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"415:0:8"},"scope":1505,"src":"383:114:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1432,"nodeType":"Block","src":"532:106:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"545:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"549:6:8","memberName":"sender","nodeType":"MemberAccess","src":"545:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1421,"name":"ownerExchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"559:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"545:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"542:90:8","trueBody":{"id":1430,"nodeType":"Block","src":"573:59:8","statements":[{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1423,"name":"allowedEmissors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"587:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1426,"indexExpression":{"expression":{"id":1424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"603:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"607:6:8","memberName":"sender","nodeType":"MemberAccess","src":"603:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"587:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"617:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"587:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"nodeType":"ExpressionStatement","src":"587:34:8"}]}}]},"functionSelector":"3abf1a94","id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"addEmissor","nameLocation":"512:10:8","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"522:2:8"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"532:0:8"},"scope":1505,"src":"503:135:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1479,"nodeType":"Block","src":"705:369:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"723:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"723:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d6973736f724342494f3a20616d6f756e74206d7573742062652067726561746572207468616e2030","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"736:44:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131","typeString":"literal_string \"EmissorCBIO: amount must be greater than 0\""},"value":"EmissorCBIO: amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131","typeString":"literal_string \"EmissorCBIO: amount must be greater than 0\""}],"id":1440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"715:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"715:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"715:66:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"799:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"arguments":[{"id":1453,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"837:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_EmissorCBIO_$1505","typeString":"contract EmissorCBIO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EmissorCBIO_$1505","typeString":"contract EmissorCBIO"}],"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"829:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"829:7:8","typeDescriptions":{}}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"829:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1449,"name":"cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"809:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"819:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":98,"src":"809:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"799:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d6973736f724342494f3a20616d6f756e74206d757374206265206c657373207468616e207468652062616c616e6365206f662074686520636f6e7472616374","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"845:67:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507","typeString":"literal_string \"EmissorCBIO: amount must be less than the balance of the contract\""},"value":"EmissorCBIO: amount must be less than the balance of the contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507","typeString":"literal_string \"EmissorCBIO: amount must be less than the balance of the contract\""}],"id":1447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"791:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"791:122:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"ExpressionStatement","src":"791:122:8"},{"condition":{"baseExpression":{"id":1460,"name":"allowedEmissors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"926:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1463,"indexExpression":{"expression":{"id":1461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"942:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"946:6:8","memberName":"sender","nodeType":"MemberAccess","src":"942:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"926:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"923:145:8","trueBody":{"id":1477,"nodeType":"Block","src":"954:114:8","statements":[{"expression":{"arguments":[{"id":1467,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"991:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1464,"name":"cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"968:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"978:12:8","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":757,"src":"968:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$664_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"968:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"968:42:8"},{"expression":{"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1471,"name":"cbiosEmited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"1024:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1473,"indexExpression":{"id":1472,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1036:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1024:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1474,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"1050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1024:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1476,"nodeType":"ExpressionStatement","src":"1024:33:8"}]}}]},"functionSelector":"736001f4","id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"emitCBIO","nameLocation":"653:8:8","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"_receiver","nameLocation":"670:9:8","nodeType":"VariableDeclaration","scope":1480,"src":"662:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"_amount","nameLocation":"689:7:8","nodeType":"VariableDeclaration","scope":1480,"src":"681:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"661:36:8"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"705:0:8"},"scope":1505,"src":"644:430:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1491,"nodeType":"Block","src":"1149:49:8","statements":[{"expression":{"baseExpression":{"id":1487,"name":"allowedEmissors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1166:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1489,"indexExpression":{"id":1488,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1182:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1166:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1486,"id":1490,"nodeType":"Return","src":"1159:32:8"}]},"functionSelector":"8fa2a903","id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"isAddressAllowed","nameLocation":"1089:16:8","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"_address","nameLocation":"1114:8:8","nodeType":"VariableDeclaration","scope":1492,"src":"1106:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:18:8"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1492,"src":"1144:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1484,"name":"bool","nodeType":"ElementaryTypeName","src":"1144:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1143:6:8"},"scope":1505,"src":"1080:118:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1503,"nodeType":"Block","src":"1271:45:8","statements":[{"expression":{"baseExpression":{"id":1499,"name":"cbiosEmited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"1288:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1501,"indexExpression":{"id":1500,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1300:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1288:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1498,"id":1502,"nodeType":"Return","src":"1281:28:8"}]},"functionSelector":"25e05750","id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"getCBIOSemited","nameLocation":"1213:14:8","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"_address","nameLocation":"1236:8:8","nodeType":"VariableDeclaration","scope":1504,"src":"1228:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:18:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"1266:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint","nodeType":"ElementaryTypeName","src":"1266:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:6:8"},"scope":1505,"src":"1204:112:8","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1506,"src":"180:1138:8","usedErrors":[]}],"src":"32:1286:8"},"id":8},"contracts/Exchange.sol":{"ast":{"absolutePath":"contracts/Exchange.sol","exportedSymbols":{"Context":[1358],"ERC20":[586],"Exchange":[1890],"IERC20":[664],"IERC20Metadata":[689]},"id":1891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1507,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1891,"sourceUnit":587,"src":"57:55:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1509,"name":"ERC20","nameLocations":["135:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"135:5:9"},"id":1510,"nodeType":"InheritanceSpecifier","src":"135:5:9"}],"canonicalName":"Exchange","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1890,"linearizedBaseContracts":[1890,586,689,664,1358],"name":"Exchange","nameLocation":"123:8:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c68f5eaa","id":1512,"mutability":"mutable","name":"cbiosTokenAddress","nameLocation":"163:17:9","nodeType":"VariableDeclaration","scope":1890,"src":"148:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"148:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1535,"nodeType":"Block","src":"243:134:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"_Cbiostoken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"261:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"284:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"276:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"276:7:9","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"276:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"261:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e2061646472657373207061737365642069732061206e756c6c2061646472657373","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"288:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982","typeString":"literal_string \"Token address passed is a null address\""},"value":"Token address passed is a null address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982","typeString":"literal_string \"Token address passed is a null address\""}],"id":1521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"253:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"253:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"ExpressionStatement","src":"253:76:9"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"cbiosTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"339:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1532,"name":"_Cbiostoken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"359:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"339:31:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1534,"nodeType":"ExpressionStatement","src":"339:31:9"}]},"id":1536,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4342696f73","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"226:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b9c3f4b0a260a172cea13cd0dd269b8c327d8e164538a7b319dfdd475b7c772","typeString":"literal_string \"CBios\""},"value":"CBios"},{"hexValue":"4342494f","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"235:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0118a9b2efa123fbfdc4a46151f5a6d249bfe6e72fc93e83ca0e829feb9c6527","typeString":"literal_string \"CBIO\""},"value":"CBIO"}],"id":1519,"kind":"baseConstructorSpecifier","modifierName":{"id":1516,"name":"ERC20","nameLocations":["220:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"220:5:9"},"nodeType":"ModifierInvocation","src":"220:22:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"_Cbiostoken","nameLocation":"207:11:9","nodeType":"VariableDeclaration","scope":1536,"src":"199:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"198:21:9"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"243:0:9"},"scope":1890,"src":"187:190:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1551,"nodeType":"Block","src":"432:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1547,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"492:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"484:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:9","typeDescriptions":{}}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"484:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1542,"name":"cbiosTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"455:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1541,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"449:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"449:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"474:9:9","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":98,"src":"449:34:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"449:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1540,"id":1550,"nodeType":"Return","src":"442:56:9"}]},"functionSelector":"59bf5d39","id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"getReserve","nameLocation":"392:10:9","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[],"src":"402:2:9"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1552,"src":"426:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint","nodeType":"ElementaryTypeName","src":"426:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:6:9"},"scope":1890,"src":"383:122:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1666,"nodeType":"Block","src":"577:867:9","statements":[{"assignments":[1560],"declarations":[{"constant":false,"id":1560,"mutability":"mutable","name":"liquidity","nameLocation":"592:9:9","nodeType":"VariableDeclaration","scope":1666,"src":"587:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint","nodeType":"ElementaryTypeName","src":"587:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1561,"nodeType":"VariableDeclarationStatement","src":"587:14:9"},{"assignments":[1563],"declarations":[{"constant":false,"id":1563,"mutability":"mutable","name":"ethBalance","nameLocation":"616:10:9","nodeType":"VariableDeclaration","scope":1666,"src":"611:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint","nodeType":"ElementaryTypeName","src":"611:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1569,"initialValue":{"expression":{"arguments":[{"id":1566,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"637:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"629:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:9","typeDescriptions":{}}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"629:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"643:7:9","memberName":"balance","nodeType":"MemberAccess","src":"629:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"611:39:9"},{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"cbiosTokenReserve","nameLocation":"665:17:9","nodeType":"VariableDeclaration","scope":1666,"src":"660:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint","nodeType":"ElementaryTypeName","src":"660:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1574,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1572,"name":"getReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"685:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"685:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"660:37:9"},{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"cbiosToken","nameLocation":"713:10:9","nodeType":"VariableDeclaration","scope":1666,"src":"707:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"},"typeName":{"id":1576,"nodeType":"UserDefinedTypeName","pathNode":{"id":1575,"name":"ERC20","nameLocations":["707:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"707:5:9"},"referencedDeclaration":586,"src":"707:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"visibility":"internal"}],"id":1581,"initialValue":{"arguments":[{"id":1579,"name":"cbiosTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"732:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1578,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"726:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"726:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"nodeType":"VariableDeclarationStatement","src":"707:43:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"cbiosTokenReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"764:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"785:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"764:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1662,"nodeType":"Block","src":"957:454:9","statements":[{"assignments":[1609],"declarations":[{"constant":false,"id":1609,"mutability":"mutable","name":"ethReserve","nameLocation":"976:10:9","nodeType":"VariableDeclaration","scope":1662,"src":"971:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint","nodeType":"ElementaryTypeName","src":"971:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1614,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"990:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1003:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1007:5:9","memberName":"value","nodeType":"MemberAccess","src":"1003:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"990:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"971:41:9"},{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"cbiosTokenAmount","nameLocation":"1031:16:9","nodeType":"VariableDeclaration","scope":1662,"src":"1026:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint","nodeType":"ElementaryTypeName","src":"1026:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1625,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1051:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1055:5:9","memberName":"value","nodeType":"MemberAccess","src":"1051:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1619,"name":"cbiosTokenReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1063:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1051:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1050:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":1622,"name":"ethReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1083:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1082:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1050:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1026:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"1117:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1628,"name":"cbiosTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1128:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1117:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206f6620746f6b656e732073656e74206973206c657373207468616e20746865206d696e696d756d20746f6b656e73207265717569726564","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1146:64:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4","typeString":"literal_string \"Amount of tokens sent is less than the minimum tokens required\""},"value":"Amount of tokens sent is less than the minimum tokens required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4","typeString":"literal_string \"Amount of tokens sent is less than the minimum tokens required\""}],"id":1626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1109:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:102:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"1109:102:9"},{"expression":{"arguments":[{"expression":{"id":1636,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1249:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1253:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1249:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1640,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1269:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1261:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:9","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1261:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1642,"name":"cbiosTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1276:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1633,"name":"cbiosToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1225:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1236:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":199,"src":"1225:23:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1225:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1644,"nodeType":"ExpressionStatement","src":"1225:68:9"},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1645,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"1307:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1646,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1320:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1320:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1648,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1336:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1340:5:9","memberName":"value","nodeType":"MemberAccess","src":"1336:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1320:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1319:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1652,"name":"ethReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1348:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1319:39:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1307:51:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1655,"nodeType":"ExpressionStatement","src":"1307:51:9"},{"expression":{"arguments":[{"expression":{"id":1657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1378:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1382:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1378:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1659,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"1390:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"1372:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"1372:28:9"}]},"id":1663,"nodeType":"IfStatement","src":"761:650:9","trueBody":{"id":1607,"nodeType":"Block","src":"788:163:9","statements":[{"expression":{"arguments":[{"expression":{"id":1588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:6:9","memberName":"sender","nodeType":"MemberAccess","src":"826:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1592,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"846:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"838:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:9","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"838:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1594,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"853:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1585,"name":"cbiosToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"802:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"813:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":199,"src":"802:23:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"802:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1596,"nodeType":"ExpressionStatement","src":"802:59:9"},{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"876:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1598,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"888:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"876:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1600,"nodeType":"ExpressionStatement","src":"876:22:9"},{"expression":{"arguments":[{"expression":{"id":1602,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"918:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"922:6:9","memberName":"sender","nodeType":"MemberAccess","src":"918:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1604,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"930:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1601,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"912:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"ExpressionStatement","src":"912:28:9"}]}},{"expression":{"id":1664,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"1428:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1558,"id":1665,"nodeType":"Return","src":"1421:16:9"}]},"functionSelector":"51c6590a","id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"520:12:9","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"_amount","nameLocation":"538:7:9","nodeType":"VariableDeclaration","scope":1667,"src":"533:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint","nodeType":"ElementaryTypeName","src":"533:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:14:9"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"571:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint","nodeType":"ElementaryTypeName","src":"571:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"570:6:9"},"scope":1890,"src":"511:933:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"1518:507:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1536:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1546:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1536:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5f616d6f756e742073686f756c642062652067726561746572207468616e207a65726f","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1549:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98","typeString":"literal_string \"_amount should be greater than zero\""},"value":"_amount should be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98","typeString":"literal_string \"_amount should be greater than zero\""}],"id":1676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1528:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1682,"nodeType":"ExpressionStatement","src":"1528:59:9"},{"assignments":[1684],"declarations":[{"constant":false,"id":1684,"mutability":"mutable","name":"ethReserve","nameLocation":"1602:10:9","nodeType":"VariableDeclaration","scope":1743,"src":"1597:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint","nodeType":"ElementaryTypeName","src":"1597:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1690,"initialValue":{"expression":{"arguments":[{"id":1687,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1623:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1615:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:9","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1615:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1615:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1597:39:9"},{"assignments":[1692],"declarations":[{"constant":false,"id":1692,"mutability":"mutable","name":"_totalSupply","nameLocation":"1651:12:9","nodeType":"VariableDeclaration","scope":1743,"src":"1646:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint","nodeType":"ElementaryTypeName","src":"1646:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1695,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1693,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1666:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1646:33:9"},{"assignments":[1697],"declarations":[{"constant":false,"id":1697,"mutability":"mutable","name":"ethAmount","nameLocation":"1694:9:9","nodeType":"VariableDeclaration","scope":1743,"src":"1689:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint","nodeType":"ElementaryTypeName","src":"1689:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1704,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"ethReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1707:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1699,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1707:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1706:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1702,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1730:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1706:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1689:53:9"},{"assignments":[1706],"declarations":[{"constant":false,"id":1706,"mutability":"mutable","name":"cbiosTokenAmount","nameLocation":"1757:16:9","nodeType":"VariableDeclaration","scope":1743,"src":"1752:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint","nodeType":"ElementaryTypeName","src":"1752:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1714,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1707,"name":"getReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"1777:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1709,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1777:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1776:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1712,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1802:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1776:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1752:62:9"},{"expression":{"arguments":[{"expression":{"id":1716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1830:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1834:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1830:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1715,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"1824:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"ExpressionStatement","src":"1824:26:9"},{"expression":{"arguments":[{"id":1727,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1889:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1868:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1872:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1868:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1860:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"1860:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1880:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"1860:28:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1729,"nodeType":"ExpressionStatement","src":"1860:39:9"},{"expression":{"arguments":[{"expression":{"id":1734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1943:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1947:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1943:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"cbiosTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1955:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1731,"name":"cbiosTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"1915:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1730,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1909:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1934:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":123,"src":"1909:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"ExpressionStatement","src":"1909:63:9"},{"expression":{"components":[{"id":1739,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1990:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1740,"name":"cbiosTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2001:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1989:29:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":1675,"id":1742,"nodeType":"Return","src":"1982:36:9"}]},"functionSelector":"9c8f9f23","id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"1459:15:9","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"_amount","nameLocation":"1480:7:9","nodeType":"VariableDeclaration","scope":1744,"src":"1475:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint","nodeType":"ElementaryTypeName","src":"1475:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1474:14:9"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"1505:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint","nodeType":"ElementaryTypeName","src":"1505:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"1512:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint","nodeType":"ElementaryTypeName","src":"1512:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1504:13:9"},"scope":1890,"src":"1450:575:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1791,"nodeType":"Block","src":"2184:315:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"inputReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2202:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2217:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2202:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"outputReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2222:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2238:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2222:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2202:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207265736572766573","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2241:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e","typeString":"literal_string \"invalid reserves\""},"value":"invalid reserves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e","typeString":"literal_string \"invalid reserves\""}],"id":1755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2194:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2194:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"2194:66:9"},{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"inputAmountWithFee","nameLocation":"2278:18:9","nodeType":"VariableDeclaration","scope":1791,"src":"2270:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1771,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1768,"name":"inputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2299:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3939","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_99_by_1","typeString":"int_const 99"},"value":"99"},"src":"2299:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2270:45:9"},{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"numerator","nameLocation":"2333:9:9","nodeType":"VariableDeclaration","scope":1791,"src":"2325:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"inputAmountWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2345:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1775,"name":"outputReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2366:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2345:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2325:54:9"},{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"denominator","nameLocation":"2397:11:9","nodeType":"VariableDeclaration","scope":1791,"src":"2389:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1786,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"inputReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2412:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2427:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2412:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2411:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1784,"name":"inputAmountWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2434:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2411:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:63:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"2469:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"2481:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2469:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1754,"id":1790,"nodeType":"Return","src":"2462:30:9"}]},"functionSelector":"7386479e","id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOfTokens","nameLocation":"2040:17:9","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"inputAmount","nameLocation":"2075:11:9","nodeType":"VariableDeclaration","scope":1792,"src":"2067:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"inputReserve","nameLocation":"2104:12:9","nodeType":"VariableDeclaration","scope":1792,"src":"2096:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"outputReserve","nameLocation":"2134:13:9","nodeType":"VariableDeclaration","scope":1792,"src":"2126:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2057:96:9"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1792,"src":"2175:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2174:9:9"},"scope":1890,"src":"2031:468:9","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1834,"nodeType":"Block","src":"2562:354:9","statements":[{"assignments":[1798],"declarations":[{"constant":false,"id":1798,"mutability":"mutable","name":"tokenReserve","nameLocation":"2580:12:9","nodeType":"VariableDeclaration","scope":1834,"src":"2572:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1801,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1799,"name":"getReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2595:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2595:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2572:35:9"},{"assignments":[1803],"declarations":[{"constant":false,"id":1803,"mutability":"mutable","name":"tokensBought","nameLocation":"2626:12:9","nodeType":"VariableDeclaration","scope":1834,"src":"2618:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1817,"initialValue":{"arguments":[{"expression":{"id":1805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2672:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2676:5:9","memberName":"value","nodeType":"MemberAccess","src":"2672:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1809,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2703:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2695:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"2695:7:9","typeDescriptions":{}}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2709:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2695:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2723:5:9","memberName":"value","nodeType":"MemberAccess","src":"2719:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2695:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1815,"name":"tokenReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2742:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1804,"name":"getAmountOfTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2641:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:123:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2618:146:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"tokensBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2783:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1820,"name":"_minTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2799:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2783:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e74206f757470757420616d6f756e74","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2811:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac","typeString":"literal_string \"insufficient output amount\""},"value":"insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac","typeString":"literal_string \"insufficient output amount\""}],"id":1818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2775:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"2775:65:9"},{"expression":{"arguments":[{"expression":{"id":1829,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2884:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2888:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2884:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1831,"name":"tokensBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2896:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1826,"name":"cbiosTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2856:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1825,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2850:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":123,"src":"2850:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"ExpressionStatement","src":"2850:59:9"}]},"functionSelector":"860865dd","id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"ethToCbiosToken","nameLocation":"2514:15:9","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"_minTokens","nameLocation":"2535:10:9","nodeType":"VariableDeclaration","scope":1835,"src":"2530:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint","nodeType":"ElementaryTypeName","src":"2530:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2529:17:9"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[],"src":"2562:0:9"},"scope":1890,"src":"2505:411:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1888,"nodeType":"Block","src":"2986:446:9","statements":[{"assignments":[1843],"declarations":[{"constant":false,"id":1843,"mutability":"mutable","name":"tokenReserve","nameLocation":"3004:12:9","nodeType":"VariableDeclaration","scope":1888,"src":"2996:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"2996:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1846,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1844,"name":"getReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"3019:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2996:35:9"},{"assignments":[1848],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"ethBought","nameLocation":"3049:9:9","nodeType":"VariableDeclaration","scope":1888,"src":"3041:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1858,"initialValue":{"arguments":[{"id":1850,"name":"_tokensSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"3092:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1851,"name":"tokenReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"3117:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1854,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3151:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3143:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:9","typeDescriptions":{}}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3157:7:9","memberName":"balance","nodeType":"MemberAccess","src":"3143:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"name":"getAmountOfTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"3061:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3061:113:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3041:133:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1860,"name":"ethBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3192:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1861,"name":"_minEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3205:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3192:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e74206f757470757420616d6f756e74","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3214:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac","typeString":"literal_string \"insufficient output amount\""},"value":"insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac","typeString":"literal_string \"insufficient output amount\""}],"id":1859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3184:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1865,"nodeType":"ExpressionStatement","src":"3184:59:9"},{"expression":{"arguments":[{"expression":{"id":1870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3304:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3308:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3304:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1874,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3336:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1890","typeString":"contract Exchange"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3328:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:9","typeDescriptions":{}}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3328:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1876,"name":"_tokensSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"3355:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1867,"name":"cbiosTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"3259:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1866,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3253:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3278:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":199,"src":"3253:37:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:123:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"ExpressionStatement","src":"3253:123:9"},{"expression":{"arguments":[{"id":1885,"name":"ethBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3415:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3394:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3398:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3394:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"3386:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"3386:28:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"ExpressionStatement","src":"3386:39:9"}]},"functionSelector":"2dfb72b3","id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"cbiosTokenToEth","nameLocation":"2931:15:9","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"_tokensSold","nameLocation":"2952:11:9","nodeType":"VariableDeclaration","scope":1889,"src":"2947:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint","nodeType":"ElementaryTypeName","src":"2947:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"_minEth","nameLocation":"2970:7:9","nodeType":"VariableDeclaration","scope":1889,"src":"2965:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint","nodeType":"ElementaryTypeName","src":"2965:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2946:32:9"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[],"src":"2986:0:9"},"scope":1890,"src":"2922:510:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1891,"src":"114:3320:9","usedErrors":[]}],"src":"32:3402:9"},"id":9},"contracts/RetireCBIO.sol":{"ast":{"absolutePath":"contracts/RetireCBIO.sol","exportedSymbols":{"Address":[1336],"Context":[1358],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"IERC20Permit":[725],"RetirerCBIO":[2008],"SafeERC20":[1006]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1892,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2009,"sourceUnit":587,"src":"57:55:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2009,"sourceUnit":1007,"src":"113:65:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RetirerCBIO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"RetirerCBIO","nameLocation":"189:11:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1898,"libraryName":{"id":1895,"name":"SafeERC20","nameLocations":["212:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"212:9:10"},"nodeType":"UsingForDirective","src":"206:26:10","typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"ERC20","nameLocations":["226:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"226:5:10"},"referencedDeclaration":586,"src":"226:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}}},{"constant":false,"functionSelector":"99e1f6f9","id":1901,"mutability":"mutable","name":"cbioToken","nameLocation":"251:9:10","nodeType":"VariableDeclaration","scope":2008,"src":"238:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"},"typeName":{"id":1900,"nodeType":"UserDefinedTypeName","pathNode":{"id":1899,"name":"ERC20","nameLocations":["238:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"238:5:10"},"referencedDeclaration":586,"src":"238:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"visibility":"public"},{"constant":false,"id":1905,"mutability":"mutable","name":"allowedRetire","nameLocation":"291:13:10","nodeType":"VariableDeclaration","scope":2008,"src":"266:38:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1904,"keyType":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"266:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1903,"name":"bool","nodeType":"ElementaryTypeName","src":"285:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"cbiosRetired","nameLocation":"335:12:10","nodeType":"VariableDeclaration","scope":2008,"src":"310:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1908,"keyType":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"310:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1907,"name":"uint","nodeType":"ElementaryTypeName","src":"329:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"ownerExchange","nameLocation":"361:13:10","nodeType":"VariableDeclaration","scope":2008,"src":"353:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"413:82:10","statements":[{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1916,"name":"cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"423:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1918,"name":"_cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"441:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1917,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"435:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$586_$","typeString":"type(contract ERC20)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"435:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"src":"423:29:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1921,"nodeType":"ExpressionStatement","src":"423:29:10"},{"expression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1922,"name":"ownerExchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"462:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"478:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"482:6:10","memberName":"sender","nodeType":"MemberAccess","src":"478:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"462:26:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1926,"nodeType":"ExpressionStatement","src":"462:26:10"}]},"id":1928,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"_cbioToken","nameLocation":"401:10:10","nodeType":"VariableDeclaration","scope":1928,"src":"393:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"392:20:10"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"413:0:10"},"scope":2008,"src":"381:114:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1944,"nodeType":"Block","src":"530:104:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1931,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"543:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"547:6:10","memberName":"sender","nodeType":"MemberAccess","src":"543:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1933,"name":"ownerExchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"557:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"543:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1943,"nodeType":"IfStatement","src":"540:88:10","trueBody":{"id":1942,"nodeType":"Block","src":"571:57:10","statements":[{"expression":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1935,"name":"allowedRetire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"585:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1938,"indexExpression":{"expression":{"id":1936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"599:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"603:6:10","memberName":"sender","nodeType":"MemberAccess","src":"599:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"585:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"613:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"585:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1941,"nodeType":"ExpressionStatement","src":"585:32:10"}]}}]},"functionSelector":"3374ccba","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"addRetirer","nameLocation":"510:10:10","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[],"src":"520:2:10"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"530:0:10"},"scope":2008,"src":"501:133:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1956,"nodeType":"Block","src":"709:47:10","statements":[{"expression":{"baseExpression":{"id":1952,"name":"allowedRetire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"726:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1954,"indexExpression":{"id":1953,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"740:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"726:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1951,"id":1955,"nodeType":"Return","src":"719:30:10"}]},"functionSelector":"8fa2a903","id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"isAddressAllowed","nameLocation":"649:16:10","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"_address","nameLocation":"674:8:10","nodeType":"VariableDeclaration","scope":1957,"src":"666:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"665:18:10"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"704:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1949,"name":"bool","nodeType":"ElementaryTypeName","src":"704:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"703:6:10"},"scope":2008,"src":"640:116:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1968,"nodeType":"Block","src":"829:46:10","statements":[{"expression":{"baseExpression":{"id":1964,"name":"cbiosRetired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"846:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1966,"indexExpression":{"id":1965,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"859:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"846:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1963,"id":1967,"nodeType":"Return","src":"839:29:10"}]},"functionSelector":"3ca9dd5e","id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"getCBIOSRetired","nameLocation":"770:15:10","nodeType":"FunctionDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"_address","nameLocation":"794:8:10","nodeType":"VariableDeclaration","scope":1969,"src":"786:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"785:18:10"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"824:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint","nodeType":"ElementaryTypeName","src":"824:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:6:10"},"scope":2008,"src":"761:114:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2006,"nodeType":"Block","src":"942:250:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"960:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"970:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"960:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265746972654342494f3a20616d6f756e74206d7573742062652067726561746572207468616e2030","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"973:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49","typeString":"literal_string \"RetireCBIO: amount must be greater than 0\""},"value":"RetireCBIO: amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49","typeString":"literal_string \"RetireCBIO: amount must be greater than 0\""}],"id":1976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"952:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"952:65:10"},{"condition":{"baseExpression":{"id":1983,"name":"allowedRetire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"1030:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1986,"indexExpression":{"expression":{"id":1984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1044:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1048:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1044:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1030:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2005,"nodeType":"IfStatement","src":"1027:159:10","trueBody":{"id":2004,"nodeType":"Block","src":"1056:130:10","statements":[{"expression":{"arguments":[{"id":1990,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"1097:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1993,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1114:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_RetirerCBIO_$2008","typeString":"contract RetirerCBIO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RetirerCBIO_$2008","typeString":"contract RetirerCBIO"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1106:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:10","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1106:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1995,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1987,"name":"cbioToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"1070:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$586","typeString":"contract ERC20"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1080:16:10","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":783,"src":"1070:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$664_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1070:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"1070:59:10"},{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1998,"name":"cbiosRetired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"1143:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2000,"indexExpression":{"id":1999,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"1156:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1143:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2001,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"1143:32:10"}]}}]},"functionSelector":"4d00c736","id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"RetireCBIO","nameLocation":"890:10:10","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"_sender","nameLocation":"909:7:10","nodeType":"VariableDeclaration","scope":2007,"src":"901:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"_amount","nameLocation":"926:7:10","nodeType":"VariableDeclaration","scope":2007,"src":"918:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"900:34:10"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"942:0:10"},"scope":2008,"src":"881:311:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2009,"src":"180:1015:10","usedErrors":[]}],"src":"32:1164:10"},"id":10}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"423:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:11"},"nodeType":"YulFunctionCall","src":"433:12:11"},"nodeType":"YulExpressionStatement","src":"433:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:11"},{"body":{"nodeType":"YulBlock","src":"546:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:11"},"nodeType":"YulFunctionCall","src":"556:12:11"},"nodeType":"YulExpressionStatement","src":"556:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:11"},{"body":{"nodeType":"YulBlock","src":"628:54:11","statements":[{"nodeType":"YulAssignment","src":"638:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:11"},"nodeType":"YulFunctionCall","src":"652:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:11"},"nodeType":"YulFunctionCall","src":"668:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:11"},"nodeType":"YulFunctionCall","src":"648:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:11","type":""}],"src":"580:102:11"},{"body":{"nodeType":"YulBlock","src":"716:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:11"},"nodeType":"YulFunctionCall","src":"726:88:11"},"nodeType":"YulExpressionStatement","src":"726:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:11"},"nodeType":"YulFunctionCall","src":"823:15:11"},"nodeType":"YulExpressionStatement","src":"823:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:11"},"nodeType":"YulFunctionCall","src":"847:15:11"},"nodeType":"YulExpressionStatement","src":"847:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:11"},{"body":{"nodeType":"YulBlock","src":"917:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:11"},"nodeType":"YulFunctionCall","src":"957:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:11"},"nodeType":"YulFunctionCall","src":"945:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:11"},"nodeType":"YulFunctionCall","src":"1098:18:11"},"nodeType":"YulExpressionStatement","src":"1098:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:11"},"nodeType":"YulFunctionCall","src":"1036:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:11"},"nodeType":"YulFunctionCall","src":"1072:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:11"},"nodeType":"YulFunctionCall","src":"1033:62:11"},"nodeType":"YulIf","src":"1030:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:11"},"nodeType":"YulFunctionCall","src":"1127:22:11"},"nodeType":"YulExpressionStatement","src":"1127:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:11","type":""}],"src":"874:281:11"},{"body":{"nodeType":"YulBlock","src":"1202:88:11","statements":[{"nodeType":"YulAssignment","src":"1212:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:11"},"nodeType":"YulFunctionCall","src":"1222:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:11"},"nodeType":"YulFunctionCall","src":"1251:33:11"},"nodeType":"YulExpressionStatement","src":"1251:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:11","type":""}],"src":"1161:129:11"},{"body":{"nodeType":"YulBlock","src":"1363:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:11"},"nodeType":"YulFunctionCall","src":"1470:18:11"},"nodeType":"YulExpressionStatement","src":"1470:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:11"},"nodeType":"YulFunctionCall","src":"1437:30:11"},"nodeType":"YulIf","src":"1434:56:11"},{"nodeType":"YulAssignment","src":"1500:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:11"},"nodeType":"YulFunctionCall","src":"1508:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:11"}]},{"nodeType":"YulAssignment","src":"1574:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:11"},"nodeType":"YulFunctionCall","src":"1582:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:11","type":""}],"src":"1296:308:11"},{"body":{"nodeType":"YulBlock","src":"1672:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:11"},"nodeType":"YulFunctionCall","src":"1772:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:11"},"nodeType":"YulFunctionCall","src":"1791:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:11"},"nodeType":"YulFunctionCall","src":"1785:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:11"},"nodeType":"YulFunctionCall","src":"1765:39:11"},"nodeType":"YulExpressionStatement","src":"1765:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:11"},"nodeType":"YulFunctionCall","src":"1709:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:11","statements":[{"nodeType":"YulAssignment","src":"1725:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:11"},"nodeType":"YulFunctionCall","src":"1730:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:11","statements":[]},"src":"1701:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:11"},"nodeType":"YulFunctionCall","src":"1830:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:11"},"nodeType":"YulFunctionCall","src":"1823:27:11"},"nodeType":"YulExpressionStatement","src":"1823:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:11","type":""}],"src":"1610:246:11"},{"body":{"nodeType":"YulBlock","src":"1957:339:11","statements":[{"nodeType":"YulAssignment","src":"1967:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:11"},"nodeType":"YulFunctionCall","src":"1992:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:11"},"nodeType":"YulFunctionCall","src":"1976:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:11"},"nodeType":"YulFunctionCall","src":"2051:21:11"},"nodeType":"YulExpressionStatement","src":"2051:21:11"},{"nodeType":"YulVariableDeclaration","src":"2081:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:11"},"nodeType":"YulFunctionCall","src":"2092:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:11"},"nodeType":"YulFunctionCall","src":"2148:79:11"},"nodeType":"YulExpressionStatement","src":"2148:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:11"},"nodeType":"YulFunctionCall","src":"2123:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:11"},"nodeType":"YulFunctionCall","src":"2120:25:11"},"nodeType":"YulIf","src":"2117:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:11"},"nodeType":"YulFunctionCall","src":"2238:52:11"},"nodeType":"YulExpressionStatement","src":"2238:52:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:11","type":""}],"src":"1862:434:11"},{"body":{"nodeType":"YulBlock","src":"2389:282:11","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:11"},"nodeType":"YulFunctionCall","src":"2440:79:11"},"nodeType":"YulExpressionStatement","src":"2440:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:11"},"nodeType":"YulFunctionCall","src":"2413:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:11"},"nodeType":"YulFunctionCall","src":"2409:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:11"},"nodeType":"YulFunctionCall","src":"2402:35:11"},"nodeType":"YulIf","src":"2399:122:11"},{"nodeType":"YulVariableDeclaration","src":"2530:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:11"},"nodeType":"YulFunctionCall","src":"2544:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:11"},"nodeType":"YulFunctionCall","src":"2634:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:11"},"nodeType":"YulFunctionCall","src":"2575:90:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:11","type":""}],"src":"2316:355:11"},{"body":{"nodeType":"YulBlock","src":"2791:739:11","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:11"},"nodeType":"YulFunctionCall","src":"2839:79:11"},"nodeType":"YulExpressionStatement","src":"2839:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:11"},"nodeType":"YulFunctionCall","src":"2808:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:11"},"nodeType":"YulFunctionCall","src":"2804:32:11"},"nodeType":"YulIf","src":"2801:119:11"},{"nodeType":"YulBlock","src":"2930:291:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:11"},"nodeType":"YulFunctionCall","src":"2965:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:11"},"nodeType":"YulFunctionCall","src":"2959:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:11"},"nodeType":"YulFunctionCall","src":"3032:79:11"},"nodeType":"YulExpressionStatement","src":"3032:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:11"},"nodeType":"YulFunctionCall","src":"2999:30:11"},"nodeType":"YulIf","src":"2996:117:11"},{"nodeType":"YulAssignment","src":"3127:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:11"},"nodeType":"YulFunctionCall","src":"3179:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:11"},"nodeType":"YulFunctionCall","src":"3137:74:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:11"}]}]},{"nodeType":"YulBlock","src":"3231:292:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:11"},"nodeType":"YulFunctionCall","src":"3266:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:11"},"nodeType":"YulFunctionCall","src":"3260:25:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:11"},"nodeType":"YulFunctionCall","src":"3334:79:11"},"nodeType":"YulExpressionStatement","src":"3334:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:11"},"nodeType":"YulFunctionCall","src":"3301:30:11"},"nodeType":"YulIf","src":"3298:117:11"},{"nodeType":"YulAssignment","src":"3429:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:11"},"nodeType":"YulFunctionCall","src":"3481:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:11"},"nodeType":"YulFunctionCall","src":"3439:74:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:11","type":""}],"src":"2677:853:11"},{"body":{"nodeType":"YulBlock","src":"3595:40:11","statements":[{"nodeType":"YulAssignment","src":"3606:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:11"},"nodeType":"YulFunctionCall","src":"3616:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:11","type":""}],"src":"3536:99:11"},{"body":{"nodeType":"YulBlock","src":"3669:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:11"},"nodeType":"YulFunctionCall","src":"3679:88:11"},"nodeType":"YulExpressionStatement","src":"3679:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:11"},"nodeType":"YulFunctionCall","src":"3776:15:11"},"nodeType":"YulExpressionStatement","src":"3776:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:11"},"nodeType":"YulFunctionCall","src":"3800:15:11"},"nodeType":"YulExpressionStatement","src":"3800:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:11"},{"body":{"nodeType":"YulBlock","src":"3878:269:11","statements":[{"nodeType":"YulAssignment","src":"3888:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:11"},"nodeType":"YulFunctionCall","src":"3898:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:11"},"nodeType":"YulFunctionCall","src":"3945:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:11","statements":[{"nodeType":"YulAssignment","src":"4010:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:11"},"nodeType":"YulFunctionCall","src":"4020:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:11"},"nodeType":"YulFunctionCall","src":"3969:26:11"},"nodeType":"YulIf","src":"3966:81:11"},{"body":{"nodeType":"YulBlock","src":"4099:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:11"},"nodeType":"YulFunctionCall","src":"4113:18:11"},"nodeType":"YulExpressionStatement","src":"4113:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:11"},"nodeType":"YulFunctionCall","src":"4083:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:11"},"nodeType":"YulFunctionCall","src":"4060:38:11"},"nodeType":"YulIf","src":"4057:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:11","type":""}],"src":"3827:320:11"},{"body":{"nodeType":"YulBlock","src":"4207:87:11","statements":[{"nodeType":"YulAssignment","src":"4217:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:11"},"nodeType":"YulFunctionCall","src":"4238:14:11"},"nodeType":"YulExpressionStatement","src":"4238:14:11"},{"nodeType":"YulAssignment","src":"4261:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:11"},"nodeType":"YulFunctionCall","src":"4269:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:11","type":""}],"src":"4153:141:11"},{"body":{"nodeType":"YulBlock","src":"4344:49:11","statements":[{"nodeType":"YulAssignment","src":"4354:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:11"},"nodeType":"YulFunctionCall","src":"4364:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:11","type":""}],"src":"4300:93:11"},{"body":{"nodeType":"YulBlock","src":"4452:54:11","statements":[{"nodeType":"YulAssignment","src":"4462:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:11"},"nodeType":"YulFunctionCall","src":"4483:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:11","type":""}],"src":"4399:107:11"},{"body":{"nodeType":"YulBlock","src":"4588:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:11"},"nodeType":"YulFunctionCall","src":"4615:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:11"},"nodeType":"YulFunctionCall","src":"4654:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:11","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:11"},"nodeType":"YulFunctionCall","src":"4772:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:11"}]},{"nodeType":"YulAssignment","src":"4820:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:11"},"nodeType":"YulFunctionCall","src":"4840:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:11"},"nodeType":"YulFunctionCall","src":"4829:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:11"}]},{"nodeType":"YulAssignment","src":"4859:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:11"},"nodeType":"YulFunctionCall","src":"4879:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:11"},"nodeType":"YulFunctionCall","src":"4869:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:11","type":""}],"src":"4512:393:11"},{"body":{"nodeType":"YulBlock","src":"4956:32:11","statements":[{"nodeType":"YulAssignment","src":"4966:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:11","type":""}],"src":"4911:77:11"},{"body":{"nodeType":"YulBlock","src":"5026:28:11","statements":[{"nodeType":"YulAssignment","src":"5036:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:11","type":""}],"src":"4994:60:11"},{"body":{"nodeType":"YulBlock","src":"5120:82:11","statements":[{"nodeType":"YulAssignment","src":"5130:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:11"},"nodeType":"YulFunctionCall","src":"5170:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:11"},"nodeType":"YulFunctionCall","src":"5161:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:11"},"nodeType":"YulFunctionCall","src":"5143:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:11","type":""}],"src":"5060:142:11"},{"body":{"nodeType":"YulBlock","src":"5255:28:11","statements":[{"nodeType":"YulAssignment","src":"5265:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:11","type":""}],"src":"5208:75:11"},{"body":{"nodeType":"YulBlock","src":"5365:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:11"},"nodeType":"YulFunctionCall","src":"5399:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:11"},"nodeType":"YulFunctionCall","src":"5488:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:11"},"nodeType":"YulFunctionCall","src":"5509:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:11"},"nodeType":"YulFunctionCall","src":"5460:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:11"},"nodeType":"YulFunctionCall","src":"5447:105:11"},"nodeType":"YulExpressionStatement","src":"5447:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:11","type":""}],"src":"5289:269:11"},{"body":{"nodeType":"YulBlock","src":"5613:24:11","statements":[{"nodeType":"YulAssignment","src":"5623:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:11","type":""}],"src":"5564:73:11"},{"body":{"nodeType":"YulBlock","src":"5696:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:11"},"nodeType":"YulFunctionCall","src":"5720:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:11"},"nodeType":"YulFunctionCall","src":"5761:65:11"},"nodeType":"YulExpressionStatement","src":"5761:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:11","type":""}],"src":"5643:189:11"},{"body":{"nodeType":"YulBlock","src":"5888:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:11"},"nodeType":"YulFunctionCall","src":"5969:39:11"},"nodeType":"YulExpressionStatement","src":"5969:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:11"},"nodeType":"YulFunctionCall","src":"5905:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:11","statements":[{"nodeType":"YulAssignment","src":"5922:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:11"},"nodeType":"YulFunctionCall","src":"5931:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:11","statements":[]},"src":"5898:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:11","type":""}],"src":"5838:186:11"},{"body":{"nodeType":"YulBlock","src":"6109:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:11"},"nodeType":"YulFunctionCall","src":"6165:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:11"},"nodeType":"YulFunctionCall","src":"6249:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:11"},"nodeType":"YulFunctionCall","src":"6235:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:11","statements":[{"nodeType":"YulAssignment","src":"6438:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:11"},"nodeType":"YulFunctionCall","src":"6417:18:11"},"nodeType":"YulIf","src":"6414:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:11"},"nodeType":"YulFunctionCall","src":"6532:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:11"},"nodeType":"YulFunctionCall","src":"6518:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:11"},"nodeType":"YulFunctionCall","src":"6476:80:11"},"nodeType":"YulExpressionStatement","src":"6476:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:11"},"nodeType":"YulFunctionCall","src":"6123:11:11"},"nodeType":"YulIf","src":"6120:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:11","type":""}],"src":"6030:543:11"},{"body":{"nodeType":"YulBlock","src":"6642:54:11","statements":[{"nodeType":"YulAssignment","src":"6652:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:11"},"nodeType":"YulFunctionCall","src":"6673:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:11","type":""}],"src":"6579:117:11"},{"body":{"nodeType":"YulBlock","src":"6753:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:11"},"nodeType":"YulFunctionCall","src":"6808:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:11"},"nodeType":"YulFunctionCall","src":"6823:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:11"},"nodeType":"YulFunctionCall","src":"6779:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:11"},"nodeType":"YulFunctionCall","src":"6775:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:11","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:11"},"nodeType":"YulFunctionCall","src":"6850:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:11","type":""}],"src":"6702:169:11"},{"body":{"nodeType":"YulBlock","src":"6957:214:11","statements":[{"nodeType":"YulAssignment","src":"7090:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:11"},"nodeType":"YulFunctionCall","src":"7098:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:11"}]},{"nodeType":"YulAssignment","src":"7136:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:11"},"nodeType":"YulFunctionCall","src":"7153:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:11"},"nodeType":"YulFunctionCall","src":"7144:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:11","type":""}],"src":"6876:295:11"},{"body":{"nodeType":"YulBlock","src":"7268:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:11"},"nodeType":"YulFunctionCall","src":"7293:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:11"},"nodeType":"YulFunctionCall","src":"7417:18:11"},"nodeType":"YulExpressionStatement","src":"7417:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:11"},"nodeType":"YulFunctionCall","src":"7384:30:11"},"nodeType":"YulIf","src":"7381:56:11"},{"nodeType":"YulVariableDeclaration","src":"7447:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:11"},"nodeType":"YulFunctionCall","src":"7487:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:11"},"nodeType":"YulFunctionCall","src":"7461:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:11"},"nodeType":"YulFunctionCall","src":"7546:67:11"},"nodeType":"YulExpressionStatement","src":"7546:67:11"},{"nodeType":"YulVariableDeclaration","src":"7623:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:11","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:11"},"nodeType":"YulFunctionCall","src":"7756:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:11"},"nodeType":"YulFunctionCall","src":"7744:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:11"},"nodeType":"YulFunctionCall","src":"7794:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:11"},"nodeType":"YulFunctionCall","src":"7951:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:11"},"nodeType":"YulFunctionCall","src":"7945:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:11"},"nodeType":"YulFunctionCall","src":"7930:42:11"},"nodeType":"YulExpressionStatement","src":"7930:42:11"},{"nodeType":"YulAssignment","src":"7989:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:11"},"nodeType":"YulFunctionCall","src":"7999:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:11"}]},{"nodeType":"YulAssignment","src":"8030:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:11"},"nodeType":"YulFunctionCall","src":"8043:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:11"},"nodeType":"YulFunctionCall","src":"7875:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:11","statements":[{"nodeType":"YulAssignment","src":"7892:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:11"},"nodeType":"YulFunctionCall","src":"7897:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:11","statements":[]},"src":"7867:208:11"},{"body":{"nodeType":"YulBlock","src":"8111:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:11"},"nodeType":"YulFunctionCall","src":"8152:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:11"},"nodeType":"YulFunctionCall","src":"8146:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:11"},"nodeType":"YulFunctionCall","src":"8234:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:11"},"nodeType":"YulFunctionCall","src":"8204:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:11"},"nodeType":"YulFunctionCall","src":"8189:64:11"},"nodeType":"YulExpressionStatement","src":"8189:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:11"},"nodeType":"YulFunctionCall","src":"8091:19:11"},"nodeType":"YulIf","src":"8088:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:11"},"nodeType":"YulFunctionCall","src":"8297:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:11"},"nodeType":"YulFunctionCall","src":"8293:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:11"},"nodeType":"YulFunctionCall","src":"8280:36:11"},"nodeType":"YulExpressionStatement","src":"8280:36:11"}]},"nodeType":"YulCase","src":"7708:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:11","statements":[{"nodeType":"YulAssignment","src":"8412:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:11"},"nodeType":"YulFunctionCall","src":"8427:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:11"},"nodeType":"YulFunctionCall","src":"8421:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:11"},"nodeType":"YulIf","src":"8384:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:11"},"nodeType":"YulFunctionCall","src":"8487:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:11"},"nodeType":"YulFunctionCall","src":"8474:81:11"},"nodeType":"YulExpressionStatement","src":"8474:81:11"}]},"nodeType":"YulCase","src":"8335:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:11"},"nodeType":"YulFunctionCall","src":"7685:14:11"},"nodeType":"YulSwitch","src":"7678:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:11","type":""}],"src":"7176:1395:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122022aa650b1b36ae0633af54ab6ba0e50b6942067358fed8c24ead03892a063d3164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xAA PUSH6 0xB1B36AE0633 0xAF SLOAD 0xAB PUSH12 0xA0E50B6942067358FED8C24E 0xAD SUB DUP10 0x2A MOD RETURNDATASIZE BALANCE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:0:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_1348":{"entryPoint":1439,"id":1348,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1389:35:11","statements":[{"nodeType":"YulAssignment","src":"1399:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:11"},"nodeType":"YulFunctionCall","src":"1409:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:11","type":""}],"src":"1349:75:11"},{"body":{"nodeType":"YulBlock","src":"1519:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:11"},"nodeType":"YulFunctionCall","src":"1529:12:11"},"nodeType":"YulExpressionStatement","src":"1529:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:11"},{"body":{"nodeType":"YulBlock","src":"1642:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:12:11"},"nodeType":"YulExpressionStatement","src":"1652:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:11"},{"body":{"nodeType":"YulBlock","src":"1721:81:11","statements":[{"nodeType":"YulAssignment","src":"1731:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:11"},"nodeType":"YulFunctionCall","src":"1742:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:11","type":""}],"src":"1676:126:11"},{"body":{"nodeType":"YulBlock","src":"1853:51:11","statements":[{"nodeType":"YulAssignment","src":"1863:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:11"},"nodeType":"YulFunctionCall","src":"1874:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:11","type":""}],"src":"1808:96:11"},{"body":{"nodeType":"YulBlock","src":"1953:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:11"},"nodeType":"YulFunctionCall","src":"2012:12:11"},"nodeType":"YulExpressionStatement","src":"2012:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:11"},"nodeType":"YulFunctionCall","src":"1983:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:11"},"nodeType":"YulFunctionCall","src":"1973:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:11"},"nodeType":"YulFunctionCall","src":"1966:43:11"},"nodeType":"YulIf","src":"1963:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:11","type":""}],"src":"1910:122:11"},{"body":{"nodeType":"YulBlock","src":"2090:87:11","statements":[{"nodeType":"YulAssignment","src":"2100:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:11"},"nodeType":"YulFunctionCall","src":"2109:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:11"},"nodeType":"YulFunctionCall","src":"2138:33:11"},"nodeType":"YulExpressionStatement","src":"2138:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:11","type":""}],"src":"2038:139:11"},{"body":{"nodeType":"YulBlock","src":"2228:32:11","statements":[{"nodeType":"YulAssignment","src":"2238:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:11","type":""}],"src":"2183:77:11"},{"body":{"nodeType":"YulBlock","src":"2309:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:11"},"nodeType":"YulFunctionCall","src":"2368:12:11"},"nodeType":"YulExpressionStatement","src":"2368:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:11"},"nodeType":"YulFunctionCall","src":"2339:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:11"},"nodeType":"YulFunctionCall","src":"2329:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:11"},"nodeType":"YulFunctionCall","src":"2322:43:11"},"nodeType":"YulIf","src":"2319:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:11","type":""}],"src":"2266:122:11"},{"body":{"nodeType":"YulBlock","src":"2446:87:11","statements":[{"nodeType":"YulAssignment","src":"2456:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:11"},"nodeType":"YulFunctionCall","src":"2465:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:11"},"nodeType":"YulFunctionCall","src":"2494:33:11"},"nodeType":"YulExpressionStatement","src":"2494:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:11","type":""}],"src":"2394:139:11"},{"body":{"nodeType":"YulBlock","src":"2622:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:11"},"nodeType":"YulFunctionCall","src":"2670:79:11"},"nodeType":"YulExpressionStatement","src":"2670:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:32:11"},"nodeType":"YulIf","src":"2632:119:11"},{"nodeType":"YulBlock","src":"2761:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:11"},"nodeType":"YulFunctionCall","src":"2836:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:11"},"nodeType":"YulFunctionCall","src":"2815:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:11"}]}]},{"nodeType":"YulBlock","src":"2888:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:11"},"nodeType":"YulFunctionCall","src":"2943:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:11","type":""}],"src":"2539:474:11"},{"body":{"nodeType":"YulBlock","src":"3061:48:11","statements":[{"nodeType":"YulAssignment","src":"3071:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:11"},"nodeType":"YulFunctionCall","src":"3089:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:11"},"nodeType":"YulFunctionCall","src":"3082:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:11","type":""}],"src":"3019:90:11"},{"body":{"nodeType":"YulBlock","src":"3174:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:11"},"nodeType":"YulFunctionCall","src":"3196:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:11"},"nodeType":"YulFunctionCall","src":"3184:34:11"},"nodeType":"YulExpressionStatement","src":"3184:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:11","type":""}],"src":"3115:109:11"},{"body":{"nodeType":"YulBlock","src":"3322:118:11","statements":[{"nodeType":"YulAssignment","src":"3332:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:11"},"nodeType":"YulFunctionCall","src":"3415:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:11"},"nodeType":"YulFunctionCall","src":"3368:65:11"},"nodeType":"YulExpressionStatement","src":"3368:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:11","type":""}],"src":"3230:210:11"},{"body":{"nodeType":"YulBlock","src":"3511:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:11"},"nodeType":"YulFunctionCall","src":"3533:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:11"},"nodeType":"YulFunctionCall","src":"3521:37:11"},"nodeType":"YulExpressionStatement","src":"3521:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:11","type":""}],"src":"3446:118:11"},{"body":{"nodeType":"YulBlock","src":"3668:124:11","statements":[{"nodeType":"YulAssignment","src":"3678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:11"},"nodeType":"YulFunctionCall","src":"3686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:11"},"nodeType":"YulFunctionCall","src":"3714:71:11"},"nodeType":"YulExpressionStatement","src":"3714:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:11","type":""}],"src":"3570:222:11"},{"body":{"nodeType":"YulBlock","src":"3898:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:11"},"nodeType":"YulFunctionCall","src":"3946:79:11"},"nodeType":"YulExpressionStatement","src":"3946:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:32:11"},"nodeType":"YulIf","src":"3908:119:11"},{"nodeType":"YulBlock","src":"4037:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:11"},"nodeType":"YulFunctionCall","src":"4091:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:11"}]}]},{"nodeType":"YulBlock","src":"4164:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:11"},"nodeType":"YulFunctionCall","src":"4240:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:11"},"nodeType":"YulFunctionCall","src":"4219:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:11"}]}]},{"nodeType":"YulBlock","src":"4292:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:11"},"nodeType":"YulFunctionCall","src":"4347:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:11","type":""}],"src":"3798:619:11"},{"body":{"nodeType":"YulBlock","src":"4466:43:11","statements":[{"nodeType":"YulAssignment","src":"4476:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:11"},"nodeType":"YulFunctionCall","src":"4487:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:11","type":""}],"src":"4423:86:11"},{"body":{"nodeType":"YulBlock","src":"4576:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:11"},"nodeType":"YulFunctionCall","src":"4598:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:11"},"nodeType":"YulFunctionCall","src":"4586:35:11"},"nodeType":"YulExpressionStatement","src":"4586:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:11","type":""}],"src":"4515:112:11"},{"body":{"nodeType":"YulBlock","src":"4727:120:11","statements":[{"nodeType":"YulAssignment","src":"4737:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:11"},"nodeType":"YulFunctionCall","src":"4745:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:11"},"nodeType":"YulFunctionCall","src":"4822:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:11"},"nodeType":"YulFunctionCall","src":"4773:67:11"},"nodeType":"YulExpressionStatement","src":"4773:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:11","type":""}],"src":"4633:214:11"},{"body":{"nodeType":"YulBlock","src":"4919:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:11"},"nodeType":"YulFunctionCall","src":"4967:79:11"},"nodeType":"YulExpressionStatement","src":"4967:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:11"},"nodeType":"YulFunctionCall","src":"4936:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:11"},"nodeType":"YulFunctionCall","src":"4932:32:11"},"nodeType":"YulIf","src":"4929:119:11"},{"nodeType":"YulBlock","src":"5058:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:11"},"nodeType":"YulFunctionCall","src":"5133:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:11"},"nodeType":"YulFunctionCall","src":"5112:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:11","type":""}],"src":"4853:329:11"},{"body":{"nodeType":"YulBlock","src":"5271:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:11"},"nodeType":"YulFunctionCall","src":"5319:79:11"},"nodeType":"YulExpressionStatement","src":"5319:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:11"},"nodeType":"YulFunctionCall","src":"5288:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:11"},"nodeType":"YulFunctionCall","src":"5284:32:11"},"nodeType":"YulIf","src":"5281:119:11"},{"nodeType":"YulBlock","src":"5410:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:11"},"nodeType":"YulFunctionCall","src":"5485:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:11"},"nodeType":"YulFunctionCall","src":"5464:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:11"}]}]},{"nodeType":"YulBlock","src":"5537:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:11"},"nodeType":"YulFunctionCall","src":"5613:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:11"},"nodeType":"YulFunctionCall","src":"5592:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:11","type":""}],"src":"5188:474:11"},{"body":{"nodeType":"YulBlock","src":"5696:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:11"},"nodeType":"YulFunctionCall","src":"5706:88:11"},"nodeType":"YulExpressionStatement","src":"5706:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:11"},"nodeType":"YulFunctionCall","src":"5803:15:11"},"nodeType":"YulExpressionStatement","src":"5803:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:11"},"nodeType":"YulFunctionCall","src":"5827:15:11"},"nodeType":"YulExpressionStatement","src":"5827:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:11"},{"body":{"nodeType":"YulBlock","src":"5905:269:11","statements":[{"nodeType":"YulAssignment","src":"5915:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:11"},"nodeType":"YulFunctionCall","src":"5925:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:11"},"nodeType":"YulFunctionCall","src":"5972:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:11","statements":[{"nodeType":"YulAssignment","src":"6037:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:11"},"nodeType":"YulFunctionCall","src":"6047:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:11"},"nodeType":"YulFunctionCall","src":"5996:26:11"},"nodeType":"YulIf","src":"5993:81:11"},{"body":{"nodeType":"YulBlock","src":"6126:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:11"},"nodeType":"YulFunctionCall","src":"6140:18:11"},"nodeType":"YulExpressionStatement","src":"6140:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:11"},"nodeType":"YulFunctionCall","src":"6110:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:11"},"nodeType":"YulFunctionCall","src":"6087:38:11"},"nodeType":"YulIf","src":"6084:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:11","type":""}],"src":"5854:320:11"},{"body":{"nodeType":"YulBlock","src":"6208:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:11"},"nodeType":"YulFunctionCall","src":"6218:88:11"},"nodeType":"YulExpressionStatement","src":"6218:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:11"},"nodeType":"YulFunctionCall","src":"6315:15:11"},"nodeType":"YulExpressionStatement","src":"6315:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:11"},"nodeType":"YulFunctionCall","src":"6339:15:11"},"nodeType":"YulExpressionStatement","src":"6339:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:11"},{"body":{"nodeType":"YulBlock","src":"6410:147:11","statements":[{"nodeType":"YulAssignment","src":"6420:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:11"},"nodeType":"YulFunctionCall","src":"6425:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:11"}]},{"nodeType":"YulAssignment","src":"6454:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:11"},"nodeType":"YulFunctionCall","src":"6459:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:11"}]},{"nodeType":"YulAssignment","src":"6488:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:11"},"nodeType":"YulFunctionCall","src":"6495:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:11"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:11"},"nodeType":"YulFunctionCall","src":"6530:18:11"},"nodeType":"YulExpressionStatement","src":"6530:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:11"},"nodeType":"YulFunctionCall","src":"6517:10:11"},"nodeType":"YulIf","src":"6514:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:11","type":""}],"src":"6366:191:11"},{"body":{"nodeType":"YulBlock","src":"6669:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:11"},"nodeType":"YulFunctionCall","src":"6687:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:11"},"nodeType":"YulFunctionCall","src":"6680:58:11"},"nodeType":"YulExpressionStatement","src":"6680:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:11"},"nodeType":"YulFunctionCall","src":"6755:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:11"},"nodeType":"YulFunctionCall","src":"6748:32:11"},"nodeType":"YulExpressionStatement","src":"6748:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:11","type":""}],"src":"6563:224:11"},{"body":{"nodeType":"YulBlock","src":"6939:220:11","statements":[{"nodeType":"YulAssignment","src":"6949:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:11"},"nodeType":"YulFunctionCall","src":"6956:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:11"},"nodeType":"YulFunctionCall","src":"7032:93:11"},"nodeType":"YulExpressionStatement","src":"7032:93:11"},{"nodeType":"YulAssignment","src":"7134:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:11"},"nodeType":"YulFunctionCall","src":"7141:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:11","type":""}],"src":"6793:366:11"},{"body":{"nodeType":"YulBlock","src":"7336:248:11","statements":[{"nodeType":"YulAssignment","src":"7346:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:11"},"nodeType":"YulFunctionCall","src":"7354:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:11"},"nodeType":"YulFunctionCall","src":"7389:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:11"},"nodeType":"YulFunctionCall","src":"7408:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:11"},"nodeType":"YulFunctionCall","src":"7382:47:11"},"nodeType":"YulExpressionStatement","src":"7382:47:11"},{"nodeType":"YulAssignment","src":"7438:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:11"},"nodeType":"YulFunctionCall","src":"7446:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:11","type":""}],"src":"7165:419:11"},{"body":{"nodeType":"YulBlock","src":"7696:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:11"},"nodeType":"YulFunctionCall","src":"7714:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:11"},"nodeType":"YulFunctionCall","src":"7707:58:11"},"nodeType":"YulExpressionStatement","src":"7707:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:11"},"nodeType":"YulFunctionCall","src":"7782:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:11"},"nodeType":"YulFunctionCall","src":"7775:31:11"},"nodeType":"YulExpressionStatement","src":"7775:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:11","type":""}],"src":"7590:223:11"},{"body":{"nodeType":"YulBlock","src":"7965:220:11","statements":[{"nodeType":"YulAssignment","src":"7975:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:11"},"nodeType":"YulFunctionCall","src":"7982:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:11"},"nodeType":"YulFunctionCall","src":"8058:93:11"},"nodeType":"YulExpressionStatement","src":"8058:93:11"},{"nodeType":"YulAssignment","src":"8160:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:11"},"nodeType":"YulFunctionCall","src":"8167:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:11","type":""}],"src":"7819:366:11"},{"body":{"nodeType":"YulBlock","src":"8362:248:11","statements":[{"nodeType":"YulAssignment","src":"8372:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:11"},"nodeType":"YulFunctionCall","src":"8380:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:11"},"nodeType":"YulFunctionCall","src":"8415:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:11"},"nodeType":"YulFunctionCall","src":"8434:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:11"},"nodeType":"YulFunctionCall","src":"8408:47:11"},"nodeType":"YulExpressionStatement","src":"8408:47:11"},{"nodeType":"YulAssignment","src":"8464:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:11"},"nodeType":"YulFunctionCall","src":"8472:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:11","type":""}],"src":"8191:419:11"},{"body":{"nodeType":"YulBlock","src":"8722:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:11"},"nodeType":"YulFunctionCall","src":"8740:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:11"},"nodeType":"YulFunctionCall","src":"8733:58:11"},"nodeType":"YulExpressionStatement","src":"8733:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:11"},"nodeType":"YulFunctionCall","src":"8808:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:11"},"nodeType":"YulFunctionCall","src":"8801:29:11"},"nodeType":"YulExpressionStatement","src":"8801:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:11","type":""}],"src":"8616:221:11"},{"body":{"nodeType":"YulBlock","src":"8989:220:11","statements":[{"nodeType":"YulAssignment","src":"8999:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:11"},"nodeType":"YulFunctionCall","src":"9006:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:11"},"nodeType":"YulFunctionCall","src":"9082:93:11"},"nodeType":"YulExpressionStatement","src":"9082:93:11"},{"nodeType":"YulAssignment","src":"9184:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:11"},"nodeType":"YulFunctionCall","src":"9191:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:11","type":""}],"src":"8843:366:11"},{"body":{"nodeType":"YulBlock","src":"9386:248:11","statements":[{"nodeType":"YulAssignment","src":"9396:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:11"},"nodeType":"YulFunctionCall","src":"9404:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:11"},"nodeType":"YulFunctionCall","src":"9439:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:11"},"nodeType":"YulFunctionCall","src":"9458:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:11"},"nodeType":"YulFunctionCall","src":"9432:47:11"},"nodeType":"YulExpressionStatement","src":"9432:47:11"},{"nodeType":"YulAssignment","src":"9488:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:11"},"nodeType":"YulFunctionCall","src":"9496:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:11","type":""}],"src":"9215:419:11"},{"body":{"nodeType":"YulBlock","src":"9746:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:11"},"nodeType":"YulFunctionCall","src":"9764:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:11"},"nodeType":"YulFunctionCall","src":"9757:55:11"},"nodeType":"YulExpressionStatement","src":"9757:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:11","type":""}],"src":"9640:179:11"},{"body":{"nodeType":"YulBlock","src":"9971:220:11","statements":[{"nodeType":"YulAssignment","src":"9981:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:11"},"nodeType":"YulFunctionCall","src":"9988:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:11"},"nodeType":"YulFunctionCall","src":"10064:93:11"},"nodeType":"YulExpressionStatement","src":"10064:93:11"},{"nodeType":"YulAssignment","src":"10166:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:11"},"nodeType":"YulFunctionCall","src":"10173:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:11","type":""}],"src":"9825:366:11"},{"body":{"nodeType":"YulBlock","src":"10368:248:11","statements":[{"nodeType":"YulAssignment","src":"10378:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:11"},"nodeType":"YulFunctionCall","src":"10386:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:11"},"nodeType":"YulFunctionCall","src":"10421:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:11"},"nodeType":"YulFunctionCall","src":"10440:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:11"},"nodeType":"YulFunctionCall","src":"10414:47:11"},"nodeType":"YulExpressionStatement","src":"10414:47:11"},{"nodeType":"YulAssignment","src":"10470:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:11"},"nodeType":"YulFunctionCall","src":"10478:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:11","type":""}],"src":"10197:419:11"},{"body":{"nodeType":"YulBlock","src":"10728:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:11"},"nodeType":"YulFunctionCall","src":"10746:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:11"},"nodeType":"YulFunctionCall","src":"10739:58:11"},"nodeType":"YulExpressionStatement","src":"10739:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:11"},"nodeType":"YulFunctionCall","src":"10814:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:11"},"nodeType":"YulFunctionCall","src":"10807:32:11"},"nodeType":"YulExpressionStatement","src":"10807:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:11","type":""}],"src":"10622:224:11"},{"body":{"nodeType":"YulBlock","src":"10998:220:11","statements":[{"nodeType":"YulAssignment","src":"11008:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:11"},"nodeType":"YulFunctionCall","src":"11015:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:11"},"nodeType":"YulFunctionCall","src":"11091:93:11"},"nodeType":"YulExpressionStatement","src":"11091:93:11"},{"nodeType":"YulAssignment","src":"11193:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:11"},"nodeType":"YulFunctionCall","src":"11200:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:11","type":""}],"src":"10852:366:11"},{"body":{"nodeType":"YulBlock","src":"11395:248:11","statements":[{"nodeType":"YulAssignment","src":"11405:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:11"},"nodeType":"YulFunctionCall","src":"11413:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:11"},"nodeType":"YulFunctionCall","src":"11448:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:11"},"nodeType":"YulFunctionCall","src":"11467:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:11"},"nodeType":"YulFunctionCall","src":"11441:47:11"},"nodeType":"YulExpressionStatement","src":"11441:47:11"},{"nodeType":"YulAssignment","src":"11497:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:11"},"nodeType":"YulFunctionCall","src":"11505:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:11","type":""}],"src":"11224:419:11"},{"body":{"nodeType":"YulBlock","src":"11755:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:11"},"nodeType":"YulFunctionCall","src":"11773:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:11"},"nodeType":"YulFunctionCall","src":"11766:58:11"},"nodeType":"YulExpressionStatement","src":"11766:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:11"},"nodeType":"YulFunctionCall","src":"11841:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:11"},"nodeType":"YulFunctionCall","src":"11834:30:11"},"nodeType":"YulExpressionStatement","src":"11834:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:11","type":""}],"src":"11649:222:11"},{"body":{"nodeType":"YulBlock","src":"12023:220:11","statements":[{"nodeType":"YulAssignment","src":"12033:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:11"},"nodeType":"YulFunctionCall","src":"12040:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:11"},"nodeType":"YulFunctionCall","src":"12116:93:11"},"nodeType":"YulExpressionStatement","src":"12116:93:11"},{"nodeType":"YulAssignment","src":"12218:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:11"},"nodeType":"YulFunctionCall","src":"12225:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:11","type":""}],"src":"11877:366:11"},{"body":{"nodeType":"YulBlock","src":"12420:248:11","statements":[{"nodeType":"YulAssignment","src":"12430:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:11"},"nodeType":"YulFunctionCall","src":"12438:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:11"},"nodeType":"YulFunctionCall","src":"12473:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:11"},"nodeType":"YulFunctionCall","src":"12492:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:11"},"nodeType":"YulFunctionCall","src":"12466:47:11"},"nodeType":"YulExpressionStatement","src":"12466:47:11"},{"nodeType":"YulAssignment","src":"12522:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:11"},"nodeType":"YulFunctionCall","src":"12530:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:11","type":""}],"src":"12249:419:11"},{"body":{"nodeType":"YulBlock","src":"12780:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:11"},"nodeType":"YulFunctionCall","src":"12798:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:11"},"nodeType":"YulFunctionCall","src":"12791:58:11"},"nodeType":"YulExpressionStatement","src":"12791:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:11"},"nodeType":"YulFunctionCall","src":"12866:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:11"},"nodeType":"YulFunctionCall","src":"12859:33:11"},"nodeType":"YulExpressionStatement","src":"12859:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:11","type":""}],"src":"12674:225:11"},{"body":{"nodeType":"YulBlock","src":"13051:220:11","statements":[{"nodeType":"YulAssignment","src":"13061:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:11"},"nodeType":"YulFunctionCall","src":"13068:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:11"},"nodeType":"YulFunctionCall","src":"13144:93:11"},"nodeType":"YulExpressionStatement","src":"13144:93:11"},{"nodeType":"YulAssignment","src":"13246:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:11"},"nodeType":"YulFunctionCall","src":"13253:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:11","type":""}],"src":"12905:366:11"},{"body":{"nodeType":"YulBlock","src":"13448:248:11","statements":[{"nodeType":"YulAssignment","src":"13458:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:11"},"nodeType":"YulFunctionCall","src":"13466:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:11"},"nodeType":"YulFunctionCall","src":"13501:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:11"},"nodeType":"YulFunctionCall","src":"13520:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:11"},"nodeType":"YulFunctionCall","src":"13494:47:11"},"nodeType":"YulExpressionStatement","src":"13494:47:11"},{"nodeType":"YulAssignment","src":"13550:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:11"},"nodeType":"YulFunctionCall","src":"13558:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:11","type":""}],"src":"13277:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122022aa650b1b36ae0633af54ab6ba0e50b6942067358fed8c24ead03892a063d3164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xAA PUSH6 0xB1B36AE0633 0xAF SLOAD 0xAB PUSH12 0xA0E50B6942067358FED8C24E 0xAD SUB DUP10 0x2A MOD RETURNDATASIZE BALANCE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:0:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c918a02ccad7a5dc43a1fc86f4910938c3f32e7d7f7082282dfa568ca0d615964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP2 DUP11 MUL 0xCC 0xAD PUSH27 0x5DC43A1FC86F4910938C3F32E7D7F7082282DFA568CA0D61596473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"707:3748:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c918a02ccad7a5dc43a1fc86f4910938c3f32e7d7f7082282dfa568ca0d615964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP2 DUP11 MUL 0xCC 0xAD PUSH27 0x5DC43A1FC86F4910938C3F32E7D7F7082282DFA568CA0D61596473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"707:3748:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a09abdc3732e0c34fe4885aa8571bfb41a251fdcff68744f78a9499a155ab62c64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SWAP11 0xBD 0xC3 PUSH20 0x2E0C34FE4885AA8571BFB41A251FDCFF68744F78 0xA9 0x49 SWAP11 ISZERO GAS 0xB6 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a09abdc3732e0c34fe4885aa8571bfb41a251fdcff68744f78a9499a155ab62c64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SWAP11 0xBD 0xC3 PUSH20 0x2E0C34FE4885AA8571BFB41A251FDCFF68744F78 0xA9 0x49 SWAP11 ISZERO GAS 0xB6 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CBIOToken.sol":{"CBIO":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1377":{"entryPoint":null,"id":1377,"parameterSlots":0,"returnSlots":0},"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_585":{"entryPoint":569,"id":585,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":564,"id":574,"parameterSlots":3,"returnSlots":0},"@_mint_403":{"entryPoint":199,"id":403,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":1497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1676,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1693,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":732,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":574,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1439,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1617,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1053,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":868,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1014,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1208,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":753,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":679,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1178,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1146,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1570,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":632,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":585,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":928,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":769,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1133,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":986,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":1456,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":782,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":938,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":981,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7125:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"140:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:11"},"nodeType":"YulFunctionCall","src":"150:88:11"},"nodeType":"YulExpressionStatement","src":"150:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:11"},"nodeType":"YulFunctionCall","src":"247:15:11"},"nodeType":"YulExpressionStatement","src":"247:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:11"},"nodeType":"YulFunctionCall","src":"271:15:11"},"nodeType":"YulExpressionStatement","src":"271:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:11"},{"body":{"nodeType":"YulBlock","src":"326:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:11"},"nodeType":"YulFunctionCall","src":"336:88:11"},"nodeType":"YulExpressionStatement","src":"336:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:11"},"nodeType":"YulFunctionCall","src":"433:15:11"},"nodeType":"YulExpressionStatement","src":"433:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:11"},"nodeType":"YulFunctionCall","src":"457:15:11"},"nodeType":"YulExpressionStatement","src":"457:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:11"},{"body":{"nodeType":"YulBlock","src":"535:269:11","statements":[{"nodeType":"YulAssignment","src":"545:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:11"},"nodeType":"YulFunctionCall","src":"555:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:11"},"nodeType":"YulFunctionCall","src":"602:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:11","statements":[{"nodeType":"YulAssignment","src":"667:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:11"},"nodeType":"YulFunctionCall","src":"677:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:11"},"nodeType":"YulFunctionCall","src":"626:26:11"},"nodeType":"YulIf","src":"623:81:11"},{"body":{"nodeType":"YulBlock","src":"756:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:11"},"nodeType":"YulFunctionCall","src":"770:18:11"},"nodeType":"YulExpressionStatement","src":"770:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:11"},"nodeType":"YulFunctionCall","src":"740:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:11"},"nodeType":"YulFunctionCall","src":"717:38:11"},"nodeType":"YulIf","src":"714:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:11","type":""}],"src":"484:320:11"},{"body":{"nodeType":"YulBlock","src":"864:87:11","statements":[{"nodeType":"YulAssignment","src":"874:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:11"},"nodeType":"YulFunctionCall","src":"895:14:11"},"nodeType":"YulExpressionStatement","src":"895:14:11"},{"nodeType":"YulAssignment","src":"918:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:11"},"nodeType":"YulFunctionCall","src":"926:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:11","type":""}],"src":"810:141:11"},{"body":{"nodeType":"YulBlock","src":"1001:49:11","statements":[{"nodeType":"YulAssignment","src":"1011:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:11"},"nodeType":"YulFunctionCall","src":"1025:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:11"},"nodeType":"YulFunctionCall","src":"1021:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:11","type":""}],"src":"957:93:11"},{"body":{"nodeType":"YulBlock","src":"1109:54:11","statements":[{"nodeType":"YulAssignment","src":"1119:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:11"},"nodeType":"YulFunctionCall","src":"1140:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:11","type":""}],"src":"1056:107:11"},{"body":{"nodeType":"YulBlock","src":"1245:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:11"},"nodeType":"YulFunctionCall","src":"1272:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:11"},"nodeType":"YulFunctionCall","src":"1311:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:11","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:11"},"nodeType":"YulFunctionCall","src":"1429:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:11"}]},{"nodeType":"YulAssignment","src":"1477:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:11"},"nodeType":"YulFunctionCall","src":"1497:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:11"},"nodeType":"YulFunctionCall","src":"1486:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:11"}]},{"nodeType":"YulAssignment","src":"1516:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:11"},"nodeType":"YulFunctionCall","src":"1536:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:11"},"nodeType":"YulFunctionCall","src":"1526:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:11","type":""}],"src":"1169:393:11"},{"body":{"nodeType":"YulBlock","src":"1613:32:11","statements":[{"nodeType":"YulAssignment","src":"1623:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:11","type":""}],"src":"1568:77:11"},{"body":{"nodeType":"YulBlock","src":"1683:28:11","statements":[{"nodeType":"YulAssignment","src":"1693:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:11","type":""}],"src":"1651:60:11"},{"body":{"nodeType":"YulBlock","src":"1777:82:11","statements":[{"nodeType":"YulAssignment","src":"1787:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:11"},"nodeType":"YulFunctionCall","src":"1827:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:11"},"nodeType":"YulFunctionCall","src":"1818:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:11"},"nodeType":"YulFunctionCall","src":"1800:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:11","type":""}],"src":"1717:142:11"},{"body":{"nodeType":"YulBlock","src":"1912:28:11","statements":[{"nodeType":"YulAssignment","src":"1922:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:11","type":""}],"src":"1865:75:11"},{"body":{"nodeType":"YulBlock","src":"2022:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:11"},"nodeType":"YulFunctionCall","src":"2056:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:11"},"nodeType":"YulFunctionCall","src":"2145:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:11"},"nodeType":"YulFunctionCall","src":"2166:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:11"},"nodeType":"YulFunctionCall","src":"2117:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:11"},"nodeType":"YulFunctionCall","src":"2104:105:11"},"nodeType":"YulExpressionStatement","src":"2104:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:11","type":""}],"src":"1946:269:11"},{"body":{"nodeType":"YulBlock","src":"2270:24:11","statements":[{"nodeType":"YulAssignment","src":"2280:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:11","type":""}],"src":"2221:73:11"},{"body":{"nodeType":"YulBlock","src":"2353:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:11"},"nodeType":"YulFunctionCall","src":"2377:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:11"},"nodeType":"YulFunctionCall","src":"2418:65:11"},"nodeType":"YulExpressionStatement","src":"2418:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:11","type":""}],"src":"2300:189:11"},{"body":{"nodeType":"YulBlock","src":"2545:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:11"},"nodeType":"YulFunctionCall","src":"2626:39:11"},"nodeType":"YulExpressionStatement","src":"2626:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:11"},"nodeType":"YulFunctionCall","src":"2562:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:11","statements":[{"nodeType":"YulAssignment","src":"2579:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:11"},"nodeType":"YulFunctionCall","src":"2588:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:11","statements":[]},"src":"2555:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:11","type":""}],"src":"2495:186:11"},{"body":{"nodeType":"YulBlock","src":"2766:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:11"},"nodeType":"YulFunctionCall","src":"2822:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:11"},"nodeType":"YulFunctionCall","src":"2906:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:11"},"nodeType":"YulFunctionCall","src":"2892:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:11","statements":[{"nodeType":"YulAssignment","src":"3095:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:11"},"nodeType":"YulFunctionCall","src":"3074:18:11"},"nodeType":"YulIf","src":"3071:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:11"},"nodeType":"YulFunctionCall","src":"3189:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:11"},"nodeType":"YulFunctionCall","src":"3175:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:11"},"nodeType":"YulFunctionCall","src":"3133:80:11"},"nodeType":"YulExpressionStatement","src":"3133:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:11"},"nodeType":"YulFunctionCall","src":"2780:11:11"},"nodeType":"YulIf","src":"2777:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:11","type":""}],"src":"2687:543:11"},{"body":{"nodeType":"YulBlock","src":"3299:54:11","statements":[{"nodeType":"YulAssignment","src":"3309:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:11"},"nodeType":"YulFunctionCall","src":"3330:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:11","type":""}],"src":"3236:117:11"},{"body":{"nodeType":"YulBlock","src":"3410:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:11"},"nodeType":"YulFunctionCall","src":"3465:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:11"},"nodeType":"YulFunctionCall","src":"3480:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:11"},"nodeType":"YulFunctionCall","src":"3436:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:11"},"nodeType":"YulFunctionCall","src":"3432:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:11","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:11"},"nodeType":"YulFunctionCall","src":"3507:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:11","type":""}],"src":"3359:169:11"},{"body":{"nodeType":"YulBlock","src":"3614:214:11","statements":[{"nodeType":"YulAssignment","src":"3747:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:11"},"nodeType":"YulFunctionCall","src":"3755:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:11"}]},{"nodeType":"YulAssignment","src":"3793:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:11"},"nodeType":"YulFunctionCall","src":"3810:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:11"},"nodeType":"YulFunctionCall","src":"3801:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:11","type":""}],"src":"3533:295:11"},{"body":{"nodeType":"YulBlock","src":"3925:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:11"},"nodeType":"YulFunctionCall","src":"3950:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:11"},"nodeType":"YulFunctionCall","src":"4074:18:11"},"nodeType":"YulExpressionStatement","src":"4074:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:11"},"nodeType":"YulFunctionCall","src":"4041:30:11"},"nodeType":"YulIf","src":"4038:56:11"},{"nodeType":"YulVariableDeclaration","src":"4104:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:11"},"nodeType":"YulFunctionCall","src":"4144:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:11"},"nodeType":"YulFunctionCall","src":"4118:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:11"},"nodeType":"YulFunctionCall","src":"4203:67:11"},"nodeType":"YulExpressionStatement","src":"4203:67:11"},{"nodeType":"YulVariableDeclaration","src":"4280:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:11","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:11"},"nodeType":"YulFunctionCall","src":"4413:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:11"},"nodeType":"YulFunctionCall","src":"4401:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:11"},"nodeType":"YulFunctionCall","src":"4451:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:11"},"nodeType":"YulFunctionCall","src":"4608:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:11"},"nodeType":"YulFunctionCall","src":"4602:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:11"},"nodeType":"YulFunctionCall","src":"4587:42:11"},"nodeType":"YulExpressionStatement","src":"4587:42:11"},{"nodeType":"YulAssignment","src":"4646:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:11"},"nodeType":"YulFunctionCall","src":"4656:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:11"}]},{"nodeType":"YulAssignment","src":"4687:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:11"},"nodeType":"YulFunctionCall","src":"4700:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:11"},"nodeType":"YulFunctionCall","src":"4532:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:11","statements":[{"nodeType":"YulAssignment","src":"4549:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:11"},"nodeType":"YulFunctionCall","src":"4554:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:11","statements":[]},"src":"4524:208:11"},{"body":{"nodeType":"YulBlock","src":"4768:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:11"},"nodeType":"YulFunctionCall","src":"4809:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:11"},"nodeType":"YulFunctionCall","src":"4803:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:11"},"nodeType":"YulFunctionCall","src":"4891:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:11"},"nodeType":"YulFunctionCall","src":"4861:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:11"},"nodeType":"YulFunctionCall","src":"4846:64:11"},"nodeType":"YulExpressionStatement","src":"4846:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:11"},"nodeType":"YulFunctionCall","src":"4748:19:11"},"nodeType":"YulIf","src":"4745:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:11"},"nodeType":"YulFunctionCall","src":"4954:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:11"},"nodeType":"YulFunctionCall","src":"4950:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:11"},"nodeType":"YulFunctionCall","src":"4937:36:11"},"nodeType":"YulExpressionStatement","src":"4937:36:11"}]},"nodeType":"YulCase","src":"4365:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:11","statements":[{"nodeType":"YulAssignment","src":"5069:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:11"},"nodeType":"YulFunctionCall","src":"5084:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:11"},"nodeType":"YulFunctionCall","src":"5078:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:11"},"nodeType":"YulIf","src":"5041:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:11"},"nodeType":"YulFunctionCall","src":"5144:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:11"},"nodeType":"YulFunctionCall","src":"5131:81:11"},"nodeType":"YulExpressionStatement","src":"5131:81:11"}]},"nodeType":"YulCase","src":"4992:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:11"},"nodeType":"YulFunctionCall","src":"4342:14:11"},"nodeType":"YulSwitch","src":"4335:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:11","type":""}],"src":"3833:1395:11"},{"body":{"nodeType":"YulBlock","src":"5330:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5347:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5352:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5340:6:11"},"nodeType":"YulFunctionCall","src":"5340:19:11"},"nodeType":"YulExpressionStatement","src":"5340:19:11"},{"nodeType":"YulAssignment","src":"5368:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5387:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5392:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5383:3:11"},"nodeType":"YulFunctionCall","src":"5383:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5368:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5302:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"5307:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5318:11:11","type":""}],"src":"5234:169:11"},{"body":{"nodeType":"YulBlock","src":"5515:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5537:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5545:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:11"},"nodeType":"YulFunctionCall","src":"5533:14:11"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5549:33:11","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5526:6:11"},"nodeType":"YulFunctionCall","src":"5526:57:11"},"nodeType":"YulExpressionStatement","src":"5526:57:11"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5507:6:11","type":""}],"src":"5409:181:11"},{"body":{"nodeType":"YulBlock","src":"5742:220:11","statements":[{"nodeType":"YulAssignment","src":"5752:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5818:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5823:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5759:58:11"},"nodeType":"YulFunctionCall","src":"5759:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5752:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5924:3:11"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"5835:88:11"},"nodeType":"YulFunctionCall","src":"5835:93:11"},"nodeType":"YulExpressionStatement","src":"5835:93:11"},{"nodeType":"YulAssignment","src":"5937:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5948:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5953:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:11"},"nodeType":"YulFunctionCall","src":"5944:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5937:3:11"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5730:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5738:3:11","type":""}],"src":"5596:366:11"},{"body":{"nodeType":"YulBlock","src":"6139:248:11","statements":[{"nodeType":"YulAssignment","src":"6149:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6161:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6172:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6157:3:11"},"nodeType":"YulFunctionCall","src":"6157:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6149:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:11"},"nodeType":"YulFunctionCall","src":"6192:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6215:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6221:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6211:3:11"},"nodeType":"YulFunctionCall","src":"6211:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6185:6:11"},"nodeType":"YulFunctionCall","src":"6185:47:11"},"nodeType":"YulExpressionStatement","src":"6185:47:11"},{"nodeType":"YulAssignment","src":"6241:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6375:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6249:124:11"},"nodeType":"YulFunctionCall","src":"6249:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6241:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6119:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6134:4:11","type":""}],"src":"5968:419:11"},{"body":{"nodeType":"YulBlock","src":"6421:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6438:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6441:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6431:6:11"},"nodeType":"YulFunctionCall","src":"6431:88:11"},"nodeType":"YulExpressionStatement","src":"6431:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6535:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6538:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6528:6:11"},"nodeType":"YulFunctionCall","src":"6528:15:11"},"nodeType":"YulExpressionStatement","src":"6528:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6559:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6562:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6552:6:11"},"nodeType":"YulFunctionCall","src":"6552:15:11"},"nodeType":"YulExpressionStatement","src":"6552:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6393:180:11"},{"body":{"nodeType":"YulBlock","src":"6623:147:11","statements":[{"nodeType":"YulAssignment","src":"6633:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6656:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6638:17:11"},"nodeType":"YulFunctionCall","src":"6638:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6633:1:11"}]},{"nodeType":"YulAssignment","src":"6667:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6690:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6672:17:11"},"nodeType":"YulFunctionCall","src":"6672:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6667:1:11"}]},{"nodeType":"YulAssignment","src":"6701:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6712:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6715:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6708:3:11"},"nodeType":"YulFunctionCall","src":"6708:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6701:3:11"}]},{"body":{"nodeType":"YulBlock","src":"6741:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6743:16:11"},"nodeType":"YulFunctionCall","src":"6743:18:11"},"nodeType":"YulExpressionStatement","src":"6743:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6733:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"6736:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6730:2:11"},"nodeType":"YulFunctionCall","src":"6730:10:11"},"nodeType":"YulIf","src":"6727:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6610:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6613:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6619:3:11","type":""}],"src":"6579:191:11"},{"body":{"nodeType":"YulBlock","src":"6841:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6858:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6881:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6863:17:11"},"nodeType":"YulFunctionCall","src":"6863:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6851:6:11"},"nodeType":"YulFunctionCall","src":"6851:37:11"},"nodeType":"YulExpressionStatement","src":"6851:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6829:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6836:3:11","type":""}],"src":"6776:118:11"},{"body":{"nodeType":"YulBlock","src":"6998:124:11","statements":[{"nodeType":"YulAssignment","src":"7008:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7020:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7031:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7016:3:11"},"nodeType":"YulFunctionCall","src":"7016:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7008:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7088:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7101:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7112:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7097:3:11"},"nodeType":"YulFunctionCall","src":"7097:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7044:43:11"},"nodeType":"YulFunctionCall","src":"7044:71:11"},"nodeType":"YulExpressionStatement","src":"7044:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6970:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6982:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6993:4:11","type":""}],"src":"6900:222:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4372656469746F20646520446573636172626F6E697A6163616F000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4342494F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x4B8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x4B8 JUMP JUMPDEST POP POP POP PUSH3 0xC1 CALLER PUSH11 0x52B7D2DCC80CD2E4000000 PUSH3 0xC7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6BA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x130 SWAP1 PUSH3 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D PUSH1 0x0 DUP4 DUP4 PUSH3 0x234 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x161 SWAP2 SWAP1 PUSH3 0x651 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x214 SWAP2 SWAP1 PUSH3 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x230 PUSH1 0x0 DUP4 DUP4 PUSH3 0x239 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D6 JUMPI PUSH3 0x2D5 PUSH3 0x278 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x340 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x301 JUMP JUMPDEST PUSH3 0x34C DUP7 DUP4 PUSH3 0x301 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x399 PUSH3 0x393 PUSH3 0x38D DUP5 PUSH3 0x364 JUMP JUMPDEST PUSH3 0x36E JUMP JUMPDEST PUSH3 0x364 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B5 DUP4 PUSH3 0x378 JUMP JUMPDEST PUSH3 0x3CD PUSH3 0x3C4 DUP3 PUSH3 0x3A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x30E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3E4 PUSH3 0x3D5 JUMP JUMPDEST PUSH3 0x3F1 DUP2 DUP5 DUP5 PUSH3 0x3AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x419 JUMPI PUSH3 0x40D PUSH1 0x0 DUP3 PUSH3 0x3DA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x468 JUMPI PUSH3 0x432 DUP2 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x43D DUP5 PUSH3 0x2F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x44D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x465 PUSH3 0x45C DUP6 PUSH3 0x2F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x46D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A8 DUP4 DUP4 PUSH3 0x47A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C3 DUP3 PUSH3 0x23E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4DF JUMPI PUSH3 0x4DE PUSH3 0x249 JUMP JUMPDEST JUMPDEST PUSH3 0x4EB DUP3 SLOAD PUSH3 0x2A7 JUMP JUMPDEST PUSH3 0x4F8 DUP3 DUP3 DUP6 PUSH3 0x41D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x530 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x51B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x527 DUP6 DUP3 PUSH3 0x49A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x597 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x540 DUP7 PUSH3 0x2DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x56A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x543 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x58A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x586 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x47A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E8 PUSH1 0x1F DUP4 PUSH3 0x59F JUMP JUMPDEST SWAP2 POP PUSH3 0x5F5 DUP3 PUSH3 0x5B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x61B DUP2 PUSH3 0x5D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x65E DUP3 PUSH3 0x364 JUMP JUMPDEST SWAP2 POP PUSH3 0x66B DUP4 PUSH3 0x364 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x686 JUMPI PUSH3 0x685 PUSH3 0x622 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x697 DUP2 PUSH3 0x364 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x6CA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC ADDRESS MLOAD STATICCALL 0xCF 0xEC 0xD7 NUMBER 0xE7 DUP2 BALANCE 0xDC SWAP16 0xD7 DUP8 0xD9 0xB1 RETURN 0xC4 PUSH12 0xC1B1A795F958510D9D28F140 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"114:140:7:-:0;;;144:107;;;;;;;;;;1976:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;210:34:7::1;216:10;228:15;210:5;;;:34;;:::i;:::-;114:140:::0;;8567:535:0;8669:1;8650:21;;:7;:21;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;;;:49;;:::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;;;:48;;:::i;:::-;8567:535;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:169::-;5318:11;5352:6;5347:3;5340:19;5392:4;5387:3;5383:14;5368:29;;5234:169;;;;:::o;5409:181::-;5549:33;5545:1;5537:6;5533:14;5526:57;5409:181;:::o;5596:366::-;5738:3;5759:67;5823:2;5818:3;5759:67;:::i;:::-;5752:74;;5835:93;5924:3;5835:93;:::i;:::-;5953:2;5948:3;5944:12;5937:19;;5596:366;;;:::o;5968:419::-;6134:4;6172:2;6161:9;6157:18;6149:26;;6221:9;6215:4;6211:20;6207:1;6196:9;6192:17;6185:47;6249:131;6375:4;6249:131;:::i;:::-;6241:139;;5968:419;;;:::o;6393:180::-;6441:77;6438:1;6431:88;6538:4;6535:1;6528:15;6562:4;6559:1;6552:15;6579:191;6619:3;6638:20;6656:1;6638:20;:::i;:::-;6633:25;;6672:20;6690:1;6672:20;:::i;:::-;6667:25;;6715:1;6712;6708:9;6701:16;;6736:3;6733:1;6730:10;6727:36;;;6743:18;;:::i;:::-;6727:36;6579:191;;;;:::o;6776:118::-;6863:24;6881:5;6863:24;:::i;:::-;6858:3;6851:37;6776:118;;:::o;6900:222::-;6993:4;7031:2;7020:9;7016:18;7008:26;;7044:71;7112:1;7101:9;7097:17;7088:6;7044:71;:::i;:::-;6900:222;;;;:::o;114:140:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_1348":{"entryPoint":1439,"id":1348,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1389:35:11","statements":[{"nodeType":"YulAssignment","src":"1399:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:11"},"nodeType":"YulFunctionCall","src":"1409:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:11","type":""}],"src":"1349:75:11"},{"body":{"nodeType":"YulBlock","src":"1519:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:11"},"nodeType":"YulFunctionCall","src":"1529:12:11"},"nodeType":"YulExpressionStatement","src":"1529:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:11"},{"body":{"nodeType":"YulBlock","src":"1642:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:12:11"},"nodeType":"YulExpressionStatement","src":"1652:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:11"},{"body":{"nodeType":"YulBlock","src":"1721:81:11","statements":[{"nodeType":"YulAssignment","src":"1731:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:11"},"nodeType":"YulFunctionCall","src":"1742:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:11","type":""}],"src":"1676:126:11"},{"body":{"nodeType":"YulBlock","src":"1853:51:11","statements":[{"nodeType":"YulAssignment","src":"1863:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:11"},"nodeType":"YulFunctionCall","src":"1874:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:11","type":""}],"src":"1808:96:11"},{"body":{"nodeType":"YulBlock","src":"1953:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:11"},"nodeType":"YulFunctionCall","src":"2012:12:11"},"nodeType":"YulExpressionStatement","src":"2012:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:11"},"nodeType":"YulFunctionCall","src":"1983:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:11"},"nodeType":"YulFunctionCall","src":"1973:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:11"},"nodeType":"YulFunctionCall","src":"1966:43:11"},"nodeType":"YulIf","src":"1963:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:11","type":""}],"src":"1910:122:11"},{"body":{"nodeType":"YulBlock","src":"2090:87:11","statements":[{"nodeType":"YulAssignment","src":"2100:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:11"},"nodeType":"YulFunctionCall","src":"2109:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:11"},"nodeType":"YulFunctionCall","src":"2138:33:11"},"nodeType":"YulExpressionStatement","src":"2138:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:11","type":""}],"src":"2038:139:11"},{"body":{"nodeType":"YulBlock","src":"2228:32:11","statements":[{"nodeType":"YulAssignment","src":"2238:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:11","type":""}],"src":"2183:77:11"},{"body":{"nodeType":"YulBlock","src":"2309:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:11"},"nodeType":"YulFunctionCall","src":"2368:12:11"},"nodeType":"YulExpressionStatement","src":"2368:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:11"},"nodeType":"YulFunctionCall","src":"2339:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:11"},"nodeType":"YulFunctionCall","src":"2329:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:11"},"nodeType":"YulFunctionCall","src":"2322:43:11"},"nodeType":"YulIf","src":"2319:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:11","type":""}],"src":"2266:122:11"},{"body":{"nodeType":"YulBlock","src":"2446:87:11","statements":[{"nodeType":"YulAssignment","src":"2456:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:11"},"nodeType":"YulFunctionCall","src":"2465:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:11"},"nodeType":"YulFunctionCall","src":"2494:33:11"},"nodeType":"YulExpressionStatement","src":"2494:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:11","type":""}],"src":"2394:139:11"},{"body":{"nodeType":"YulBlock","src":"2622:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:11"},"nodeType":"YulFunctionCall","src":"2670:79:11"},"nodeType":"YulExpressionStatement","src":"2670:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:32:11"},"nodeType":"YulIf","src":"2632:119:11"},{"nodeType":"YulBlock","src":"2761:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:11"},"nodeType":"YulFunctionCall","src":"2836:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:11"},"nodeType":"YulFunctionCall","src":"2815:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:11"}]}]},{"nodeType":"YulBlock","src":"2888:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:11"},"nodeType":"YulFunctionCall","src":"2943:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:11","type":""}],"src":"2539:474:11"},{"body":{"nodeType":"YulBlock","src":"3061:48:11","statements":[{"nodeType":"YulAssignment","src":"3071:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:11"},"nodeType":"YulFunctionCall","src":"3089:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:11"},"nodeType":"YulFunctionCall","src":"3082:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:11","type":""}],"src":"3019:90:11"},{"body":{"nodeType":"YulBlock","src":"3174:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:11"},"nodeType":"YulFunctionCall","src":"3196:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:11"},"nodeType":"YulFunctionCall","src":"3184:34:11"},"nodeType":"YulExpressionStatement","src":"3184:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:11","type":""}],"src":"3115:109:11"},{"body":{"nodeType":"YulBlock","src":"3322:118:11","statements":[{"nodeType":"YulAssignment","src":"3332:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:11"},"nodeType":"YulFunctionCall","src":"3415:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:11"},"nodeType":"YulFunctionCall","src":"3368:65:11"},"nodeType":"YulExpressionStatement","src":"3368:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:11","type":""}],"src":"3230:210:11"},{"body":{"nodeType":"YulBlock","src":"3511:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:11"},"nodeType":"YulFunctionCall","src":"3533:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:11"},"nodeType":"YulFunctionCall","src":"3521:37:11"},"nodeType":"YulExpressionStatement","src":"3521:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:11","type":""}],"src":"3446:118:11"},{"body":{"nodeType":"YulBlock","src":"3668:124:11","statements":[{"nodeType":"YulAssignment","src":"3678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:11"},"nodeType":"YulFunctionCall","src":"3686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:11"},"nodeType":"YulFunctionCall","src":"3714:71:11"},"nodeType":"YulExpressionStatement","src":"3714:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:11","type":""}],"src":"3570:222:11"},{"body":{"nodeType":"YulBlock","src":"3898:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:11"},"nodeType":"YulFunctionCall","src":"3946:79:11"},"nodeType":"YulExpressionStatement","src":"3946:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:32:11"},"nodeType":"YulIf","src":"3908:119:11"},{"nodeType":"YulBlock","src":"4037:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:11"},"nodeType":"YulFunctionCall","src":"4091:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:11"}]}]},{"nodeType":"YulBlock","src":"4164:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:11"},"nodeType":"YulFunctionCall","src":"4240:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:11"},"nodeType":"YulFunctionCall","src":"4219:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:11"}]}]},{"nodeType":"YulBlock","src":"4292:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:11"},"nodeType":"YulFunctionCall","src":"4347:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:11","type":""}],"src":"3798:619:11"},{"body":{"nodeType":"YulBlock","src":"4466:43:11","statements":[{"nodeType":"YulAssignment","src":"4476:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:11"},"nodeType":"YulFunctionCall","src":"4487:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:11","type":""}],"src":"4423:86:11"},{"body":{"nodeType":"YulBlock","src":"4576:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:11"},"nodeType":"YulFunctionCall","src":"4598:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:11"},"nodeType":"YulFunctionCall","src":"4586:35:11"},"nodeType":"YulExpressionStatement","src":"4586:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:11","type":""}],"src":"4515:112:11"},{"body":{"nodeType":"YulBlock","src":"4727:120:11","statements":[{"nodeType":"YulAssignment","src":"4737:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:11"},"nodeType":"YulFunctionCall","src":"4745:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:11"},"nodeType":"YulFunctionCall","src":"4822:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:11"},"nodeType":"YulFunctionCall","src":"4773:67:11"},"nodeType":"YulExpressionStatement","src":"4773:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:11","type":""}],"src":"4633:214:11"},{"body":{"nodeType":"YulBlock","src":"4919:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:11"},"nodeType":"YulFunctionCall","src":"4967:79:11"},"nodeType":"YulExpressionStatement","src":"4967:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:11"},"nodeType":"YulFunctionCall","src":"4936:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:11"},"nodeType":"YulFunctionCall","src":"4932:32:11"},"nodeType":"YulIf","src":"4929:119:11"},{"nodeType":"YulBlock","src":"5058:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:11"},"nodeType":"YulFunctionCall","src":"5133:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:11"},"nodeType":"YulFunctionCall","src":"5112:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:11","type":""}],"src":"4853:329:11"},{"body":{"nodeType":"YulBlock","src":"5271:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:11"},"nodeType":"YulFunctionCall","src":"5319:79:11"},"nodeType":"YulExpressionStatement","src":"5319:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:11"},"nodeType":"YulFunctionCall","src":"5288:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:11"},"nodeType":"YulFunctionCall","src":"5284:32:11"},"nodeType":"YulIf","src":"5281:119:11"},{"nodeType":"YulBlock","src":"5410:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:11"},"nodeType":"YulFunctionCall","src":"5485:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:11"},"nodeType":"YulFunctionCall","src":"5464:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:11"}]}]},{"nodeType":"YulBlock","src":"5537:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:11"},"nodeType":"YulFunctionCall","src":"5613:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:11"},"nodeType":"YulFunctionCall","src":"5592:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:11","type":""}],"src":"5188:474:11"},{"body":{"nodeType":"YulBlock","src":"5696:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:11"},"nodeType":"YulFunctionCall","src":"5706:88:11"},"nodeType":"YulExpressionStatement","src":"5706:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:11"},"nodeType":"YulFunctionCall","src":"5803:15:11"},"nodeType":"YulExpressionStatement","src":"5803:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:11"},"nodeType":"YulFunctionCall","src":"5827:15:11"},"nodeType":"YulExpressionStatement","src":"5827:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:11"},{"body":{"nodeType":"YulBlock","src":"5905:269:11","statements":[{"nodeType":"YulAssignment","src":"5915:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:11"},"nodeType":"YulFunctionCall","src":"5925:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:11"},"nodeType":"YulFunctionCall","src":"5972:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:11","statements":[{"nodeType":"YulAssignment","src":"6037:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:11"},"nodeType":"YulFunctionCall","src":"6047:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:11"},"nodeType":"YulFunctionCall","src":"5996:26:11"},"nodeType":"YulIf","src":"5993:81:11"},{"body":{"nodeType":"YulBlock","src":"6126:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:11"},"nodeType":"YulFunctionCall","src":"6140:18:11"},"nodeType":"YulExpressionStatement","src":"6140:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:11"},"nodeType":"YulFunctionCall","src":"6110:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:11"},"nodeType":"YulFunctionCall","src":"6087:38:11"},"nodeType":"YulIf","src":"6084:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:11","type":""}],"src":"5854:320:11"},{"body":{"nodeType":"YulBlock","src":"6208:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:11"},"nodeType":"YulFunctionCall","src":"6218:88:11"},"nodeType":"YulExpressionStatement","src":"6218:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:11"},"nodeType":"YulFunctionCall","src":"6315:15:11"},"nodeType":"YulExpressionStatement","src":"6315:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:11"},"nodeType":"YulFunctionCall","src":"6339:15:11"},"nodeType":"YulExpressionStatement","src":"6339:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:11"},{"body":{"nodeType":"YulBlock","src":"6410:147:11","statements":[{"nodeType":"YulAssignment","src":"6420:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:11"},"nodeType":"YulFunctionCall","src":"6425:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:11"}]},{"nodeType":"YulAssignment","src":"6454:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:11"},"nodeType":"YulFunctionCall","src":"6459:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:11"}]},{"nodeType":"YulAssignment","src":"6488:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:11"},"nodeType":"YulFunctionCall","src":"6495:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:11"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:11"},"nodeType":"YulFunctionCall","src":"6530:18:11"},"nodeType":"YulExpressionStatement","src":"6530:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:11"},"nodeType":"YulFunctionCall","src":"6517:10:11"},"nodeType":"YulIf","src":"6514:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:11","type":""}],"src":"6366:191:11"},{"body":{"nodeType":"YulBlock","src":"6669:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:11"},"nodeType":"YulFunctionCall","src":"6687:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:11"},"nodeType":"YulFunctionCall","src":"6680:58:11"},"nodeType":"YulExpressionStatement","src":"6680:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:11"},"nodeType":"YulFunctionCall","src":"6755:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:11"},"nodeType":"YulFunctionCall","src":"6748:32:11"},"nodeType":"YulExpressionStatement","src":"6748:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:11","type":""}],"src":"6563:224:11"},{"body":{"nodeType":"YulBlock","src":"6939:220:11","statements":[{"nodeType":"YulAssignment","src":"6949:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:11"},"nodeType":"YulFunctionCall","src":"6956:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:11"},"nodeType":"YulFunctionCall","src":"7032:93:11"},"nodeType":"YulExpressionStatement","src":"7032:93:11"},{"nodeType":"YulAssignment","src":"7134:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:11"},"nodeType":"YulFunctionCall","src":"7141:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:11","type":""}],"src":"6793:366:11"},{"body":{"nodeType":"YulBlock","src":"7336:248:11","statements":[{"nodeType":"YulAssignment","src":"7346:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:11"},"nodeType":"YulFunctionCall","src":"7354:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:11"},"nodeType":"YulFunctionCall","src":"7389:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:11"},"nodeType":"YulFunctionCall","src":"7408:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:11"},"nodeType":"YulFunctionCall","src":"7382:47:11"},"nodeType":"YulExpressionStatement","src":"7382:47:11"},{"nodeType":"YulAssignment","src":"7438:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:11"},"nodeType":"YulFunctionCall","src":"7446:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:11","type":""}],"src":"7165:419:11"},{"body":{"nodeType":"YulBlock","src":"7696:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:11"},"nodeType":"YulFunctionCall","src":"7714:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:11"},"nodeType":"YulFunctionCall","src":"7707:58:11"},"nodeType":"YulExpressionStatement","src":"7707:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:11"},"nodeType":"YulFunctionCall","src":"7782:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:11"},"nodeType":"YulFunctionCall","src":"7775:31:11"},"nodeType":"YulExpressionStatement","src":"7775:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:11","type":""}],"src":"7590:223:11"},{"body":{"nodeType":"YulBlock","src":"7965:220:11","statements":[{"nodeType":"YulAssignment","src":"7975:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:11"},"nodeType":"YulFunctionCall","src":"7982:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:11"},"nodeType":"YulFunctionCall","src":"8058:93:11"},"nodeType":"YulExpressionStatement","src":"8058:93:11"},{"nodeType":"YulAssignment","src":"8160:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:11"},"nodeType":"YulFunctionCall","src":"8167:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:11","type":""}],"src":"7819:366:11"},{"body":{"nodeType":"YulBlock","src":"8362:248:11","statements":[{"nodeType":"YulAssignment","src":"8372:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:11"},"nodeType":"YulFunctionCall","src":"8380:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:11"},"nodeType":"YulFunctionCall","src":"8415:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:11"},"nodeType":"YulFunctionCall","src":"8434:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:11"},"nodeType":"YulFunctionCall","src":"8408:47:11"},"nodeType":"YulExpressionStatement","src":"8408:47:11"},{"nodeType":"YulAssignment","src":"8464:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:11"},"nodeType":"YulFunctionCall","src":"8472:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:11","type":""}],"src":"8191:419:11"},{"body":{"nodeType":"YulBlock","src":"8722:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:11"},"nodeType":"YulFunctionCall","src":"8740:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:11"},"nodeType":"YulFunctionCall","src":"8733:58:11"},"nodeType":"YulExpressionStatement","src":"8733:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:11"},"nodeType":"YulFunctionCall","src":"8808:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:11"},"nodeType":"YulFunctionCall","src":"8801:29:11"},"nodeType":"YulExpressionStatement","src":"8801:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:11","type":""}],"src":"8616:221:11"},{"body":{"nodeType":"YulBlock","src":"8989:220:11","statements":[{"nodeType":"YulAssignment","src":"8999:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:11"},"nodeType":"YulFunctionCall","src":"9006:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:11"},"nodeType":"YulFunctionCall","src":"9082:93:11"},"nodeType":"YulExpressionStatement","src":"9082:93:11"},{"nodeType":"YulAssignment","src":"9184:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:11"},"nodeType":"YulFunctionCall","src":"9191:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:11","type":""}],"src":"8843:366:11"},{"body":{"nodeType":"YulBlock","src":"9386:248:11","statements":[{"nodeType":"YulAssignment","src":"9396:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:11"},"nodeType":"YulFunctionCall","src":"9404:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:11"},"nodeType":"YulFunctionCall","src":"9439:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:11"},"nodeType":"YulFunctionCall","src":"9458:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:11"},"nodeType":"YulFunctionCall","src":"9432:47:11"},"nodeType":"YulExpressionStatement","src":"9432:47:11"},{"nodeType":"YulAssignment","src":"9488:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:11"},"nodeType":"YulFunctionCall","src":"9496:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:11","type":""}],"src":"9215:419:11"},{"body":{"nodeType":"YulBlock","src":"9746:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:11"},"nodeType":"YulFunctionCall","src":"9764:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:11"},"nodeType":"YulFunctionCall","src":"9757:55:11"},"nodeType":"YulExpressionStatement","src":"9757:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:11","type":""}],"src":"9640:179:11"},{"body":{"nodeType":"YulBlock","src":"9971:220:11","statements":[{"nodeType":"YulAssignment","src":"9981:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:11"},"nodeType":"YulFunctionCall","src":"9988:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:11"},"nodeType":"YulFunctionCall","src":"10064:93:11"},"nodeType":"YulExpressionStatement","src":"10064:93:11"},{"nodeType":"YulAssignment","src":"10166:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:11"},"nodeType":"YulFunctionCall","src":"10173:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:11","type":""}],"src":"9825:366:11"},{"body":{"nodeType":"YulBlock","src":"10368:248:11","statements":[{"nodeType":"YulAssignment","src":"10378:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:11"},"nodeType":"YulFunctionCall","src":"10386:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:11"},"nodeType":"YulFunctionCall","src":"10421:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:11"},"nodeType":"YulFunctionCall","src":"10440:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:11"},"nodeType":"YulFunctionCall","src":"10414:47:11"},"nodeType":"YulExpressionStatement","src":"10414:47:11"},{"nodeType":"YulAssignment","src":"10470:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:11"},"nodeType":"YulFunctionCall","src":"10478:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:11","type":""}],"src":"10197:419:11"},{"body":{"nodeType":"YulBlock","src":"10728:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:11"},"nodeType":"YulFunctionCall","src":"10746:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:11"},"nodeType":"YulFunctionCall","src":"10739:58:11"},"nodeType":"YulExpressionStatement","src":"10739:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:11"},"nodeType":"YulFunctionCall","src":"10814:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:11"},"nodeType":"YulFunctionCall","src":"10807:32:11"},"nodeType":"YulExpressionStatement","src":"10807:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:11","type":""}],"src":"10622:224:11"},{"body":{"nodeType":"YulBlock","src":"10998:220:11","statements":[{"nodeType":"YulAssignment","src":"11008:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:11"},"nodeType":"YulFunctionCall","src":"11015:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:11"},"nodeType":"YulFunctionCall","src":"11091:93:11"},"nodeType":"YulExpressionStatement","src":"11091:93:11"},{"nodeType":"YulAssignment","src":"11193:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:11"},"nodeType":"YulFunctionCall","src":"11200:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:11","type":""}],"src":"10852:366:11"},{"body":{"nodeType":"YulBlock","src":"11395:248:11","statements":[{"nodeType":"YulAssignment","src":"11405:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:11"},"nodeType":"YulFunctionCall","src":"11413:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:11"},"nodeType":"YulFunctionCall","src":"11448:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:11"},"nodeType":"YulFunctionCall","src":"11467:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:11"},"nodeType":"YulFunctionCall","src":"11441:47:11"},"nodeType":"YulExpressionStatement","src":"11441:47:11"},{"nodeType":"YulAssignment","src":"11497:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:11"},"nodeType":"YulFunctionCall","src":"11505:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:11","type":""}],"src":"11224:419:11"},{"body":{"nodeType":"YulBlock","src":"11755:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:11"},"nodeType":"YulFunctionCall","src":"11773:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:11"},"nodeType":"YulFunctionCall","src":"11766:58:11"},"nodeType":"YulExpressionStatement","src":"11766:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:11"},"nodeType":"YulFunctionCall","src":"11841:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:11"},"nodeType":"YulFunctionCall","src":"11834:30:11"},"nodeType":"YulExpressionStatement","src":"11834:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:11","type":""}],"src":"11649:222:11"},{"body":{"nodeType":"YulBlock","src":"12023:220:11","statements":[{"nodeType":"YulAssignment","src":"12033:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:11"},"nodeType":"YulFunctionCall","src":"12040:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:11"},"nodeType":"YulFunctionCall","src":"12116:93:11"},"nodeType":"YulExpressionStatement","src":"12116:93:11"},{"nodeType":"YulAssignment","src":"12218:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:11"},"nodeType":"YulFunctionCall","src":"12225:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:11","type":""}],"src":"11877:366:11"},{"body":{"nodeType":"YulBlock","src":"12420:248:11","statements":[{"nodeType":"YulAssignment","src":"12430:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:11"},"nodeType":"YulFunctionCall","src":"12438:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:11"},"nodeType":"YulFunctionCall","src":"12473:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:11"},"nodeType":"YulFunctionCall","src":"12492:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:11"},"nodeType":"YulFunctionCall","src":"12466:47:11"},"nodeType":"YulExpressionStatement","src":"12466:47:11"},{"nodeType":"YulAssignment","src":"12522:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:11"},"nodeType":"YulFunctionCall","src":"12530:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:11","type":""}],"src":"12249:419:11"},{"body":{"nodeType":"YulBlock","src":"12780:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:11"},"nodeType":"YulFunctionCall","src":"12798:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:11"},"nodeType":"YulFunctionCall","src":"12791:58:11"},"nodeType":"YulExpressionStatement","src":"12791:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:11"},"nodeType":"YulFunctionCall","src":"12866:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:11"},"nodeType":"YulFunctionCall","src":"12859:33:11"},"nodeType":"YulExpressionStatement","src":"12859:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:11","type":""}],"src":"12674:225:11"},{"body":{"nodeType":"YulBlock","src":"13051:220:11","statements":[{"nodeType":"YulAssignment","src":"13061:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:11"},"nodeType":"YulFunctionCall","src":"13068:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:11"},"nodeType":"YulFunctionCall","src":"13144:93:11"},"nodeType":"YulExpressionStatement","src":"13144:93:11"},{"nodeType":"YulAssignment","src":"13246:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:11"},"nodeType":"YulFunctionCall","src":"13253:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:11","type":""}],"src":"12905:366:11"},{"body":{"nodeType":"YulBlock","src":"13448:248:11","statements":[{"nodeType":"YulAssignment","src":"13458:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:11"},"nodeType":"YulFunctionCall","src":"13466:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:11"},"nodeType":"YulFunctionCall","src":"13501:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:11"},"nodeType":"YulFunctionCall","src":"13520:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:11"},"nodeType":"YulFunctionCall","src":"13494:47:11"},"nodeType":"YulExpressionStatement","src":"13494:47:11"},{"nodeType":"YulAssignment","src":"13550:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:11"},"nodeType":"YulFunctionCall","src":"13558:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:11","type":""}],"src":"13277:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220ec3051facfecd743e78131dc9fd787d9b1f3c46bc1b1a795f958510d9d28f14064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC ADDRESS MLOAD STATICCALL 0xCF 0xEC 0xD7 NUMBER 0xE7 DUP2 BALANCE 0xDC SWAP16 0xD7 DUP8 0xD9 0xB1 RETURN 0xC4 PUSH12 0xC1B1A795F958510D9D28F140 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"114:140:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:0:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CBIOToken.sol\":\"CBIO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CBIOToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract CBIO is ERC20 {\\n\\n    constructor() ERC20('Credito de Descarbonizacao','CBIO'){\\n        _mint(msg.sender, 100000000 ether);\\n    }\\n\\n}\",\"keccak256\":\"0xd270fe024b02ff5683bf32efe1def7e5172c7e4bb1a6e4e11517f129afb6f843\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"contracts/CBIOToken.sol:CBIO","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"contracts/CBIOToken.sol:CBIO","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"contracts/CBIOToken.sol:CBIO","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"contracts/CBIOToken.sol:CBIO","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"contracts/CBIOToken.sol:CBIO","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EmissorCBIO.sol":{"EmissorCBIO":{"abi":[{"inputs":[{"internalType":"address","name":"_cbioToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"addEmissor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cbioToken","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"emitCBIO","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getCBIOSemited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"isAddressAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1416":{"entryPoint":null,"id":1416,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":224,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":192,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":187,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":242,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"759:80:11","statements":[{"nodeType":"YulAssignment","src":"769:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:11"},"nodeType":"YulFunctionCall","src":"778:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:11"},"nodeType":"YulFunctionCall","src":"800:33:11"},"nodeType":"YulExpressionStatement","src":"800:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:11","type":""}],"src":"696:143:11"},{"body":{"nodeType":"YulBlock","src":"922:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:11"},"nodeType":"YulFunctionCall","src":"970:79:11"},"nodeType":"YulExpressionStatement","src":"970:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:11"},"nodeType":"YulFunctionCall","src":"939:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:11"},"nodeType":"YulFunctionCall","src":"935:32:11"},"nodeType":"YulIf","src":"932:119:11"},{"nodeType":"YulBlock","src":"1061:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:11"},"nodeType":"YulFunctionCall","src":"1147:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:11"},"nodeType":"YulFunctionCall","src":"1115:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:11","type":""}],"src":"845:351:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516200104e3803806200104e8339818101604052810190610034919061011e565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100eb826100c0565b9050919050565b6100fb816100e0565b811461010657600080fd5b50565b600081519050610118816100f2565b92915050565b600060208284031215610134576101336100bb565b5b600061014284828501610109565b91505092915050565b610ef3806200015b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806325e057501461005c5780633abf1a941461008c578063736001f4146100965780638fa2a903146100b257806399e1f6f9146100e2575b600080fd5b61007660048036038101906100719190610805565b610100565b604051610083919061084b565b60405180910390f35b610094610149565b005b6100b060048036038101906100ab9190610892565b6101f8565b005b6100cc60048036038101906100c79190610805565b61040e565b6040516100d991906108ed565b60405180910390f35b6100ea610464565b6040516100f79190610967565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101f65760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b6000811161023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610a05565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102949190610a34565b602060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610a64565b8110610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d90610b29565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561040a576103b3828260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104889092919063ffffffff16565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104029190610b78565b925050819055505b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105098363a9059cbb60e01b84846040516024016104a7929190610bac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061050e565b505050565b6000610570826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105d59092919063ffffffff16565b90506000815111156105d057808060200190518101906105909190610c01565b6105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690610ca0565b60405180910390fd5b5b505050565b60606105e484846000856105ed565b90509392505050565b606082471015610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062990610d32565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161065b9190610dc3565b60006040518083038185875af1925050503d8060008114610698576040519150601f19603f3d011682016040523d82523d6000602084013e61069d565b606091505b50915091506106ae878383876106ba565b92505050949350505050565b6060831561071c576000835103610714576106d48561072f565b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a90610e26565b60405180910390fd5b5b829050610727565b6107268383610752565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156107655781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107999190610e9b565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d2826107a7565b9050919050565b6107e2816107c7565b81146107ed57600080fd5b50565b6000813590506107ff816107d9565b92915050565b60006020828403121561081b5761081a6107a2565b5b6000610829848285016107f0565b91505092915050565b6000819050919050565b61084581610832565b82525050565b6000602082019050610860600083018461083c565b92915050565b61086f81610832565b811461087a57600080fd5b50565b60008135905061088c81610866565b92915050565b600080604083850312156108a9576108a86107a2565b5b60006108b7858286016107f0565b92505060206108c88582860161087d565b9150509250929050565b60008115159050919050565b6108e7816108d2565b82525050565b600060208201905061090260008301846108de565b92915050565b6000819050919050565b600061092d610928610923846107a7565b610908565b6107a7565b9050919050565b600061093f82610912565b9050919050565b600061095182610934565b9050919050565b61096181610946565b82525050565b600060208201905061097c6000830184610958565b92915050565b600082825260208201905092915050565b7f456d6973736f724342494f3a20616d6f756e74206d757374206265206772656160008201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b60006109ef602a83610982565b91506109fa82610993565b604082019050919050565b60006020820190508181036000830152610a1e816109e2565b9050919050565b610a2e816107c7565b82525050565b6000602082019050610a496000830184610a25565b92915050565b600081519050610a5e81610866565b92915050565b600060208284031215610a7a57610a796107a2565b5b6000610a8884828501610a4f565b91505092915050565b7f456d6973736f724342494f3a20616d6f756e74206d757374206265206c65737360008201527f207468616e207468652062616c616e6365206f662074686520636f6e7472616360208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b6000610b13604183610982565b9150610b1e82610a91565b606082019050919050565b60006020820190508181036000830152610b4281610b06565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8382610832565b9150610b8e83610832565b9250828201905080821115610ba657610ba5610b49565b5b92915050565b6000604082019050610bc16000830185610a25565b610bce602083018461083c565b9392505050565b610bde816108d2565b8114610be957600080fd5b50565b600081519050610bfb81610bd5565b92915050565b600060208284031215610c1757610c166107a2565b5b6000610c2584828501610bec565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610c8a602a83610982565b9150610c9582610c2e565b604082019050919050565b60006020820190508181036000830152610cb981610c7d565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610d1c602683610982565b9150610d2782610cc0565b604082019050919050565b60006020820190508181036000830152610d4b81610d0f565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610d86578082015181840152602081019050610d6b565b60008484015250505050565b6000610d9d82610d52565b610da78185610d5d565b9350610db7818560208601610d68565b80840191505092915050565b6000610dcf8284610d92565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610e10601d83610982565b9150610e1b82610dda565b602082019050919050565b60006020820190508181036000830152610e3f81610e03565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610e6d82610e46565b610e778185610982565b9350610e87818560208601610d68565b610e9081610e51565b840191505092915050565b60006020820190508181036000830152610eb58184610e62565b90509291505056fea2646970667358221220e8ee64fe796012e1f20a4842c4729699887c65952bca64172024e983092f9f6964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x104E CODESIZE SUB DUP1 PUSH3 0x104E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x34 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x14B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB DUP3 PUSH2 0xC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB DUP2 PUSH2 0xE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x118 DUP2 PUSH2 0xF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH2 0x133 PUSH2 0xBB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142 DUP5 DUP3 DUP6 ADD PUSH2 0x109 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF3 DUP1 PUSH3 0x15B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25E05750 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3ABF1A94 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x736001F4 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8FA2A903 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x99E1F6F9 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F6 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xA64 JUMP JUMPDEST DUP2 LT PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x40A JUMPI PUSH2 0x3B3 DUP3 DUP3 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x488 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x509 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4A7 SWAP3 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x50E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x5D0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C6 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x698 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x69D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6AE DUP8 DUP4 DUP4 DUP8 PUSH2 0x6BA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x714 JUMPI PUSH2 0x6D4 DUP6 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x727 JUMP JUMPDEST PUSH2 0x726 DUP4 DUP4 PUSH2 0x752 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x765 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP3 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0x7C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7FF DUP2 PUSH2 0x7D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x829 DUP5 DUP3 DUP6 ADD PUSH2 0x7F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x845 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86F DUP2 PUSH2 0x832 JUMP JUMPDEST DUP2 EQ PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88C DUP2 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8B7 DUP6 DUP3 DUP7 ADD PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8C8 DUP6 DUP3 DUP7 ADD PUSH2 0x87D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E7 DUP2 PUSH2 0x8D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x902 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92D PUSH2 0x928 PUSH2 0x923 DUP5 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93F DUP3 PUSH2 0x912 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x951 DUP3 PUSH2 0x934 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH2 0x946 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D6973736F724342494F3A20616D6F756E74206D7573742062652067726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EF PUSH1 0x2A DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0x9FA DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1E DUP2 PUSH2 0x9E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E DUP2 PUSH2 0x7C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA5E DUP2 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA88 DUP5 DUP3 DUP6 ADD PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D6973736F724342494F3A20616D6F756E74206D757374206265206C657373 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207468616E207468652062616C616E6365206F662074686520636F6E74726163 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 PUSH1 0x41 DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xB1E DUP3 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB42 DUP2 PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP3 PUSH2 0x832 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E DUP4 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA25 JUMP JUMPDEST PUSH2 0xBCE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x83C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0x8D2 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBFB DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC25 DUP5 DUP3 DUP6 ADD PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8A PUSH1 0x2A DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xC95 DUP3 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB9 DUP2 PUSH2 0xC7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1C PUSH1 0x26 DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xD27 DUP3 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4B DUP2 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD86 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9D DUP3 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0xDA7 DUP2 DUP6 PUSH2 0xD5D JUMP JUMPDEST SWAP4 POP PUSH2 0xDB7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD68 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCF DUP3 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x1D DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3F DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0xE77 DUP2 DUP6 PUSH2 0x982 JUMP JUMPDEST SWAP4 POP PUSH2 0xE87 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xE90 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 DUP5 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xEE PUSH5 0xFE796012E1 CALLCODE EXP BASEFEE TIMESTAMP 0xC4 PUSH19 0x9699887C65952BCA64172024E983092F9F6964 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"180:1138:8:-:0;;;383:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;443:10;425:9;;:29;;;;;;;;;;;;;;;;;;480:10;464:13;;:26;;;;;;;;;;;;;;;;;;383:114;180:1138;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;180:1138:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_1005":{"entryPoint":1294,"id":1005,"parameterSlots":2,"returnSlots":0},"@_revert_1335":{"entryPoint":1874,"id":1335,"parameterSlots":2,"returnSlots":0},"@addEmissor_1433":{"entryPoint":329,"id":1433,"parameterSlots":0,"returnSlots":0},"@cbioToken_1389":{"entryPoint":1124,"id":1389,"parameterSlots":0,"returnSlots":0},"@emitCBIO_1480":{"entryPoint":504,"id":1480,"parameterSlots":2,"returnSlots":0},"@functionCallWithValue_1160":{"entryPoint":1517,"id":1160,"parameterSlots":4,"returnSlots":1},"@functionCall_1096":{"entryPoint":1493,"id":1096,"parameterSlots":3,"returnSlots":1},"@getCBIOSemited_1504":{"entryPoint":256,"id":1504,"parameterSlots":1,"returnSlots":1},"@isAddressAllowed_1492":{"entryPoint":1038,"id":1492,"parameterSlots":1,"returnSlots":1},"@isContract_1024":{"entryPoint":1839,"id":1024,"parameterSlots":1,"returnSlots":1},"@safeTransfer_757":{"entryPoint":1160,"id":757,"parameterSlots":3,"returnSlots":0},"@verifyCallResultFromTarget_1291":{"entryPoint":1722,"id":1291,"parameterSlots":4,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":3052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2194,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2270,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack":{"entryPoint":2392,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":3343,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131_to_t_string_memory_ptr_fromStack":{"entryPoint":2530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507_to_t_string_memory_ptr_fromStack":{"entryPoint":2822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":3197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":2988,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$586__to_t_address__fromStack_reversed":{"entryPoint":2407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2123,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3410,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3654,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3421,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2434,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2936,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1991,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2258,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1959,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2098,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ERC20_$586_to_t_address":{"entryPoint":2374,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2356,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2322,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3432,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":2312,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2889,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1954,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":3264,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131":{"entryPoint":2451,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507":{"entryPoint":2705,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":3546,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":3118,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2009,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3029,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2150,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13325:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"748:87:11","statements":[{"nodeType":"YulAssignment","src":"758:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:11"},"nodeType":"YulFunctionCall","src":"767:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:11"},"nodeType":"YulFunctionCall","src":"796:33:11"},"nodeType":"YulExpressionStatement","src":"796:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:11","type":""}],"src":"696:139:11"},{"body":{"nodeType":"YulBlock","src":"907:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:11"},"nodeType":"YulFunctionCall","src":"955:79:11"},"nodeType":"YulExpressionStatement","src":"955:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:11"},"nodeType":"YulFunctionCall","src":"924:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:11"},"nodeType":"YulFunctionCall","src":"920:32:11"},"nodeType":"YulIf","src":"917:119:11"},{"nodeType":"YulBlock","src":"1046:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:11"},"nodeType":"YulFunctionCall","src":"1121:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:11"},"nodeType":"YulFunctionCall","src":"1100:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:11","type":""}],"src":"841:329:11"},{"body":{"nodeType":"YulBlock","src":"1221:32:11","statements":[{"nodeType":"YulAssignment","src":"1231:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:11","type":""}],"src":"1176:77:11"},{"body":{"nodeType":"YulBlock","src":"1324:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:11"},"nodeType":"YulFunctionCall","src":"1346:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:11"},"nodeType":"YulFunctionCall","src":"1334:37:11"},"nodeType":"YulExpressionStatement","src":"1334:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:11","type":""}],"src":"1259:118:11"},{"body":{"nodeType":"YulBlock","src":"1481:124:11","statements":[{"nodeType":"YulAssignment","src":"1491:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:11"},"nodeType":"YulFunctionCall","src":"1499:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:11"},"nodeType":"YulFunctionCall","src":"1580:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:11"},"nodeType":"YulFunctionCall","src":"1527:71:11"},"nodeType":"YulExpressionStatement","src":"1527:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:11","type":""}],"src":"1383:222:11"},{"body":{"nodeType":"YulBlock","src":"1654:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:11"},"nodeType":"YulFunctionCall","src":"1713:12:11"},"nodeType":"YulExpressionStatement","src":"1713:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1684:17:11"},"nodeType":"YulFunctionCall","src":"1684:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:11"},"nodeType":"YulFunctionCall","src":"1674:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:11"},"nodeType":"YulFunctionCall","src":"1667:43:11"},"nodeType":"YulIf","src":"1664:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:11","type":""}],"src":"1611:122:11"},{"body":{"nodeType":"YulBlock","src":"1791:87:11","statements":[{"nodeType":"YulAssignment","src":"1801:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:11"},"nodeType":"YulFunctionCall","src":"1810:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1839:26:11"},"nodeType":"YulFunctionCall","src":"1839:33:11"},"nodeType":"YulExpressionStatement","src":"1839:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:11","type":""}],"src":"1739:139:11"},{"body":{"nodeType":"YulBlock","src":"1967:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2013:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2015:77:11"},"nodeType":"YulFunctionCall","src":"2015:79:11"},"nodeType":"YulExpressionStatement","src":"2015:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1988:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1997:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1984:3:11"},"nodeType":"YulFunctionCall","src":"1984:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2009:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1980:3:11"},"nodeType":"YulFunctionCall","src":"1980:32:11"},"nodeType":"YulIf","src":"1977:119:11"},{"nodeType":"YulBlock","src":"2106:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2121:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2135:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2125:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2150:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2196:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2181:3:11"},"nodeType":"YulFunctionCall","src":"2181:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2205:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2160:20:11"},"nodeType":"YulFunctionCall","src":"2160:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2150:6:11"}]}]},{"nodeType":"YulBlock","src":"2233:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2248:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2262:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2252:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2278:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2324:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:11"},"nodeType":"YulFunctionCall","src":"2309:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2333:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2288:20:11"},"nodeType":"YulFunctionCall","src":"2288:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2278:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1929:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1940:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1952:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1960:6:11","type":""}],"src":"1884:474:11"},{"body":{"nodeType":"YulBlock","src":"2406:48:11","statements":[{"nodeType":"YulAssignment","src":"2416:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2441:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2434:6:11"},"nodeType":"YulFunctionCall","src":"2434:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2427:6:11"},"nodeType":"YulFunctionCall","src":"2427:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2416:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2388:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2398:7:11","type":""}],"src":"2364:90:11"},{"body":{"nodeType":"YulBlock","src":"2519:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2536:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2556:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2541:14:11"},"nodeType":"YulFunctionCall","src":"2541:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2529:6:11"},"nodeType":"YulFunctionCall","src":"2529:34:11"},"nodeType":"YulExpressionStatement","src":"2529:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2507:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2514:3:11","type":""}],"src":"2460:109:11"},{"body":{"nodeType":"YulBlock","src":"2667:118:11","statements":[{"nodeType":"YulAssignment","src":"2677:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2689:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2700:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2685:3:11"},"nodeType":"YulFunctionCall","src":"2685:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2677:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2751:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:11"},"nodeType":"YulFunctionCall","src":"2760:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2713:37:11"},"nodeType":"YulFunctionCall","src":"2713:65:11"},"nodeType":"YulExpressionStatement","src":"2713:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2639:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2651:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2662:4:11","type":""}],"src":"2575:210:11"},{"body":{"nodeType":"YulBlock","src":"2823:28:11","statements":[{"nodeType":"YulAssignment","src":"2833:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2840:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2833:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2809:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2819:3:11","type":""}],"src":"2791:60:11"},{"body":{"nodeType":"YulBlock","src":"2917:82:11","statements":[{"nodeType":"YulAssignment","src":"2927:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2967:17:11"},"nodeType":"YulFunctionCall","src":"2967:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2958:8:11"},"nodeType":"YulFunctionCall","src":"2958:34:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2940:17:11"},"nodeType":"YulFunctionCall","src":"2940:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2927:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2897:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2907:9:11","type":""}],"src":"2857:142:11"},{"body":{"nodeType":"YulBlock","src":"3065:66:11","statements":[{"nodeType":"YulAssignment","src":"3075:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3119:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3088:30:11"},"nodeType":"YulFunctionCall","src":"3088:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3075:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3045:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3055:9:11","type":""}],"src":"3005:126:11"},{"body":{"nodeType":"YulBlock","src":"3210:66:11","statements":[{"nodeType":"YulAssignment","src":"3220:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3233:30:11"},"nodeType":"YulFunctionCall","src":"3233:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3220:9:11"}]}]},"name":"convert_t_contract$_ERC20_$586_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3190:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3200:9:11","type":""}],"src":"3137:139:11"},{"body":{"nodeType":"YulBlock","src":"3360:79:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3377:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3426:5:11"}],"functionName":{"name":"convert_t_contract$_ERC20_$586_to_t_address","nodeType":"YulIdentifier","src":"3382:43:11"},"nodeType":"YulFunctionCall","src":"3382:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3370:6:11"},"nodeType":"YulFunctionCall","src":"3370:63:11"},"nodeType":"YulExpressionStatement","src":"3370:63:11"}]},"name":"abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3348:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3355:3:11","type":""}],"src":"3282:157:11"},{"body":{"nodeType":"YulBlock","src":"3556:137:11","statements":[{"nodeType":"YulAssignment","src":"3566:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3589:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:11"},"nodeType":"YulFunctionCall","src":"3574:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3566:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3659:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3683:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:11"},"nodeType":"YulFunctionCall","src":"3668:17:11"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3602:56:11"},"nodeType":"YulFunctionCall","src":"3602:84:11"},"nodeType":"YulExpressionStatement","src":"3602:84:11"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$586__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3528:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3540:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3551:4:11","type":""}],"src":"3445:248:11"},{"body":{"nodeType":"YulBlock","src":"3795:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3812:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3817:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3805:6:11"},"nodeType":"YulFunctionCall","src":"3805:19:11"},"nodeType":"YulExpressionStatement","src":"3805:19:11"},{"nodeType":"YulAssignment","src":"3833:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3852:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3857:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:11"},"nodeType":"YulFunctionCall","src":"3848:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3833:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3767:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3772:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3783:11:11","type":""}],"src":"3699:169:11"},{"body":{"nodeType":"YulBlock","src":"3980:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4002:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4010:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:11"},"nodeType":"YulFunctionCall","src":"3998:14:11"},{"hexValue":"456d6973736f724342494f3a20616d6f756e74206d7573742062652067726561","kind":"string","nodeType":"YulLiteral","src":"4014:34:11","type":"","value":"EmissorCBIO: amount must be grea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3991:6:11"},"nodeType":"YulFunctionCall","src":"3991:58:11"},"nodeType":"YulExpressionStatement","src":"3991:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4070:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4078:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4066:3:11"},"nodeType":"YulFunctionCall","src":"4066:15:11"},{"hexValue":"746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"4083:12:11","type":"","value":"ter than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4059:6:11"},"nodeType":"YulFunctionCall","src":"4059:37:11"},"nodeType":"YulExpressionStatement","src":"4059:37:11"}]},"name":"store_literal_in_memory_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3972:6:11","type":""}],"src":"3874:229:11"},{"body":{"nodeType":"YulBlock","src":"4255:220:11","statements":[{"nodeType":"YulAssignment","src":"4265:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4331:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4336:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4272:58:11"},"nodeType":"YulFunctionCall","src":"4272:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4265:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4437:3:11"}],"functionName":{"name":"store_literal_in_memory_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131","nodeType":"YulIdentifier","src":"4348:88:11"},"nodeType":"YulFunctionCall","src":"4348:93:11"},"nodeType":"YulExpressionStatement","src":"4348:93:11"},{"nodeType":"YulAssignment","src":"4450:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4461:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4466:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4457:3:11"},"nodeType":"YulFunctionCall","src":"4457:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4450:3:11"}]}]},"name":"abi_encode_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4243:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4251:3:11","type":""}],"src":"4109:366:11"},{"body":{"nodeType":"YulBlock","src":"4652:248:11","statements":[{"nodeType":"YulAssignment","src":"4662:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4670:3:11"},"nodeType":"YulFunctionCall","src":"4670:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4662:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4709:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4720:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4705:3:11"},"nodeType":"YulFunctionCall","src":"4705:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4728:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4724:3:11"},"nodeType":"YulFunctionCall","src":"4724:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4698:6:11"},"nodeType":"YulFunctionCall","src":"4698:47:11"},"nodeType":"YulExpressionStatement","src":"4698:47:11"},{"nodeType":"YulAssignment","src":"4754:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4888:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4762:124:11"},"nodeType":"YulFunctionCall","src":"4762:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4754:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4632:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4647:4:11","type":""}],"src":"4481:419:11"},{"body":{"nodeType":"YulBlock","src":"4971:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4988:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5011:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4993:17:11"},"nodeType":"YulFunctionCall","src":"4993:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4981:6:11"},"nodeType":"YulFunctionCall","src":"4981:37:11"},"nodeType":"YulExpressionStatement","src":"4981:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4959:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4966:3:11","type":""}],"src":"4906:118:11"},{"body":{"nodeType":"YulBlock","src":"5128:124:11","statements":[{"nodeType":"YulAssignment","src":"5138:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5161:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:11"},"nodeType":"YulFunctionCall","src":"5146:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5138:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5218:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5231:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5242:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:11"},"nodeType":"YulFunctionCall","src":"5227:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5174:43:11"},"nodeType":"YulFunctionCall","src":"5174:71:11"},"nodeType":"YulExpressionStatement","src":"5174:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5100:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5112:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5123:4:11","type":""}],"src":"5030:222:11"},{"body":{"nodeType":"YulBlock","src":"5321:80:11","statements":[{"nodeType":"YulAssignment","src":"5331:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5346:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5340:5:11"},"nodeType":"YulFunctionCall","src":"5340:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5331:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5389:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5362:26:11"},"nodeType":"YulFunctionCall","src":"5362:33:11"},"nodeType":"YulExpressionStatement","src":"5362:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5299:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5307:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5315:5:11","type":""}],"src":"5258:143:11"},{"body":{"nodeType":"YulBlock","src":"5484:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"5530:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5532:77:11"},"nodeType":"YulFunctionCall","src":"5532:79:11"},"nodeType":"YulExpressionStatement","src":"5532:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5505:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5514:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5501:3:11"},"nodeType":"YulFunctionCall","src":"5501:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5526:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5497:3:11"},"nodeType":"YulFunctionCall","src":"5497:32:11"},"nodeType":"YulIf","src":"5494:119:11"},{"nodeType":"YulBlock","src":"5623:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5638:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5652:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5642:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5667:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5713:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5724:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5709:3:11"},"nodeType":"YulFunctionCall","src":"5709:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5733:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5677:31:11"},"nodeType":"YulFunctionCall","src":"5677:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5667:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5454:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5465:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5477:6:11","type":""}],"src":"5407:351:11"},{"body":{"nodeType":"YulBlock","src":"5870:183:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5892:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5900:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5888:3:11"},"nodeType":"YulFunctionCall","src":"5888:14:11"},{"hexValue":"456d6973736f724342494f3a20616d6f756e74206d757374206265206c657373","kind":"string","nodeType":"YulLiteral","src":"5904:34:11","type":"","value":"EmissorCBIO: amount must be less"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5881:6:11"},"nodeType":"YulFunctionCall","src":"5881:58:11"},"nodeType":"YulExpressionStatement","src":"5881:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5960:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5968:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5956:3:11"},"nodeType":"YulFunctionCall","src":"5956:15:11"},{"hexValue":"207468616e207468652062616c616e6365206f662074686520636f6e74726163","kind":"string","nodeType":"YulLiteral","src":"5973:34:11","type":"","value":" than the balance of the contrac"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5949:6:11"},"nodeType":"YulFunctionCall","src":"5949:59:11"},"nodeType":"YulExpressionStatement","src":"5949:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6029:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6037:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6025:3:11"},"nodeType":"YulFunctionCall","src":"6025:15:11"},{"hexValue":"74","kind":"string","nodeType":"YulLiteral","src":"6042:3:11","type":"","value":"t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6018:6:11"},"nodeType":"YulFunctionCall","src":"6018:28:11"},"nodeType":"YulExpressionStatement","src":"6018:28:11"}]},"name":"store_literal_in_memory_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5862:6:11","type":""}],"src":"5764:289:11"},{"body":{"nodeType":"YulBlock","src":"6205:220:11","statements":[{"nodeType":"YulAssignment","src":"6215:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6281:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6286:2:11","type":"","value":"65"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6222:58:11"},"nodeType":"YulFunctionCall","src":"6222:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6215:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6387:3:11"}],"functionName":{"name":"store_literal_in_memory_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507","nodeType":"YulIdentifier","src":"6298:88:11"},"nodeType":"YulFunctionCall","src":"6298:93:11"},"nodeType":"YulExpressionStatement","src":"6298:93:11"},{"nodeType":"YulAssignment","src":"6400:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6411:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6416:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:11"},"nodeType":"YulFunctionCall","src":"6407:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6400:3:11"}]}]},"name":"abi_encode_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6193:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6201:3:11","type":""}],"src":"6059:366:11"},{"body":{"nodeType":"YulBlock","src":"6602:248:11","statements":[{"nodeType":"YulAssignment","src":"6612:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6624:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6635:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6620:3:11"},"nodeType":"YulFunctionCall","src":"6620:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6612:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6659:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6670:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6655:3:11"},"nodeType":"YulFunctionCall","src":"6655:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6678:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6684:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6674:3:11"},"nodeType":"YulFunctionCall","src":"6674:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6648:6:11"},"nodeType":"YulFunctionCall","src":"6648:47:11"},"nodeType":"YulExpressionStatement","src":"6648:47:11"},{"nodeType":"YulAssignment","src":"6704:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6838:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6712:124:11"},"nodeType":"YulFunctionCall","src":"6712:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6704:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6582:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6597:4:11","type":""}],"src":"6431:419:11"},{"body":{"nodeType":"YulBlock","src":"6884:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6901:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6904:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6894:6:11"},"nodeType":"YulFunctionCall","src":"6894:88:11"},"nodeType":"YulExpressionStatement","src":"6894:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6998:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7001:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6991:6:11"},"nodeType":"YulFunctionCall","src":"6991:15:11"},"nodeType":"YulExpressionStatement","src":"6991:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7022:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7025:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7015:6:11"},"nodeType":"YulFunctionCall","src":"7015:15:11"},"nodeType":"YulExpressionStatement","src":"7015:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6856:180:11"},{"body":{"nodeType":"YulBlock","src":"7086:147:11","statements":[{"nodeType":"YulAssignment","src":"7096:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7119:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7101:17:11"},"nodeType":"YulFunctionCall","src":"7101:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7096:1:11"}]},{"nodeType":"YulAssignment","src":"7130:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7153:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7135:17:11"},"nodeType":"YulFunctionCall","src":"7135:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7130:1:11"}]},{"nodeType":"YulAssignment","src":"7164:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7175:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"7178:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7171:3:11"},"nodeType":"YulFunctionCall","src":"7171:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7164:3:11"}]},{"body":{"nodeType":"YulBlock","src":"7204:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7206:16:11"},"nodeType":"YulFunctionCall","src":"7206:18:11"},"nodeType":"YulExpressionStatement","src":"7206:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7196:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"7199:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7193:2:11"},"nodeType":"YulFunctionCall","src":"7193:10:11"},"nodeType":"YulIf","src":"7190:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7073:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"7076:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7082:3:11","type":""}],"src":"7042:191:11"},{"body":{"nodeType":"YulBlock","src":"7365:206:11","statements":[{"nodeType":"YulAssignment","src":"7375:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7387:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7398:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7383:3:11"},"nodeType":"YulFunctionCall","src":"7383:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7375:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7455:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7468:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7479:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:11"},"nodeType":"YulFunctionCall","src":"7464:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7411:43:11"},"nodeType":"YulFunctionCall","src":"7411:71:11"},"nodeType":"YulExpressionStatement","src":"7411:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7536:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7549:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7560:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7545:3:11"},"nodeType":"YulFunctionCall","src":"7545:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7492:43:11"},"nodeType":"YulFunctionCall","src":"7492:72:11"},"nodeType":"YulExpressionStatement","src":"7492:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7329:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7341:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7349:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7360:4:11","type":""}],"src":"7239:332:11"},{"body":{"nodeType":"YulBlock","src":"7617:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"7671:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7680:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7683:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7673:6:11"},"nodeType":"YulFunctionCall","src":"7673:12:11"},"nodeType":"YulExpressionStatement","src":"7673:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7640:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7662:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7647:14:11"},"nodeType":"YulFunctionCall","src":"7647:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7637:2:11"},"nodeType":"YulFunctionCall","src":"7637:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7630:6:11"},"nodeType":"YulFunctionCall","src":"7630:40:11"},"nodeType":"YulIf","src":"7627:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7610:5:11","type":""}],"src":"7577:116:11"},{"body":{"nodeType":"YulBlock","src":"7759:77:11","statements":[{"nodeType":"YulAssignment","src":"7769:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7784:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7778:5:11"},"nodeType":"YulFunctionCall","src":"7778:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7769:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7824:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"7800:23:11"},"nodeType":"YulFunctionCall","src":"7800:30:11"},"nodeType":"YulExpressionStatement","src":"7800:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7737:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7745:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7753:5:11","type":""}],"src":"7699:137:11"},{"body":{"nodeType":"YulBlock","src":"7916:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"7962:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7964:77:11"},"nodeType":"YulFunctionCall","src":"7964:79:11"},"nodeType":"YulExpressionStatement","src":"7964:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7937:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7946:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7933:3:11"},"nodeType":"YulFunctionCall","src":"7933:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7958:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7929:3:11"},"nodeType":"YulFunctionCall","src":"7929:32:11"},"nodeType":"YulIf","src":"7926:119:11"},{"nodeType":"YulBlock","src":"8055:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8070:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8084:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8074:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8099:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8142:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8153:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8138:3:11"},"nodeType":"YulFunctionCall","src":"8138:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8162:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"8109:28:11"},"nodeType":"YulFunctionCall","src":"8109:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8099:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7886:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7897:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7909:6:11","type":""}],"src":"7842:345:11"},{"body":{"nodeType":"YulBlock","src":"8299:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8321:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8329:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8317:3:11"},"nodeType":"YulFunctionCall","src":"8317:14:11"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"8333:34:11","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8310:6:11"},"nodeType":"YulFunctionCall","src":"8310:58:11"},"nodeType":"YulExpressionStatement","src":"8310:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8389:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8397:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8385:3:11"},"nodeType":"YulFunctionCall","src":"8385:15:11"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"8402:12:11","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8378:6:11"},"nodeType":"YulFunctionCall","src":"8378:37:11"},"nodeType":"YulExpressionStatement","src":"8378:37:11"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8291:6:11","type":""}],"src":"8193:229:11"},{"body":{"nodeType":"YulBlock","src":"8574:220:11","statements":[{"nodeType":"YulAssignment","src":"8584:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8650:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8655:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8591:58:11"},"nodeType":"YulFunctionCall","src":"8591:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8584:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8756:3:11"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"8667:88:11"},"nodeType":"YulFunctionCall","src":"8667:93:11"},"nodeType":"YulExpressionStatement","src":"8667:93:11"},{"nodeType":"YulAssignment","src":"8769:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8780:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8785:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8776:3:11"},"nodeType":"YulFunctionCall","src":"8776:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8769:3:11"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8562:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8570:3:11","type":""}],"src":"8428:366:11"},{"body":{"nodeType":"YulBlock","src":"8971:248:11","statements":[{"nodeType":"YulAssignment","src":"8981:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8993:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9004:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8989:3:11"},"nodeType":"YulFunctionCall","src":"8989:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8981:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9028:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9039:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9024:3:11"},"nodeType":"YulFunctionCall","src":"9024:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9047:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9053:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9043:3:11"},"nodeType":"YulFunctionCall","src":"9043:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9017:6:11"},"nodeType":"YulFunctionCall","src":"9017:47:11"},"nodeType":"YulExpressionStatement","src":"9017:47:11"},{"nodeType":"YulAssignment","src":"9073:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9207:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9081:124:11"},"nodeType":"YulFunctionCall","src":"9081:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9073:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8951:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8966:4:11","type":""}],"src":"8800:419:11"},{"body":{"nodeType":"YulBlock","src":"9331:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9353:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9361:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9349:3:11"},"nodeType":"YulFunctionCall","src":"9349:14:11"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"9365:34:11","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9342:6:11"},"nodeType":"YulFunctionCall","src":"9342:58:11"},"nodeType":"YulExpressionStatement","src":"9342:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9421:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9429:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9417:3:11"},"nodeType":"YulFunctionCall","src":"9417:15:11"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"9434:8:11","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9410:6:11"},"nodeType":"YulFunctionCall","src":"9410:33:11"},"nodeType":"YulExpressionStatement","src":"9410:33:11"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9323:6:11","type":""}],"src":"9225:225:11"},{"body":{"nodeType":"YulBlock","src":"9602:220:11","statements":[{"nodeType":"YulAssignment","src":"9612:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9678:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9683:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9619:58:11"},"nodeType":"YulFunctionCall","src":"9619:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9612:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9784:3:11"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"9695:88:11"},"nodeType":"YulFunctionCall","src":"9695:93:11"},"nodeType":"YulExpressionStatement","src":"9695:93:11"},{"nodeType":"YulAssignment","src":"9797:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9808:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9813:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9804:3:11"},"nodeType":"YulFunctionCall","src":"9804:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9797:3:11"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9590:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9598:3:11","type":""}],"src":"9456:366:11"},{"body":{"nodeType":"YulBlock","src":"9999:248:11","statements":[{"nodeType":"YulAssignment","src":"10009:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10021:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10032:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10017:3:11"},"nodeType":"YulFunctionCall","src":"10017:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10009:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10056:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10067:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10052:3:11"},"nodeType":"YulFunctionCall","src":"10052:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10075:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10071:3:11"},"nodeType":"YulFunctionCall","src":"10071:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10045:6:11"},"nodeType":"YulFunctionCall","src":"10045:47:11"},"nodeType":"YulExpressionStatement","src":"10045:47:11"},{"nodeType":"YulAssignment","src":"10101:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10235:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10109:124:11"},"nodeType":"YulFunctionCall","src":"10109:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10101:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9979:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9994:4:11","type":""}],"src":"9828:419:11"},{"body":{"nodeType":"YulBlock","src":"10311:40:11","statements":[{"nodeType":"YulAssignment","src":"10322:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10338:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10332:5:11"},"nodeType":"YulFunctionCall","src":"10332:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10322:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10294:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10304:6:11","type":""}],"src":"10253:98:11"},{"body":{"nodeType":"YulBlock","src":"10470:34:11","statements":[{"nodeType":"YulAssignment","src":"10480:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"10495:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10480:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10442:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10447:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10458:11:11","type":""}],"src":"10357:147:11"},{"body":{"nodeType":"YulBlock","src":"10572:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10582:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10591:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10586:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10651:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10676:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"10681:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10672:3:11"},"nodeType":"YulFunctionCall","src":"10672:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10695:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"10700:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10691:3:11"},"nodeType":"YulFunctionCall","src":"10691:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10685:5:11"},"nodeType":"YulFunctionCall","src":"10685:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10665:6:11"},"nodeType":"YulFunctionCall","src":"10665:39:11"},"nodeType":"YulExpressionStatement","src":"10665:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10612:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"10615:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10609:2:11"},"nodeType":"YulFunctionCall","src":"10609:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10623:19:11","statements":[{"nodeType":"YulAssignment","src":"10625:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10634:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"10637:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10630:3:11"},"nodeType":"YulFunctionCall","src":"10630:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10625:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"10605:3:11","statements":[]},"src":"10601:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10734:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10739:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10730:3:11"},"nodeType":"YulFunctionCall","src":"10730:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"10748:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10723:6:11"},"nodeType":"YulFunctionCall","src":"10723:27:11"},"nodeType":"YulExpressionStatement","src":"10723:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10554:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10559:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10564:6:11","type":""}],"src":"10510:246:11"},{"body":{"nodeType":"YulBlock","src":"10870:278:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10880:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10926:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10894:31:11"},"nodeType":"YulFunctionCall","src":"10894:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10884:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10941:95:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11024:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11029:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10948:75:11"},"nodeType":"YulFunctionCall","src":"10948:88:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10941:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11084:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11091:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11080:3:11"},"nodeType":"YulFunctionCall","src":"11080:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11098:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11103:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11045:34:11"},"nodeType":"YulFunctionCall","src":"11045:65:11"},"nodeType":"YulExpressionStatement","src":"11045:65:11"},{"nodeType":"YulAssignment","src":"11119:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11130:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11135:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11126:3:11"},"nodeType":"YulFunctionCall","src":"11126:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11119:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10851:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10858:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10866:3:11","type":""}],"src":"10762:386:11"},{"body":{"nodeType":"YulBlock","src":"11288:137:11","statements":[{"nodeType":"YulAssignment","src":"11299:100:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11386:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11395:3:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11306:79:11"},"nodeType":"YulFunctionCall","src":"11306:93:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11299:3:11"}]},{"nodeType":"YulAssignment","src":"11409:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"11416:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11409:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11267:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11273:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11284:3:11","type":""}],"src":"11154:271:11"},{"body":{"nodeType":"YulBlock","src":"11537:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11559:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11567:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11555:3:11"},"nodeType":"YulFunctionCall","src":"11555:14:11"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"11571:31:11","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11548:6:11"},"nodeType":"YulFunctionCall","src":"11548:55:11"},"nodeType":"YulExpressionStatement","src":"11548:55:11"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11529:6:11","type":""}],"src":"11431:179:11"},{"body":{"nodeType":"YulBlock","src":"11762:220:11","statements":[{"nodeType":"YulAssignment","src":"11772:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11838:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11843:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11779:58:11"},"nodeType":"YulFunctionCall","src":"11779:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11772:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11944:3:11"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"11855:88:11"},"nodeType":"YulFunctionCall","src":"11855:93:11"},"nodeType":"YulExpressionStatement","src":"11855:93:11"},{"nodeType":"YulAssignment","src":"11957:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11968:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11973:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11964:3:11"},"nodeType":"YulFunctionCall","src":"11964:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11957:3:11"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11750:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11758:3:11","type":""}],"src":"11616:366:11"},{"body":{"nodeType":"YulBlock","src":"12159:248:11","statements":[{"nodeType":"YulAssignment","src":"12169:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12181:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12192:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12177:3:11"},"nodeType":"YulFunctionCall","src":"12177:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12169:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12216:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12227:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12212:3:11"},"nodeType":"YulFunctionCall","src":"12212:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12235:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12241:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12231:3:11"},"nodeType":"YulFunctionCall","src":"12231:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12205:6:11"},"nodeType":"YulFunctionCall","src":"12205:47:11"},"nodeType":"YulExpressionStatement","src":"12205:47:11"},{"nodeType":"YulAssignment","src":"12261:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12395:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12269:124:11"},"nodeType":"YulFunctionCall","src":"12269:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12261:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12139:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12154:4:11","type":""}],"src":"11988:419:11"},{"body":{"nodeType":"YulBlock","src":"12472:40:11","statements":[{"nodeType":"YulAssignment","src":"12483:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12499:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12493:5:11"},"nodeType":"YulFunctionCall","src":"12493:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12483:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12455:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12465:6:11","type":""}],"src":"12413:99:11"},{"body":{"nodeType":"YulBlock","src":"12566:54:11","statements":[{"nodeType":"YulAssignment","src":"12576:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12594:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12601:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12590:3:11"},"nodeType":"YulFunctionCall","src":"12590:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12610:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12606:3:11"},"nodeType":"YulFunctionCall","src":"12606:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12586:3:11"},"nodeType":"YulFunctionCall","src":"12586:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12576:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12549:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12559:6:11","type":""}],"src":"12518:102:11"},{"body":{"nodeType":"YulBlock","src":"12718:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12728:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12775:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12742:32:11"},"nodeType":"YulFunctionCall","src":"12742:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12732:6:11","type":""}]},{"nodeType":"YulAssignment","src":"12790:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12856:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12861:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12797:58:11"},"nodeType":"YulFunctionCall","src":"12797:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12790:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12916:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12923:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12912:3:11"},"nodeType":"YulFunctionCall","src":"12912:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"12930:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12935:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12877:34:11"},"nodeType":"YulFunctionCall","src":"12877:65:11"},"nodeType":"YulExpressionStatement","src":"12877:65:11"},{"nodeType":"YulAssignment","src":"12951:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12962:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12989:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12967:21:11"},"nodeType":"YulFunctionCall","src":"12967:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12958:3:11"},"nodeType":"YulFunctionCall","src":"12958:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12951:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12699:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12706:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12714:3:11","type":""}],"src":"12626:377:11"},{"body":{"nodeType":"YulBlock","src":"13127:195:11","statements":[{"nodeType":"YulAssignment","src":"13137:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13149:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13160:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13145:3:11"},"nodeType":"YulFunctionCall","src":"13145:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13137:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13184:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13195:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13180:3:11"},"nodeType":"YulFunctionCall","src":"13180:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13203:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13209:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13199:3:11"},"nodeType":"YulFunctionCall","src":"13199:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13173:6:11"},"nodeType":"YulFunctionCall","src":"13173:47:11"},"nodeType":"YulExpressionStatement","src":"13173:47:11"},{"nodeType":"YulAssignment","src":"13229:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13301:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"13310:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13237:63:11"},"nodeType":"YulFunctionCall","src":"13237:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13229:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13099:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13111:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13122:4:11","type":""}],"src":"13009:313:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$586_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$586_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$586__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131(memPtr) {\n\n        mstore(add(memPtr, 0), \"EmissorCBIO: amount must be grea\")\n\n        mstore(add(memPtr, 32), \"ter than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e66c6a3aa66d9d141cdbc78278d9a6866215ed42b2933d56f7e3bdd8c06f131_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507(memPtr) {\n\n        mstore(add(memPtr, 0), \"EmissorCBIO: amount must be less\")\n\n        mstore(add(memPtr, 32), \" than the balance of the contrac\")\n\n        mstore(add(memPtr, 64), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974b25441d0d0467c6e83596dfd3dccd824c33a3c7ecb0bd951dac0cd0c84507_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c806325e057501461005c5780633abf1a941461008c578063736001f4146100965780638fa2a903146100b257806399e1f6f9146100e2575b600080fd5b61007660048036038101906100719190610805565b610100565b604051610083919061084b565b60405180910390f35b610094610149565b005b6100b060048036038101906100ab9190610892565b6101f8565b005b6100cc60048036038101906100c79190610805565b61040e565b6040516100d991906108ed565b60405180910390f35b6100ea610464565b6040516100f79190610967565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101f65760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b6000811161023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610a05565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102949190610a34565b602060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610a64565b8110610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d90610b29565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561040a576103b3828260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104889092919063ffffffff16565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104029190610b78565b925050819055505b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105098363a9059cbb60e01b84846040516024016104a7929190610bac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061050e565b505050565b6000610570826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105d59092919063ffffffff16565b90506000815111156105d057808060200190518101906105909190610c01565b6105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690610ca0565b60405180910390fd5b5b505050565b60606105e484846000856105ed565b90509392505050565b606082471015610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062990610d32565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161065b9190610dc3565b60006040518083038185875af1925050503d8060008114610698576040519150601f19603f3d011682016040523d82523d6000602084013e61069d565b606091505b50915091506106ae878383876106ba565b92505050949350505050565b6060831561071c576000835103610714576106d48561072f565b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a90610e26565b60405180910390fd5b5b829050610727565b6107268383610752565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156107655781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107999190610e9b565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d2826107a7565b9050919050565b6107e2816107c7565b81146107ed57600080fd5b50565b6000813590506107ff816107d9565b92915050565b60006020828403121561081b5761081a6107a2565b5b6000610829848285016107f0565b91505092915050565b6000819050919050565b61084581610832565b82525050565b6000602082019050610860600083018461083c565b92915050565b61086f81610832565b811461087a57600080fd5b50565b60008135905061088c81610866565b92915050565b600080604083850312156108a9576108a86107a2565b5b60006108b7858286016107f0565b92505060206108c88582860161087d565b9150509250929050565b60008115159050919050565b6108e7816108d2565b82525050565b600060208201905061090260008301846108de565b92915050565b6000819050919050565b600061092d610928610923846107a7565b610908565b6107a7565b9050919050565b600061093f82610912565b9050919050565b600061095182610934565b9050919050565b61096181610946565b82525050565b600060208201905061097c6000830184610958565b92915050565b600082825260208201905092915050565b7f456d6973736f724342494f3a20616d6f756e74206d757374206265206772656160008201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b60006109ef602a83610982565b91506109fa82610993565b604082019050919050565b60006020820190508181036000830152610a1e816109e2565b9050919050565b610a2e816107c7565b82525050565b6000602082019050610a496000830184610a25565b92915050565b600081519050610a5e81610866565b92915050565b600060208284031215610a7a57610a796107a2565b5b6000610a8884828501610a4f565b91505092915050565b7f456d6973736f724342494f3a20616d6f756e74206d757374206265206c65737360008201527f207468616e207468652062616c616e6365206f662074686520636f6e7472616360208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b6000610b13604183610982565b9150610b1e82610a91565b606082019050919050565b60006020820190508181036000830152610b4281610b06565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8382610832565b9150610b8e83610832565b9250828201905080821115610ba657610ba5610b49565b5b92915050565b6000604082019050610bc16000830185610a25565b610bce602083018461083c565b9392505050565b610bde816108d2565b8114610be957600080fd5b50565b600081519050610bfb81610bd5565b92915050565b600060208284031215610c1757610c166107a2565b5b6000610c2584828501610bec565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610c8a602a83610982565b9150610c9582610c2e565b604082019050919050565b60006020820190508181036000830152610cb981610c7d565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610d1c602683610982565b9150610d2782610cc0565b604082019050919050565b60006020820190508181036000830152610d4b81610d0f565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610d86578082015181840152602081019050610d6b565b60008484015250505050565b6000610d9d82610d52565b610da78185610d5d565b9350610db7818560208601610d68565b80840191505092915050565b6000610dcf8284610d92565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610e10601d83610982565b9150610e1b82610dda565b602082019050919050565b60006020820190508181036000830152610e3f81610e03565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610e6d82610e46565b610e778185610982565b9350610e87818560208601610d68565b610e9081610e51565b840191505092915050565b60006020820190508181036000830152610eb58184610e62565b90509291505056fea2646970667358221220e8ee64fe796012e1f20a4842c4729699887c65952bca64172024e983092f9f6964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25E05750 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3ABF1A94 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x736001F4 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8FA2A903 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x99E1F6F9 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F6 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xA64 JUMP JUMPDEST DUP2 LT PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x40A JUMPI PUSH2 0x3B3 DUP3 DUP3 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x488 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x509 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4A7 SWAP3 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x50E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x5D0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C6 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x698 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x69D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6AE DUP8 DUP4 DUP4 DUP8 PUSH2 0x6BA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x714 JUMPI PUSH2 0x6D4 DUP6 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x727 JUMP JUMPDEST PUSH2 0x726 DUP4 DUP4 PUSH2 0x752 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x765 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP3 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0x7C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7FF DUP2 PUSH2 0x7D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x829 DUP5 DUP3 DUP6 ADD PUSH2 0x7F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x845 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86F DUP2 PUSH2 0x832 JUMP JUMPDEST DUP2 EQ PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88C DUP2 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8B7 DUP6 DUP3 DUP7 ADD PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8C8 DUP6 DUP3 DUP7 ADD PUSH2 0x87D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E7 DUP2 PUSH2 0x8D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x902 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92D PUSH2 0x928 PUSH2 0x923 DUP5 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93F DUP3 PUSH2 0x912 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x951 DUP3 PUSH2 0x934 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH2 0x946 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D6973736F724342494F3A20616D6F756E74206D7573742062652067726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EF PUSH1 0x2A DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0x9FA DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1E DUP2 PUSH2 0x9E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E DUP2 PUSH2 0x7C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA5E DUP2 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA88 DUP5 DUP3 DUP6 ADD PUSH2 0xA4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D6973736F724342494F3A20616D6F756E74206D757374206265206C657373 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207468616E207468652062616C616E6365206F662074686520636F6E74726163 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 PUSH1 0x41 DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xB1E DUP3 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB42 DUP2 PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP3 PUSH2 0x832 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E DUP4 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA25 JUMP JUMPDEST PUSH2 0xBCE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x83C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0x8D2 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBFB DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC25 DUP5 DUP3 DUP6 ADD PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8A PUSH1 0x2A DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xC95 DUP3 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB9 DUP2 PUSH2 0xC7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1C PUSH1 0x26 DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xD27 DUP3 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4B DUP2 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD86 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9D DUP3 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0xDA7 DUP2 DUP6 PUSH2 0xD5D JUMP JUMPDEST SWAP4 POP PUSH2 0xDB7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD68 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCF DUP3 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x1D DUP4 PUSH2 0x982 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3F DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0xE77 DUP2 DUP6 PUSH2 0x982 JUMP JUMPDEST SWAP4 POP PUSH2 0xE87 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xE90 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 DUP5 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xEE PUSH5 0xFE796012E1 CALLCODE EXP BASEFEE TIMESTAMP 0xC4 PUSH19 0x9699887C65952BCA64172024E983092F9F6964 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"180:1138:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:135;;;:::i;:::-;;644:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1080:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;239:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1204:112;1266:4;1288:11;:21;1300:8;1288:21;;;;;;;;;;;;;;;;1281:28;;1204:112;;;:::o;503:135::-;559:13;;;;;;;;;;;545:27;;:10;:27;;;542:90;;617:4;587:15;:27;603:10;587:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;542:90;503:135::o;644:430::-;733:1;723:7;:11;715:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;809:9;;;;;;;;;;:19;;;837:4;809:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;799:7;:44;791:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;926:15;:27;942:10;926:27;;;;;;;;;;;;;;;;;;;;;;;;;923:145;;;968:42;991:9;1002:7;968:9;;;;;;;;;;:22;;;;:42;;;;;:::i;:::-;1050:7;1024:11;:22;1036:9;1024:22;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;923:145;644:430;;:::o;1080:118::-;1144:4;1166:15;:25;1182:8;1166:25;;;;;;;;;;;;;;;;;;;;;;;;;1159:32;;1080:118;;;:::o;239:22::-;;;;;;;;;;;;:::o;763:205:4:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:5:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:60::-;2819:3;2840:5;2833:12;;2791:60;;;:::o;2857:142::-;2907:9;2940:53;2958:34;2967:24;2985:5;2967:24;:::i;:::-;2958:34;:::i;:::-;2940:53;:::i;:::-;2927:66;;2857:142;;;:::o;3005:126::-;3055:9;3088:37;3119:5;3088:37;:::i;:::-;3075:50;;3005:126;;;:::o;3137:139::-;3200:9;3233:37;3264:5;3233:37;:::i;:::-;3220:50;;3137:139;;;:::o;3282:157::-;3382:50;3426:5;3382:50;:::i;:::-;3377:3;3370:63;3282:157;;:::o;3445:248::-;3551:4;3589:2;3578:9;3574:18;3566:26;;3602:84;3683:1;3672:9;3668:17;3659:6;3602:84;:::i;:::-;3445:248;;;;:::o;3699:169::-;3783:11;3817:6;3812:3;3805:19;3857:4;3852:3;3848:14;3833:29;;3699:169;;;;:::o;3874:229::-;4014:34;4010:1;4002:6;3998:14;3991:58;4083:12;4078:2;4070:6;4066:15;4059:37;3874:229;:::o;4109:366::-;4251:3;4272:67;4336:2;4331:3;4272:67;:::i;:::-;4265:74;;4348:93;4437:3;4348:93;:::i;:::-;4466:2;4461:3;4457:12;4450:19;;4109:366;;;:::o;4481:419::-;4647:4;4685:2;4674:9;4670:18;4662:26;;4734:9;4728:4;4724:20;4720:1;4709:9;4705:17;4698:47;4762:131;4888:4;4762:131;:::i;:::-;4754:139;;4481:419;;;:::o;4906:118::-;4993:24;5011:5;4993:24;:::i;:::-;4988:3;4981:37;4906:118;;:::o;5030:222::-;5123:4;5161:2;5150:9;5146:18;5138:26;;5174:71;5242:1;5231:9;5227:17;5218:6;5174:71;:::i;:::-;5030:222;;;;:::o;5258:143::-;5315:5;5346:6;5340:13;5331:22;;5362:33;5389:5;5362:33;:::i;:::-;5258:143;;;;:::o;5407:351::-;5477:6;5526:2;5514:9;5505:7;5501:23;5497:32;5494:119;;;5532:79;;:::i;:::-;5494:119;5652:1;5677:64;5733:7;5724:6;5713:9;5709:22;5677:64;:::i;:::-;5667:74;;5623:128;5407:351;;;;:::o;5764:289::-;5904:34;5900:1;5892:6;5888:14;5881:58;5973:34;5968:2;5960:6;5956:15;5949:59;6042:3;6037:2;6029:6;6025:15;6018:28;5764:289;:::o;6059:366::-;6201:3;6222:67;6286:2;6281:3;6222:67;:::i;:::-;6215:74;;6298:93;6387:3;6298:93;:::i;:::-;6416:2;6411:3;6407:12;6400:19;;6059:366;;;:::o;6431:419::-;6597:4;6635:2;6624:9;6620:18;6612:26;;6684:9;6678:4;6674:20;6670:1;6659:9;6655:17;6648:47;6712:131;6838:4;6712:131;:::i;:::-;6704:139;;6431:419;;;:::o;6856:180::-;6904:77;6901:1;6894:88;7001:4;6998:1;6991:15;7025:4;7022:1;7015:15;7042:191;7082:3;7101:20;7119:1;7101:20;:::i;:::-;7096:25;;7135:20;7153:1;7135:20;:::i;:::-;7130:25;;7178:1;7175;7171:9;7164:16;;7199:3;7196:1;7193:10;7190:36;;;7206:18;;:::i;:::-;7190:36;7042:191;;;;:::o;7239:332::-;7360:4;7398:2;7387:9;7383:18;7375:26;;7411:71;7479:1;7468:9;7464:17;7455:6;7411:71;:::i;:::-;7492:72;7560:2;7549:9;7545:18;7536:6;7492:72;:::i;:::-;7239:332;;;;;:::o;7577:116::-;7647:21;7662:5;7647:21;:::i;:::-;7640:5;7637:32;7627:60;;7683:1;7680;7673:12;7627:60;7577:116;:::o;7699:137::-;7753:5;7784:6;7778:13;7769:22;;7800:30;7824:5;7800:30;:::i;:::-;7699:137;;;;:::o;7842:345::-;7909:6;7958:2;7946:9;7937:7;7933:23;7929:32;7926:119;;;7964:79;;:::i;:::-;7926:119;8084:1;8109:61;8162:7;8153:6;8142:9;8138:22;8109:61;:::i;:::-;8099:71;;8055:125;7842:345;;;;:::o;8193:229::-;8333:34;8329:1;8321:6;8317:14;8310:58;8402:12;8397:2;8389:6;8385:15;8378:37;8193:229;:::o;8428:366::-;8570:3;8591:67;8655:2;8650:3;8591:67;:::i;:::-;8584:74;;8667:93;8756:3;8667:93;:::i;:::-;8785:2;8780:3;8776:12;8769:19;;8428:366;;;:::o;8800:419::-;8966:4;9004:2;8993:9;8989:18;8981:26;;9053:9;9047:4;9043:20;9039:1;9028:9;9024:17;9017:47;9081:131;9207:4;9081:131;:::i;:::-;9073:139;;8800:419;;;:::o;9225:225::-;9365:34;9361:1;9353:6;9349:14;9342:58;9434:8;9429:2;9421:6;9417:15;9410:33;9225:225;:::o;9456:366::-;9598:3;9619:67;9683:2;9678:3;9619:67;:::i;:::-;9612:74;;9695:93;9784:3;9695:93;:::i;:::-;9813:2;9808:3;9804:12;9797:19;;9456:366;;;:::o;9828:419::-;9994:4;10032:2;10021:9;10017:18;10009:26;;10081:9;10075:4;10071:20;10067:1;10056:9;10052:17;10045:47;10109:131;10235:4;10109:131;:::i;:::-;10101:139;;9828:419;;;:::o;10253:98::-;10304:6;10338:5;10332:12;10322:22;;10253:98;;;:::o;10357:147::-;10458:11;10495:3;10480:18;;10357:147;;;;:::o;10510:246::-;10591:1;10601:113;10615:6;10612:1;10609:13;10601:113;;;10700:1;10695:3;10691:11;10685:18;10681:1;10676:3;10672:11;10665:39;10637:2;10634:1;10630:10;10625:15;;10601:113;;;10748:1;10739:6;10734:3;10730:16;10723:27;10572:184;10510:246;;;:::o;10762:386::-;10866:3;10894:38;10926:5;10894:38;:::i;:::-;10948:88;11029:6;11024:3;10948:88;:::i;:::-;10941:95;;11045:65;11103:6;11098:3;11091:4;11084:5;11080:16;11045:65;:::i;:::-;11135:6;11130:3;11126:16;11119:23;;10870:278;10762:386;;;;:::o;11154:271::-;11284:3;11306:93;11395:3;11386:6;11306:93;:::i;:::-;11299:100;;11416:3;11409:10;;11154:271;;;;:::o;11431:179::-;11571:31;11567:1;11559:6;11555:14;11548:55;11431:179;:::o;11616:366::-;11758:3;11779:67;11843:2;11838:3;11779:67;:::i;:::-;11772:74;;11855:93;11944:3;11855:93;:::i;:::-;11973:2;11968:3;11964:12;11957:19;;11616:366;;;:::o;11988:419::-;12154:4;12192:2;12181:9;12177:18;12169:26;;12241:9;12235:4;12231:20;12227:1;12216:9;12212:17;12205:47;12269:131;12395:4;12269:131;:::i;:::-;12261:139;;11988:419;;;:::o;12413:99::-;12465:6;12499:5;12493:12;12483:22;;12413:99;;;:::o;12518:102::-;12559:6;12610:2;12606:7;12601:2;12594:5;12590:14;12586:28;12576:38;;12518:102;;;:::o;12626:377::-;12714:3;12742:39;12775:5;12742:39;:::i;:::-;12797:71;12861:6;12856:3;12797:71;:::i;:::-;12790:78;;12877:65;12935:6;12930:3;12923:4;12916:5;12912:16;12877:65;:::i;:::-;12967:29;12989:6;12967:29;:::i;:::-;12962:3;12958:39;12951:46;;12718:285;12626:377;;;;:::o;13009:313::-;13122:4;13160:2;13149:9;13145:18;13137:26;;13209:9;13203:4;13199:20;13195:1;13184:9;13180:17;13173:47;13237:78;13310:4;13301:6;13237:78;:::i;:::-;13229:86;;13009:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"765400","executionCost":"infinite","totalCost":"infinite"},"external":{"addEmissor()":"26670","cbioToken()":"infinite","emitCBIO(address,uint256)":"infinite","getCBIOSemited(address)":"2819","isAddressAllowed(address)":"2927"}},"methodIdentifiers":{"addEmissor()":"3abf1a94","cbioToken()":"99e1f6f9","emitCBIO(address,uint256)":"736001f4","getCBIOSemited(address)":"25e05750","isAddressAllowed(address)":"8fa2a903"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cbioToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"addEmissor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cbioToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emitCBIO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getCBIOSemited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EmissorCBIO.sol\":\"EmissorCBIO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/EmissorCBIO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract EmissorCBIO {\\n    using SafeERC20 for ERC20;\\n\\n    ERC20 public cbioToken;\\n    mapping(address => bool) allowedEmissors;\\n    mapping(address => uint) cbiosEmited;\\n    address ownerExchange;\\n\\n    constructor(address _cbioToken) {\\n        cbioToken = ERC20(_cbioToken);\\n        ownerExchange = msg.sender;\\n    }\\n\\n    function addEmissor() public {\\n        if(msg.sender == ownerExchange){\\n            allowedEmissors[msg.sender] = true;\\n        }\\n    }\\n\\n    function emitCBIO(address _receiver, uint256 _amount) public {\\n        require(_amount > 0, \\\"EmissorCBIO: amount must be greater than 0\\\");\\n        require(_amount < cbioToken.balanceOf(address(this)), \\\"EmissorCBIO: amount must be less than the balance of the contract\\\");\\n        if(allowedEmissors[msg.sender]){\\n            cbioToken.safeTransfer(_receiver, _amount);\\n            cbiosEmited[_receiver] += _amount;\\n        }\\n    }\\n\\n    function isAddressAllowed(address _address) public view returns(bool){\\n        return allowedEmissors[_address];\\n    }\\n\\n    function getCBIOSemited(address _address) public view returns(uint){\\n        return cbiosEmited[_address];\\n    }\\n}\",\"keccak256\":\"0xdb7f7e481ce6ac485f49b5094552f24ffbb77e95d333708a5f06bfe9c67b69eb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1389,"contract":"contracts/EmissorCBIO.sol:EmissorCBIO","label":"cbioToken","offset":0,"slot":"0","type":"t_contract(ERC20)586"},{"astId":1393,"contract":"contracts/EmissorCBIO.sol:EmissorCBIO","label":"allowedEmissors","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":1397,"contract":"contracts/EmissorCBIO.sol:EmissorCBIO","label":"cbiosEmited","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":1399,"contract":"contracts/EmissorCBIO.sol:EmissorCBIO","label":"ownerExchange","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ERC20)586":{"encoding":"inplace","label":"contract ERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Exchange.sol":{"Exchange":{"abi":[{"inputs":[{"internalType":"address","name":"_Cbiostoken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cbiosTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokensSold","type":"uint256"},{"internalType":"uint256","name":"_minEth","type":"uint256"}],"name":"cbiosTokenToEth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minTokens","type":"uint256"}],"name":"ethToCbiosToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"inputReserve","type":"uint256"},{"internalType":"uint256","name":"outputReserve","type":"uint256"}],"name":"getAmountOfTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1536":{"entryPoint":null,"id":1536,"parameterSlots":1,"returnSlots":0},"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982_to_t_string_memory_ptr_fromStack":{"entryPoint":1504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":701,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":543,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1408,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1022,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":424,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":837,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":983,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":857,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":722,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":648,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":847,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1115,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":601,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":554,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":387,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":738,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1102,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":955,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982":{"entryPoint":1425,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":751,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":907,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":444,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":950,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7629:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"759:80:11","statements":[{"nodeType":"YulAssignment","src":"769:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:11"},"nodeType":"YulFunctionCall","src":"778:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:11"},"nodeType":"YulFunctionCall","src":"800:33:11"},"nodeType":"YulExpressionStatement","src":"800:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:11","type":""}],"src":"696:143:11"},{"body":{"nodeType":"YulBlock","src":"922:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:11"},"nodeType":"YulFunctionCall","src":"970:79:11"},"nodeType":"YulExpressionStatement","src":"970:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:11"},"nodeType":"YulFunctionCall","src":"939:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:11"},"nodeType":"YulFunctionCall","src":"935:32:11"},"nodeType":"YulIf","src":"932:119:11"},{"nodeType":"YulBlock","src":"1061:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:11"},"nodeType":"YulFunctionCall","src":"1147:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:11"},"nodeType":"YulFunctionCall","src":"1115:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:11","type":""}],"src":"845:351:11"},{"body":{"nodeType":"YulBlock","src":"1261:40:11","statements":[{"nodeType":"YulAssignment","src":"1272:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1288:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1282:5:11"},"nodeType":"YulFunctionCall","src":"1282:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1272:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1254:6:11","type":""}],"src":"1202:99:11"},{"body":{"nodeType":"YulBlock","src":"1335:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:11"},"nodeType":"YulFunctionCall","src":"1345:88:11"},"nodeType":"YulExpressionStatement","src":"1345:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1449:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1452:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:11"},"nodeType":"YulFunctionCall","src":"1442:15:11"},"nodeType":"YulExpressionStatement","src":"1442:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:11"},"nodeType":"YulFunctionCall","src":"1466:15:11"},"nodeType":"YulExpressionStatement","src":"1466:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1307:180:11"},{"body":{"nodeType":"YulBlock","src":"1521:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1531:6:11"},"nodeType":"YulFunctionCall","src":"1531:88:11"},"nodeType":"YulExpressionStatement","src":"1531:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1628:6:11"},"nodeType":"YulFunctionCall","src":"1628:15:11"},"nodeType":"YulExpressionStatement","src":"1628:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:15:11"},"nodeType":"YulExpressionStatement","src":"1652:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1493:180:11"},{"body":{"nodeType":"YulBlock","src":"1730:269:11","statements":[{"nodeType":"YulAssignment","src":"1740:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1754:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1750:3:11"},"nodeType":"YulFunctionCall","src":"1750:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1740:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1771:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1801:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1807:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1797:3:11"},"nodeType":"YulFunctionCall","src":"1797:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1775:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1848:51:11","statements":[{"nodeType":"YulAssignment","src":"1862:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1876:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1884:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1872:3:11"},"nodeType":"YulFunctionCall","src":"1872:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1862:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1828:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1821:6:11"},"nodeType":"YulFunctionCall","src":"1821:26:11"},"nodeType":"YulIf","src":"1818:81:11"},{"body":{"nodeType":"YulBlock","src":"1951:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1965:16:11"},"nodeType":"YulFunctionCall","src":"1965:18:11"},"nodeType":"YulExpressionStatement","src":"1965:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1915:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1938:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1946:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:11"},"nodeType":"YulFunctionCall","src":"1935:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:11"},"nodeType":"YulFunctionCall","src":"1912:38:11"},"nodeType":"YulIf","src":"1909:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1714:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1723:6:11","type":""}],"src":"1679:320:11"},{"body":{"nodeType":"YulBlock","src":"2059:87:11","statements":[{"nodeType":"YulAssignment","src":"2069:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2077:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2069:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2100:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2090:6:11"},"nodeType":"YulFunctionCall","src":"2090:14:11"},"nodeType":"YulExpressionStatement","src":"2090:14:11"},{"nodeType":"YulAssignment","src":"2113:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2121:9:11"},"nodeType":"YulFunctionCall","src":"2121:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2113:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2046:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2054:4:11","type":""}],"src":"2005:141:11"},{"body":{"nodeType":"YulBlock","src":"2196:49:11","statements":[{"nodeType":"YulAssignment","src":"2206:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:11"},"nodeType":"YulFunctionCall","src":"2220:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2216:3:11"},"nodeType":"YulFunctionCall","src":"2216:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2206:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2189:6:11","type":""}],"src":"2152:93:11"},{"body":{"nodeType":"YulBlock","src":"2304:54:11","statements":[{"nodeType":"YulAssignment","src":"2314:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2339:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"2345:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2335:3:11"},"nodeType":"YulFunctionCall","src":"2335:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2314:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2279:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"2285:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2295:8:11","type":""}],"src":"2251:107:11"},{"body":{"nodeType":"YulBlock","src":"2440:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2450:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2471:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2483:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2467:3:11"},"nodeType":"YulFunctionCall","src":"2467:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2454:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2494:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2525:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2536:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2506:18:11"},"nodeType":"YulFunctionCall","src":"2506:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2498:4:11","type":""}]},{"nodeType":"YulAssignment","src":"2612:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2643:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2654:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2624:18:11"},"nodeType":"YulFunctionCall","src":"2624:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2612:8:11"}]},{"nodeType":"YulAssignment","src":"2672:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2685:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2696:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2692:3:11"},"nodeType":"YulFunctionCall","src":"2692:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2681:3:11"},"nodeType":"YulFunctionCall","src":"2681:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:11"}]},{"nodeType":"YulAssignment","src":"2711:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2724:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2735:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"2745:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2731:3:11"},"nodeType":"YulFunctionCall","src":"2731:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2721:2:11"},"nodeType":"YulFunctionCall","src":"2721:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2711:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2401:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2408:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2420:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2433:6:11","type":""}],"src":"2364:393:11"},{"body":{"nodeType":"YulBlock","src":"2808:32:11","statements":[{"nodeType":"YulAssignment","src":"2818:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2829:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2818:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2790:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2800:7:11","type":""}],"src":"2763:77:11"},{"body":{"nodeType":"YulBlock","src":"2878:28:11","statements":[{"nodeType":"YulAssignment","src":"2888:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2895:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2888:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2864:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2874:3:11","type":""}],"src":"2846:60:11"},{"body":{"nodeType":"YulBlock","src":"2972:82:11","statements":[{"nodeType":"YulAssignment","src":"2982:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3040:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3022:17:11"},"nodeType":"YulFunctionCall","src":"3022:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3013:8:11"},"nodeType":"YulFunctionCall","src":"3013:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2995:17:11"},"nodeType":"YulFunctionCall","src":"2995:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2982:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2952:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2962:9:11","type":""}],"src":"2912:142:11"},{"body":{"nodeType":"YulBlock","src":"3107:28:11","statements":[{"nodeType":"YulAssignment","src":"3117:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"3124:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3117:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3103:3:11","type":""}],"src":"3060:75:11"},{"body":{"nodeType":"YulBlock","src":"3217:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3282:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3251:30:11"},"nodeType":"YulFunctionCall","src":"3251:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3231:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3306:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3346:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3340:5:11"},"nodeType":"YulFunctionCall","src":"3340:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3353:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3385:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3361:23:11"},"nodeType":"YulFunctionCall","src":"3361:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3312:27:11"},"nodeType":"YulFunctionCall","src":"3312:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3299:6:11"},"nodeType":"YulFunctionCall","src":"3299:105:11"},"nodeType":"YulExpressionStatement","src":"3299:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3194:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3200:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3208:7:11","type":""}],"src":"3141:269:11"},{"body":{"nodeType":"YulBlock","src":"3465:24:11","statements":[{"nodeType":"YulAssignment","src":"3475:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3482:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3475:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3461:3:11","type":""}],"src":"3416:73:11"},{"body":{"nodeType":"YulBlock","src":"3548:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3558:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3572:30:11"},"nodeType":"YulFunctionCall","src":"3572:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3562:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3657:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3663:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3671:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3613:43:11"},"nodeType":"YulFunctionCall","src":"3613:65:11"},"nodeType":"YulExpressionStatement","src":"3613:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3534:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3540:6:11","type":""}],"src":"3495:189:11"},{"body":{"nodeType":"YulBlock","src":"3740:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"3807:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3851:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3821:29:11"},"nodeType":"YulFunctionCall","src":"3821:39:11"},"nodeType":"YulExpressionStatement","src":"3821:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3760:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"3767:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3757:2:11"},"nodeType":"YulFunctionCall","src":"3757:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3772:26:11","statements":[{"nodeType":"YulAssignment","src":"3774:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3787:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3794:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:11"},"nodeType":"YulFunctionCall","src":"3783:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3774:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3754:2:11","statements":[]},"src":"3750:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3728:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3735:3:11","type":""}],"src":"3690:186:11"},{"body":{"nodeType":"YulBlock","src":"3961:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"3987:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4001:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4049:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4017:31:11"},"nodeType":"YulFunctionCall","src":"4017:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4005:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4068:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4091:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4119:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4101:17:11"},"nodeType":"YulFunctionCall","src":"4101:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:11"},"nodeType":"YulFunctionCall","src":"4087:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4072:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4288:27:11","statements":[{"nodeType":"YulAssignment","src":"4290:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4305:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4290:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4272:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4284:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4269:2:11"},"nodeType":"YulFunctionCall","src":"4269:18:11"},"nodeType":"YulIf","src":"4266:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4357:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4374:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4402:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4384:17:11"},"nodeType":"YulFunctionCall","src":"4384:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:11"},"nodeType":"YulFunctionCall","src":"4370:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4328:28:11"},"nodeType":"YulFunctionCall","src":"4328:80:11"},"nodeType":"YulExpressionStatement","src":"4328:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3978:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3983:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3975:2:11"},"nodeType":"YulFunctionCall","src":"3975:11:11"},"nodeType":"YulIf","src":"3972:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3937:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"3944:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3949:10:11","type":""}],"src":"3882:543:11"},{"body":{"nodeType":"YulBlock","src":"4494:54:11","statements":[{"nodeType":"YulAssignment","src":"4504:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4529:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"4535:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4525:3:11"},"nodeType":"YulFunctionCall","src":"4525:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4504:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4469:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"4475:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4485:8:11","type":""}],"src":"4431:117:11"},{"body":{"nodeType":"YulBlock","src":"4605:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4615:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4664:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4667:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4660:3:11"},"nodeType":"YulFunctionCall","src":"4660:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4675:3:11"},"nodeType":"YulFunctionCall","src":"4675:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4631:28:11"},"nodeType":"YulFunctionCall","src":"4631:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4627:3:11"},"nodeType":"YulFunctionCall","src":"4627:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4619:4:11","type":""}]},{"nodeType":"YulAssignment","src":"4692:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4706:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"4712:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4702:3:11"},"nodeType":"YulFunctionCall","src":"4702:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4582:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4588:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4598:6:11","type":""}],"src":"4554:169:11"},{"body":{"nodeType":"YulBlock","src":"4809:214:11","statements":[{"nodeType":"YulAssignment","src":"4942:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4969:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"4975:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4950:18:11"},"nodeType":"YulFunctionCall","src":"4950:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4942:4:11"}]},{"nodeType":"YulAssignment","src":"4988:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4999:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5009:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5012:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5005:3:11"},"nodeType":"YulFunctionCall","src":"5005:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4996:2:11"},"nodeType":"YulFunctionCall","src":"4996:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4988:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4790:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"4796:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4804:4:11","type":""}],"src":"4728:295:11"},{"body":{"nodeType":"YulBlock","src":"5120:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5131:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5178:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5145:32:11"},"nodeType":"YulFunctionCall","src":"5145:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5135:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5267:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5269:16:11"},"nodeType":"YulFunctionCall","src":"5269:18:11"},"nodeType":"YulExpressionStatement","src":"5269:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5239:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5247:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5236:2:11"},"nodeType":"YulFunctionCall","src":"5236:30:11"},"nodeType":"YulIf","src":"5233:56:11"},{"nodeType":"YulVariableDeclaration","src":"5299:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5345:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5339:5:11"},"nodeType":"YulFunctionCall","src":"5339:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5313:25:11"},"nodeType":"YulFunctionCall","src":"5313:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5303:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5444:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5450:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5458:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5398:45:11"},"nodeType":"YulFunctionCall","src":"5398:67:11"},"nodeType":"YulExpressionStatement","src":"5398:67:11"},{"nodeType":"YulVariableDeclaration","src":"5475:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5492:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5479:9:11","type":""}]},{"nodeType":"YulAssignment","src":"5503:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5516:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5503:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5567:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5581:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5600:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5608:3:11"},"nodeType":"YulFunctionCall","src":"5608:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5596:3:11"},"nodeType":"YulFunctionCall","src":"5596:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5585:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5632:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5678:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5646:31:11"},"nodeType":"YulFunctionCall","src":"5646:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5636:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5696:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5705:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5700:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5789:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5807:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5812:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:11"},"nodeType":"YulFunctionCall","src":"5803:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5797:5:11"},"nodeType":"YulFunctionCall","src":"5797:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5782:6:11"},"nodeType":"YulFunctionCall","src":"5782:42:11"},"nodeType":"YulExpressionStatement","src":"5782:42:11"},{"nodeType":"YulAssignment","src":"5841:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5855:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:11"},"nodeType":"YulFunctionCall","src":"5851:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5841:6:11"}]},{"nodeType":"YulAssignment","src":"5882:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5899:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5895:3:11"},"nodeType":"YulFunctionCall","src":"5895:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5882:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5730:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5733:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5727:2:11"},"nodeType":"YulFunctionCall","src":"5727:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5742:21:11","statements":[{"nodeType":"YulAssignment","src":"5744:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5753:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"5756:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:11"},"nodeType":"YulFunctionCall","src":"5749:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5744:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"5723:3:11","statements":[]},"src":"5719:208:11"},{"body":{"nodeType":"YulBlock","src":"5963:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5981:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6008:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6013:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:11"},"nodeType":"YulFunctionCall","src":"6004:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5998:5:11"},"nodeType":"YulFunctionCall","src":"5998:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5985:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6048:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6075:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6090:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6098:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6086:3:11"},"nodeType":"YulFunctionCall","src":"6086:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6056:18:11"},"nodeType":"YulFunctionCall","src":"6056:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6041:6:11"},"nodeType":"YulFunctionCall","src":"6041:64:11"},"nodeType":"YulExpressionStatement","src":"6041:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5946:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5955:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5943:2:11"},"nodeType":"YulFunctionCall","src":"5943:19:11"},"nodeType":"YulIf","src":"5940:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6139:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6153:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6161:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6149:3:11"},"nodeType":"YulFunctionCall","src":"6149:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"6165:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6145:3:11"},"nodeType":"YulFunctionCall","src":"6145:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6132:6:11"},"nodeType":"YulFunctionCall","src":"6132:36:11"},"nodeType":"YulExpressionStatement","src":"6132:36:11"}]},"nodeType":"YulCase","src":"5560:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5565:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6195:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6209:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6222:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6213:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6246:67:11","statements":[{"nodeType":"YulAssignment","src":"6264:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6283:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6288:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6279:3:11"},"nodeType":"YulFunctionCall","src":"6279:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6273:5:11"},"nodeType":"YulFunctionCall","src":"6273:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6264:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6239:6:11"},"nodeType":"YulIf","src":"6236:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6333:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6392:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"6399:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6339:52:11"},"nodeType":"YulFunctionCall","src":"6339:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6326:6:11"},"nodeType":"YulFunctionCall","src":"6326:81:11"},"nodeType":"YulExpressionStatement","src":"6326:81:11"}]},"nodeType":"YulCase","src":"6187:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5540:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5548:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5537:2:11"},"nodeType":"YulFunctionCall","src":"5537:14:11"},"nodeType":"YulSwitch","src":"5530:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5109:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"5115:3:11","type":""}],"src":"5028:1395:11"},{"body":{"nodeType":"YulBlock","src":"6525:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6542:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"6547:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6535:6:11"},"nodeType":"YulFunctionCall","src":"6535:19:11"},"nodeType":"YulExpressionStatement","src":"6535:19:11"},{"nodeType":"YulAssignment","src":"6563:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6582:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6587:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6578:3:11"},"nodeType":"YulFunctionCall","src":"6578:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6563:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6497:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6502:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6513:11:11","type":""}],"src":"6429:169:11"},{"body":{"nodeType":"YulBlock","src":"6710:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6732:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6740:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6728:3:11"},"nodeType":"YulFunctionCall","src":"6728:14:11"},{"hexValue":"546f6b656e2061646472657373207061737365642069732061206e756c6c2061","kind":"string","nodeType":"YulLiteral","src":"6744:34:11","type":"","value":"Token address passed is a null a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6721:6:11"},"nodeType":"YulFunctionCall","src":"6721:58:11"},"nodeType":"YulExpressionStatement","src":"6721:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6800:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6808:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6796:3:11"},"nodeType":"YulFunctionCall","src":"6796:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6813:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6789:6:11"},"nodeType":"YulFunctionCall","src":"6789:33:11"},"nodeType":"YulExpressionStatement","src":"6789:33:11"}]},"name":"store_literal_in_memory_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6702:6:11","type":""}],"src":"6604:225:11"},{"body":{"nodeType":"YulBlock","src":"6981:220:11","statements":[{"nodeType":"YulAssignment","src":"6991:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7057:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7062:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6998:58:11"},"nodeType":"YulFunctionCall","src":"6998:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6991:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7163:3:11"}],"functionName":{"name":"store_literal_in_memory_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982","nodeType":"YulIdentifier","src":"7074:88:11"},"nodeType":"YulFunctionCall","src":"7074:93:11"},"nodeType":"YulExpressionStatement","src":"7074:93:11"},{"nodeType":"YulAssignment","src":"7176:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7187:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7192:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7183:3:11"},"nodeType":"YulFunctionCall","src":"7183:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7176:3:11"}]}]},"name":"abi_encode_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6969:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6977:3:11","type":""}],"src":"6835:366:11"},{"body":{"nodeType":"YulBlock","src":"7378:248:11","statements":[{"nodeType":"YulAssignment","src":"7388:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7400:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7411:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7396:3:11"},"nodeType":"YulFunctionCall","src":"7396:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7388:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7435:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7446:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:11"},"nodeType":"YulFunctionCall","src":"7431:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7454:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7460:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7450:3:11"},"nodeType":"YulFunctionCall","src":"7450:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7424:6:11"},"nodeType":"YulFunctionCall","src":"7424:47:11"},"nodeType":"YulExpressionStatement","src":"7424:47:11"},{"nodeType":"YulAssignment","src":"7480:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7614:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7488:124:11"},"nodeType":"YulFunctionCall","src":"7488:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7480:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7358:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7373:4:11","type":""}],"src":"7207:419:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address passed is a null a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2400a9d099a9543c415d5d0aa3c7a1584964446670c8a3a6d94ac9c56312c982_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B8E CODESIZE SUB DUP1 PUSH3 0x2B8E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4342696F73000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4342494F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x132 SWAP1 PUSH3 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x629 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B5 DUP3 PUSH3 0x188 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C7 DUP2 PUSH3 0x1A8 JUMP JUMPDEST DUP2 EQ PUSH3 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E7 DUP2 PUSH3 0x1BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x206 JUMPI PUSH3 0x205 PUSH3 0x183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x216 DUP5 DUP3 DUP6 ADD PUSH3 0x1D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2B7 JUMPI PUSH3 0x2B6 PUSH3 0x259 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x321 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2E2 JUMP JUMPDEST PUSH3 0x32D DUP7 DUP4 PUSH3 0x2E2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x37A PUSH3 0x374 PUSH3 0x36E DUP5 PUSH3 0x345 JUMP JUMPDEST PUSH3 0x34F JUMP JUMPDEST PUSH3 0x345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x396 DUP4 PUSH3 0x359 JUMP JUMPDEST PUSH3 0x3AE PUSH3 0x3A5 DUP3 PUSH3 0x381 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2EF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3C5 PUSH3 0x3B6 JUMP JUMPDEST PUSH3 0x3D2 DUP2 DUP5 DUP5 PUSH3 0x38B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3FA JUMPI PUSH3 0x3EE PUSH1 0x0 DUP3 PUSH3 0x3BB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x449 JUMPI PUSH3 0x413 DUP2 PUSH3 0x2BD JUMP JUMPDEST PUSH3 0x41E DUP5 PUSH3 0x2D2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x42E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x446 PUSH3 0x43D DUP6 PUSH3 0x2D2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3D7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x44E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x489 DUP4 DUP4 PUSH3 0x45B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4A4 DUP3 PUSH3 0x21F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4C0 JUMPI PUSH3 0x4BF PUSH3 0x22A JUMP JUMPDEST JUMPDEST PUSH3 0x4CC DUP3 SLOAD PUSH3 0x288 JUMP JUMPDEST PUSH3 0x4D9 DUP3 DUP3 DUP6 PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x511 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4FC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x508 DUP6 DUP3 PUSH3 0x47B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x578 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x521 DUP7 PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x54B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x524 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x56B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x567 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x45B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E2061646472657373207061737365642069732061206E756C6C2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EF PUSH1 0x26 DUP4 PUSH3 0x580 JUMP JUMPDEST SWAP2 POP PUSH3 0x5FC DUP3 PUSH3 0x591 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x622 DUP2 PUSH3 0x5E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2555 DUP1 PUSH3 0x639 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xC68F5EAA EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46E JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x7386479E EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x860865DD EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x2DFB72B3 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2DFB72B3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x59BF5D39 EQ PUSH2 0x29F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x533 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x508 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x533 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x516 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x548 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0x555 DUP2 DUP6 DUP6 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x575 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0x582 DUP6 DUP3 DUP6 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0x58D DUP6 DUP6 DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 PUSH2 0x925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5B2 DUP5 DUP4 SELFBALANCE PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x656 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6FB PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C DUP2 DUP6 DUP6 PUSH2 0x70D DUP6 DUP10 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x739 PUSH2 0x925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x7FD JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP DUP3 SWAP4 POP PUSH2 0x7F8 CALLER DUP6 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 CALLVALUE DUP5 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 CALLVALUE PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP DUP1 DUP9 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP DUP2 CALLVALUE PUSH2 0x8F6 PUSH2 0x560 JUMP JUMPDEST PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP6 POP PUSH2 0x916 CALLER DUP8 PUSH2 0x1405 JUMP JUMPDEST POP POP JUMPDEST DUP4 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0xA21 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x63 DUP6 PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x64 DUP8 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABF PUSH2 0x925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAD9 CALLVALUE CALLVALUE SELFBALANCE PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP5 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7B SWAP3 SWAP2 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBD3 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBFF SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0xCAB PUSH2 0x560 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 DUP5 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP8 PUSH2 0xCD4 PUSH2 0x925 JUMP JUMPDEST PUSH2 0xCDE SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0xCE8 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 CALLER DUP9 PUSH2 0x155B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP3 SWAP2 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP DUP2 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDF6 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE04 DUP3 DUP7 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE40 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE56 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE6D PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0xE7A DUP2 DUP6 DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA0 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F6 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP5 DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1189 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x117B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1188 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF3A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1278 DUP4 DUP4 DUP4 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F5 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13FF DUP5 DUP5 DUP5 PUSH2 0x172D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146B SWAP1 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1480 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1728 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1492 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1543 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1557 PUSH1 0x0 DUP4 DUP4 PUSH2 0x172D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C1 SWAP1 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D6 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1653 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x170F SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1723 DUP4 PUSH1 0x0 DUP5 PUSH2 0x172D JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x179E DUP2 DUP6 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x17AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST PUSH2 0x17B7 DUP2 PUSH2 0x1778 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DC DUP2 DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1814 DUP3 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1824 DUP2 PUSH2 0x1809 JUMP JUMPDEST DUP2 EQ PUSH2 0x182F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1841 DUP2 PUSH2 0x181B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185A DUP2 PUSH2 0x1847 JUMP JUMPDEST DUP2 EQ PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1877 DUP2 PUSH2 0x1851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1894 JUMPI PUSH2 0x1893 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x18BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FC DUP2 PUSH2 0x1847 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1917 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1944 DUP7 DUP3 DUP8 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1955 DUP7 DUP3 DUP8 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1966 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1995 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A6 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C6 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0B DUP5 DUP3 DUP6 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A38 DUP5 DUP3 DUP6 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A68 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A79 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A8A DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1AB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x1809 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B0C DUP6 DUP3 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1D DUP6 DUP3 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B6E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x1B27 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBD PUSH1 0x1A DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC8 DUP3 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BEC DUP2 PUSH2 0x1BB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C08 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1C15 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1C22 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C33 DUP2 PUSH2 0x18BD JUMP JUMPDEST DUP2 EQ PUSH2 0x1C3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C50 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6C JUMPI PUSH2 0x1C6B PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7A DUP5 DUP3 DUP6 ADD PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CBD DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC8 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CE0 JUMPI PUSH2 0x1CDF PUSH2 0x1C83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF1 DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFC DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x1C83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D25 DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D30 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D3E DUP2 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D55 JUMPI PUSH2 0x1D54 PUSH2 0x1C83 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D96 DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA1 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DB1 JUMPI PUSH2 0x1DB0 PUSH2 0x1D5C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206F6620746F6B656E732073656E74206973206C657373207468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E20746865206D696E696D756D20746F6B656E732072657175697265640000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E18 PUSH1 0x3E DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E23 DUP3 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1E0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420726573657276657300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC6 PUSH1 0x10 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED1 DUP3 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF5 DUP2 PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F11 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1F1E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5F616D6F756E742073686F756C642062652067726561746572207468616E207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F81 PUSH1 0x23 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8C DUP3 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB0 DUP2 PUSH2 0x1F74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2013 PUSH1 0x25 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x201E DUP3 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2042 DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A5 PUSH1 0x24 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 DUP3 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D4 DUP2 PUSH2 0x2098 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 PUSH1 0x22 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2166 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A3 PUSH1 0x1D DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x21AE DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x2196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2235 PUSH1 0x25 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2240 DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2264 DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C7 PUSH1 0x23 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D2 DUP3 PUSH2 0x226B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F6 DUP2 PUSH2 0x22BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2359 PUSH1 0x26 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2364 DUP3 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2388 DUP2 PUSH2 0x234C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C5 PUSH1 0x1F DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x23D0 DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F4 DUP2 PUSH2 0x23B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 PUSH1 0x21 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2462 DUP3 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2486 DUP2 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E9 PUSH1 0x22 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x24F4 DUP3 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2518 DUP2 PUSH2 0x24DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY ADDRESS MOD PUSH14 0xC5C9E56AB71B11A2173FC5326F0 0xA9 SWAP4 XOR POP PC 0x1E 0x5D 0xA6 CALLCODE BASEFEE DUP7 PUSH28 0xA11F64736F6C63430008110033000000000000000000000000000000 ","sourceMap":"114:3320:9:-:0;;;187:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;284:1:9::1;261:25;;:11;:25;;::::0;253:76:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;359:11;339:17;;:31;;;;;;;;;;;;;;;;;;187:190:::0;114:3320;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:169::-;6513:11;6547:6;6542:3;6535:19;6587:4;6582:3;6578:14;6563:29;;6429:169;;;;:::o;6604:225::-;6744:34;6740:1;6732:6;6728:14;6721:58;6813:8;6808:2;6800:6;6796:15;6789:33;6604:225;:::o;6835:366::-;6977:3;6998:67;7062:2;7057:3;6998:67;:::i;:::-;6991:74;;7074:93;7163:3;7074:93;:::i;:::-;7192:2;7187:3;7183:12;7176:19;;6835:366;;;:::o;7207:419::-;7373:4;7411:2;7400:9;7396:18;7388:26;;7460:9;7454:4;7450:20;7446:1;7435:9;7431:17;7424:47;7488:131;7614:4;7488:131;:::i;:::-;7480:139;;7207:419;;;:::o;114:3320:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":5933,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":3898,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":5928,"id":574,"parameterSlots":3,"returnSlots":0},"@_burn_475":{"entryPoint":5467,"id":475,"parameterSlots":2,"returnSlots":0},"@_mint_403":{"entryPoint":5125,"id":403,"parameterSlots":2,"returnSlots":0},"@_msgSender_1348":{"entryPoint":3890,"id":1348,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":4355,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":4495,"id":346,"parameterSlots":3,"returnSlots":0},"@addLiquidity_1667":{"entryPoint":1831,"id":1667,"parameterSlots":1,"returnSlots":1},"@allowance_141":{"entryPoint":3755,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":1341,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":2504,"id":98,"parameterSlots":1,"returnSlots":1},"@cbiosTokenAddress_1512":{"entryPoint":3717,"id":1512,"parameterSlots":0,"returnSlots":0},"@cbiosTokenToEth_1889":{"entryPoint":1433,"id":1889,"parameterSlots":2,"returnSlots":0},"@decimals_74":{"entryPoint":1767,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":3563,"id":269,"parameterSlots":2,"returnSlots":1},"@ethToCbiosToken_1835":{"entryPoint":2741,"id":1835,"parameterSlots":1,"returnSlots":0},"@getAmountOfTokens_1792":{"entryPoint":2576,"id":1792,"parameterSlots":3,"returnSlots":1},"@getReserve_1552":{"entryPoint":2341,"id":1552,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":1776,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":1195,"id":54,"parameterSlots":0,"returnSlots":1},"@removeLiquidity_1744":{"entryPoint":3158,"id":1744,"parameterSlots":1,"returnSlots":2},"@symbol_64":{"entryPoint":3012,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":1376,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":1386,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":3682,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6887,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6429,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6269,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":6512,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":6721,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6845,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6345,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":8890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4_to_t_string_memory_ptr_fromStack":{"entryPoint":7691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":9436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":8490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":8598,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":9036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98_to_t_string_memory_ptr_fromStack":{"entryPoint":8052,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":9290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac_to_t_string_memory_ptr_fromStack":{"entryPoint":7088,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":8744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":8344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e_to_t_string_memory_ptr_fromStack":{"entryPoint":7865,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":8198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":9144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6387,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6589,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7155,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7932,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8633,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8087,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7123,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6804,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6604,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5938,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5949,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7346,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7563,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7450,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7398,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6153,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6333,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6121,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6215,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6576,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5966,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6998,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7299,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7516,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6951,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6116,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6008,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":8811,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4":{"entryPoint":7612,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":9357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":8411,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":8557,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":8957,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98":{"entryPoint":7973,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":9211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":8665,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":8265,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e":{"entryPoint":7824,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":8119,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":9103,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6171,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7210,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6225,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25786:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1389:35:11","statements":[{"nodeType":"YulAssignment","src":"1399:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:11"},"nodeType":"YulFunctionCall","src":"1409:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:11","type":""}],"src":"1349:75:11"},{"body":{"nodeType":"YulBlock","src":"1519:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:11"},"nodeType":"YulFunctionCall","src":"1529:12:11"},"nodeType":"YulExpressionStatement","src":"1529:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:11"},{"body":{"nodeType":"YulBlock","src":"1642:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:12:11"},"nodeType":"YulExpressionStatement","src":"1652:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:11"},{"body":{"nodeType":"YulBlock","src":"1721:81:11","statements":[{"nodeType":"YulAssignment","src":"1731:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:11"},"nodeType":"YulFunctionCall","src":"1742:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:11","type":""}],"src":"1676:126:11"},{"body":{"nodeType":"YulBlock","src":"1853:51:11","statements":[{"nodeType":"YulAssignment","src":"1863:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:11"},"nodeType":"YulFunctionCall","src":"1874:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:11","type":""}],"src":"1808:96:11"},{"body":{"nodeType":"YulBlock","src":"1953:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:11"},"nodeType":"YulFunctionCall","src":"2012:12:11"},"nodeType":"YulExpressionStatement","src":"2012:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:11"},"nodeType":"YulFunctionCall","src":"1983:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:11"},"nodeType":"YulFunctionCall","src":"1973:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:11"},"nodeType":"YulFunctionCall","src":"1966:43:11"},"nodeType":"YulIf","src":"1963:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:11","type":""}],"src":"1910:122:11"},{"body":{"nodeType":"YulBlock","src":"2090:87:11","statements":[{"nodeType":"YulAssignment","src":"2100:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:11"},"nodeType":"YulFunctionCall","src":"2109:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:11"},"nodeType":"YulFunctionCall","src":"2138:33:11"},"nodeType":"YulExpressionStatement","src":"2138:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:11","type":""}],"src":"2038:139:11"},{"body":{"nodeType":"YulBlock","src":"2228:32:11","statements":[{"nodeType":"YulAssignment","src":"2238:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:11","type":""}],"src":"2183:77:11"},{"body":{"nodeType":"YulBlock","src":"2309:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:11"},"nodeType":"YulFunctionCall","src":"2368:12:11"},"nodeType":"YulExpressionStatement","src":"2368:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:11"},"nodeType":"YulFunctionCall","src":"2339:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:11"},"nodeType":"YulFunctionCall","src":"2329:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:11"},"nodeType":"YulFunctionCall","src":"2322:43:11"},"nodeType":"YulIf","src":"2319:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:11","type":""}],"src":"2266:122:11"},{"body":{"nodeType":"YulBlock","src":"2446:87:11","statements":[{"nodeType":"YulAssignment","src":"2456:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:11"},"nodeType":"YulFunctionCall","src":"2465:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:11"},"nodeType":"YulFunctionCall","src":"2494:33:11"},"nodeType":"YulExpressionStatement","src":"2494:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:11","type":""}],"src":"2394:139:11"},{"body":{"nodeType":"YulBlock","src":"2622:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:11"},"nodeType":"YulFunctionCall","src":"2670:79:11"},"nodeType":"YulExpressionStatement","src":"2670:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:32:11"},"nodeType":"YulIf","src":"2632:119:11"},{"nodeType":"YulBlock","src":"2761:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:11"},"nodeType":"YulFunctionCall","src":"2836:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:11"},"nodeType":"YulFunctionCall","src":"2815:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:11"}]}]},{"nodeType":"YulBlock","src":"2888:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:11"},"nodeType":"YulFunctionCall","src":"2943:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:11","type":""}],"src":"2539:474:11"},{"body":{"nodeType":"YulBlock","src":"3061:48:11","statements":[{"nodeType":"YulAssignment","src":"3071:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:11"},"nodeType":"YulFunctionCall","src":"3089:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:11"},"nodeType":"YulFunctionCall","src":"3082:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:11","type":""}],"src":"3019:90:11"},{"body":{"nodeType":"YulBlock","src":"3174:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:11"},"nodeType":"YulFunctionCall","src":"3196:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:11"},"nodeType":"YulFunctionCall","src":"3184:34:11"},"nodeType":"YulExpressionStatement","src":"3184:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:11","type":""}],"src":"3115:109:11"},{"body":{"nodeType":"YulBlock","src":"3322:118:11","statements":[{"nodeType":"YulAssignment","src":"3332:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:11"},"nodeType":"YulFunctionCall","src":"3415:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:11"},"nodeType":"YulFunctionCall","src":"3368:65:11"},"nodeType":"YulExpressionStatement","src":"3368:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:11","type":""}],"src":"3230:210:11"},{"body":{"nodeType":"YulBlock","src":"3511:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:11"},"nodeType":"YulFunctionCall","src":"3533:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:11"},"nodeType":"YulFunctionCall","src":"3521:37:11"},"nodeType":"YulExpressionStatement","src":"3521:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:11","type":""}],"src":"3446:118:11"},{"body":{"nodeType":"YulBlock","src":"3668:124:11","statements":[{"nodeType":"YulAssignment","src":"3678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:11"},"nodeType":"YulFunctionCall","src":"3686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:11"},"nodeType":"YulFunctionCall","src":"3714:71:11"},"nodeType":"YulExpressionStatement","src":"3714:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:11","type":""}],"src":"3570:222:11"},{"body":{"nodeType":"YulBlock","src":"3898:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:11"},"nodeType":"YulFunctionCall","src":"3946:79:11"},"nodeType":"YulExpressionStatement","src":"3946:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:32:11"},"nodeType":"YulIf","src":"3908:119:11"},{"nodeType":"YulBlock","src":"4037:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:11"},"nodeType":"YulFunctionCall","src":"4091:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:11"}]}]},{"nodeType":"YulBlock","src":"4164:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:11"},"nodeType":"YulFunctionCall","src":"4240:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:11"},"nodeType":"YulFunctionCall","src":"4219:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:11"}]}]},{"nodeType":"YulBlock","src":"4292:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:11"},"nodeType":"YulFunctionCall","src":"4347:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:11","type":""}],"src":"3798:619:11"},{"body":{"nodeType":"YulBlock","src":"4506:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"4552:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4554:77:11"},"nodeType":"YulFunctionCall","src":"4554:79:11"},"nodeType":"YulExpressionStatement","src":"4554:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4527:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4536:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4523:3:11"},"nodeType":"YulFunctionCall","src":"4523:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4548:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4519:3:11"},"nodeType":"YulFunctionCall","src":"4519:32:11"},"nodeType":"YulIf","src":"4516:119:11"},{"nodeType":"YulBlock","src":"4645:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4660:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4674:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4664:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4689:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4724:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4735:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4720:3:11"},"nodeType":"YulFunctionCall","src":"4720:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4744:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4699:20:11"},"nodeType":"YulFunctionCall","src":"4699:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4689:6:11"}]}]},{"nodeType":"YulBlock","src":"4772:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4787:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4801:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4791:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4817:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4852:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4863:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4848:3:11"},"nodeType":"YulFunctionCall","src":"4848:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4872:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4827:20:11"},"nodeType":"YulFunctionCall","src":"4827:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4817:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4468:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4479:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4491:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4499:6:11","type":""}],"src":"4423:474:11"},{"body":{"nodeType":"YulBlock","src":"4946:43:11","statements":[{"nodeType":"YulAssignment","src":"4956:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4971:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4978:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4967:3:11"},"nodeType":"YulFunctionCall","src":"4967:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4956:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4938:7:11","type":""}],"src":"4903:86:11"},{"body":{"nodeType":"YulBlock","src":"5056:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5073:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5094:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5078:15:11"},"nodeType":"YulFunctionCall","src":"5078:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5066:6:11"},"nodeType":"YulFunctionCall","src":"5066:35:11"},"nodeType":"YulExpressionStatement","src":"5066:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5044:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5051:3:11","type":""}],"src":"4995:112:11"},{"body":{"nodeType":"YulBlock","src":"5207:120:11","statements":[{"nodeType":"YulAssignment","src":"5217:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5229:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5240:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5225:3:11"},"nodeType":"YulFunctionCall","src":"5225:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5217:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5293:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5306:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5317:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5302:3:11"},"nodeType":"YulFunctionCall","src":"5302:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"5253:39:11"},"nodeType":"YulFunctionCall","src":"5253:67:11"},"nodeType":"YulExpressionStatement","src":"5253:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5179:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5191:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5202:4:11","type":""}],"src":"5113:214:11"},{"body":{"nodeType":"YulBlock","src":"5399:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"5445:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5447:77:11"},"nodeType":"YulFunctionCall","src":"5447:79:11"},"nodeType":"YulExpressionStatement","src":"5447:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5420:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5429:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5416:3:11"},"nodeType":"YulFunctionCall","src":"5416:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5441:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5412:3:11"},"nodeType":"YulFunctionCall","src":"5412:32:11"},"nodeType":"YulIf","src":"5409:119:11"},{"nodeType":"YulBlock","src":"5538:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5553:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5567:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5557:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:11"},"nodeType":"YulFunctionCall","src":"5613:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5592:20:11"},"nodeType":"YulFunctionCall","src":"5592:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5582:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5369:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5380:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5392:6:11","type":""}],"src":"5333:329:11"},{"body":{"nodeType":"YulBlock","src":"5734:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"5780:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5782:77:11"},"nodeType":"YulFunctionCall","src":"5782:79:11"},"nodeType":"YulExpressionStatement","src":"5782:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5755:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5764:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5751:3:11"},"nodeType":"YulFunctionCall","src":"5751:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5776:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5747:3:11"},"nodeType":"YulFunctionCall","src":"5747:32:11"},"nodeType":"YulIf","src":"5744:119:11"},{"nodeType":"YulBlock","src":"5873:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5888:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5902:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5892:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5917:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5952:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5963:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5948:3:11"},"nodeType":"YulFunctionCall","src":"5948:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5972:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5927:20:11"},"nodeType":"YulFunctionCall","src":"5927:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5917:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5704:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5715:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5727:6:11","type":""}],"src":"5668:329:11"},{"body":{"nodeType":"YulBlock","src":"6103:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"6149:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6151:77:11"},"nodeType":"YulFunctionCall","src":"6151:79:11"},"nodeType":"YulExpressionStatement","src":"6151:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6124:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6133:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6120:3:11"},"nodeType":"YulFunctionCall","src":"6120:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6145:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6116:3:11"},"nodeType":"YulFunctionCall","src":"6116:32:11"},"nodeType":"YulIf","src":"6113:119:11"},{"nodeType":"YulBlock","src":"6242:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6257:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6271:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6261:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6286:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6321:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6332:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6317:3:11"},"nodeType":"YulFunctionCall","src":"6317:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6341:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6296:20:11"},"nodeType":"YulFunctionCall","src":"6296:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6286:6:11"}]}]},{"nodeType":"YulBlock","src":"6369:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6384:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6398:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6388:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6414:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6449:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6460:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6445:3:11"},"nodeType":"YulFunctionCall","src":"6445:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6469:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6424:20:11"},"nodeType":"YulFunctionCall","src":"6424:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6414:6:11"}]}]},{"nodeType":"YulBlock","src":"6497:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6512:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6526:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6516:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6542:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6577:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6588:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6573:3:11"},"nodeType":"YulFunctionCall","src":"6573:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6597:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6552:20:11"},"nodeType":"YulFunctionCall","src":"6552:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6542:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6057:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6068:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6080:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6088:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6096:6:11","type":""}],"src":"6003:619:11"},{"body":{"nodeType":"YulBlock","src":"6754:206:11","statements":[{"nodeType":"YulAssignment","src":"6764:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6776:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6787:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6772:3:11"},"nodeType":"YulFunctionCall","src":"6772:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6764:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6844:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6857:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6868:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6853:3:11"},"nodeType":"YulFunctionCall","src":"6853:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6800:43:11"},"nodeType":"YulFunctionCall","src":"6800:71:11"},"nodeType":"YulExpressionStatement","src":"6800:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6925:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6938:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6949:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6934:3:11"},"nodeType":"YulFunctionCall","src":"6934:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6881:43:11"},"nodeType":"YulFunctionCall","src":"6881:72:11"},"nodeType":"YulExpressionStatement","src":"6881:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6718:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6730:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6738:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6749:4:11","type":""}],"src":"6628:332:11"},{"body":{"nodeType":"YulBlock","src":"7031:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7048:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7071:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7053:17:11"},"nodeType":"YulFunctionCall","src":"7053:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7041:6:11"},"nodeType":"YulFunctionCall","src":"7041:37:11"},"nodeType":"YulExpressionStatement","src":"7041:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7019:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7026:3:11","type":""}],"src":"6966:118:11"},{"body":{"nodeType":"YulBlock","src":"7188:124:11","statements":[{"nodeType":"YulAssignment","src":"7198:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7210:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7221:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7206:3:11"},"nodeType":"YulFunctionCall","src":"7206:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7198:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7278:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7291:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7302:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7287:3:11"},"nodeType":"YulFunctionCall","src":"7287:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7234:43:11"},"nodeType":"YulFunctionCall","src":"7234:71:11"},"nodeType":"YulExpressionStatement","src":"7234:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7160:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7172:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7183:4:11","type":""}],"src":"7090:222:11"},{"body":{"nodeType":"YulBlock","src":"7401:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"7447:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7449:77:11"},"nodeType":"YulFunctionCall","src":"7449:79:11"},"nodeType":"YulExpressionStatement","src":"7449:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7422:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7431:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7418:3:11"},"nodeType":"YulFunctionCall","src":"7418:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7443:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7414:3:11"},"nodeType":"YulFunctionCall","src":"7414:32:11"},"nodeType":"YulIf","src":"7411:119:11"},{"nodeType":"YulBlock","src":"7540:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7555:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7569:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7559:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7584:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7619:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7630:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7615:3:11"},"nodeType":"YulFunctionCall","src":"7615:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7639:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7594:20:11"},"nodeType":"YulFunctionCall","src":"7594:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7584:6:11"}]}]},{"nodeType":"YulBlock","src":"7667:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7682:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7696:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7686:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7712:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7747:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7758:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:11"},"nodeType":"YulFunctionCall","src":"7743:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7767:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7722:20:11"},"nodeType":"YulFunctionCall","src":"7722:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7712:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7363:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7374:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7386:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7394:6:11","type":""}],"src":"7318:474:11"},{"body":{"nodeType":"YulBlock","src":"7826:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7843:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7846:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7836:6:11"},"nodeType":"YulFunctionCall","src":"7836:88:11"},"nodeType":"YulExpressionStatement","src":"7836:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7940:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7943:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7933:6:11"},"nodeType":"YulFunctionCall","src":"7933:15:11"},"nodeType":"YulExpressionStatement","src":"7933:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7964:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7967:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7957:6:11"},"nodeType":"YulFunctionCall","src":"7957:15:11"},"nodeType":"YulExpressionStatement","src":"7957:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7798:180:11"},{"body":{"nodeType":"YulBlock","src":"8035:269:11","statements":[{"nodeType":"YulAssignment","src":"8045:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8059:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"8065:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8055:3:11"},"nodeType":"YulFunctionCall","src":"8055:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8045:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"8076:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8106:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"8112:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8102:3:11"},"nodeType":"YulFunctionCall","src":"8102:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8080:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8153:51:11","statements":[{"nodeType":"YulAssignment","src":"8167:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8181:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8189:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8177:3:11"},"nodeType":"YulFunctionCall","src":"8177:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8167:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8133:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8126:6:11"},"nodeType":"YulFunctionCall","src":"8126:26:11"},"nodeType":"YulIf","src":"8123:81:11"},{"body":{"nodeType":"YulBlock","src":"8256:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8270:16:11"},"nodeType":"YulFunctionCall","src":"8270:18:11"},"nodeType":"YulExpressionStatement","src":"8270:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8220:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8243:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8251:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8240:2:11"},"nodeType":"YulFunctionCall","src":"8240:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8217:2:11"},"nodeType":"YulFunctionCall","src":"8217:38:11"},"nodeType":"YulIf","src":"8214:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8019:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8028:6:11","type":""}],"src":"7984:320:11"},{"body":{"nodeType":"YulBlock","src":"8416:70:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8438:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8446:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8434:3:11"},"nodeType":"YulFunctionCall","src":"8434:14:11"},{"hexValue":"696e73756666696369656e74206f757470757420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"8450:28:11","type":"","value":"insufficient output amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8427:6:11"},"nodeType":"YulFunctionCall","src":"8427:52:11"},"nodeType":"YulExpressionStatement","src":"8427:52:11"}]},"name":"store_literal_in_memory_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8408:6:11","type":""}],"src":"8310:176:11"},{"body":{"nodeType":"YulBlock","src":"8638:220:11","statements":[{"nodeType":"YulAssignment","src":"8648:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8714:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8719:2:11","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8655:58:11"},"nodeType":"YulFunctionCall","src":"8655:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8648:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8820:3:11"}],"functionName":{"name":"store_literal_in_memory_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac","nodeType":"YulIdentifier","src":"8731:88:11"},"nodeType":"YulFunctionCall","src":"8731:93:11"},"nodeType":"YulExpressionStatement","src":"8731:93:11"},{"nodeType":"YulAssignment","src":"8833:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8844:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8849:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8840:3:11"},"nodeType":"YulFunctionCall","src":"8840:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8833:3:11"}]}]},"name":"abi_encode_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8626:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8634:3:11","type":""}],"src":"8492:366:11"},{"body":{"nodeType":"YulBlock","src":"9035:248:11","statements":[{"nodeType":"YulAssignment","src":"9045:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9057:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9053:3:11"},"nodeType":"YulFunctionCall","src":"9053:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9045:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9092:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9103:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9088:3:11"},"nodeType":"YulFunctionCall","src":"9088:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9111:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9117:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9107:3:11"},"nodeType":"YulFunctionCall","src":"9107:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9081:6:11"},"nodeType":"YulFunctionCall","src":"9081:47:11"},"nodeType":"YulExpressionStatement","src":"9081:47:11"},{"nodeType":"YulAssignment","src":"9137:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9271:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9145:124:11"},"nodeType":"YulFunctionCall","src":"9145:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9137:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9015:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9030:4:11","type":""}],"src":"8864:419:11"},{"body":{"nodeType":"YulBlock","src":"9443:288:11","statements":[{"nodeType":"YulAssignment","src":"9453:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9465:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9476:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9461:3:11"},"nodeType":"YulFunctionCall","src":"9461:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9453:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9533:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9546:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9557:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9542:3:11"},"nodeType":"YulFunctionCall","src":"9542:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9489:43:11"},"nodeType":"YulFunctionCall","src":"9489:71:11"},"nodeType":"YulExpressionStatement","src":"9489:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9614:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9627:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9638:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9623:3:11"},"nodeType":"YulFunctionCall","src":"9623:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9570:43:11"},"nodeType":"YulFunctionCall","src":"9570:72:11"},"nodeType":"YulExpressionStatement","src":"9570:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9696:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9709:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9720:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9705:3:11"},"nodeType":"YulFunctionCall","src":"9705:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9652:43:11"},"nodeType":"YulFunctionCall","src":"9652:72:11"},"nodeType":"YulExpressionStatement","src":"9652:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9399:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9411:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9419:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9427:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9438:4:11","type":""}],"src":"9289:442:11"},{"body":{"nodeType":"YulBlock","src":"9777:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"9831:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9840:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9843:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9833:6:11"},"nodeType":"YulFunctionCall","src":"9833:12:11"},"nodeType":"YulExpressionStatement","src":"9833:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9800:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9822:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9807:14:11"},"nodeType":"YulFunctionCall","src":"9807:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9797:2:11"},"nodeType":"YulFunctionCall","src":"9797:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9790:6:11"},"nodeType":"YulFunctionCall","src":"9790:40:11"},"nodeType":"YulIf","src":"9787:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9770:5:11","type":""}],"src":"9737:116:11"},{"body":{"nodeType":"YulBlock","src":"9919:77:11","statements":[{"nodeType":"YulAssignment","src":"9929:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9944:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9938:5:11"},"nodeType":"YulFunctionCall","src":"9938:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9929:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9984:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9960:23:11"},"nodeType":"YulFunctionCall","src":"9960:30:11"},"nodeType":"YulExpressionStatement","src":"9960:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9897:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"9905:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9913:5:11","type":""}],"src":"9859:137:11"},{"body":{"nodeType":"YulBlock","src":"10076:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"10122:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10124:77:11"},"nodeType":"YulFunctionCall","src":"10124:79:11"},"nodeType":"YulExpressionStatement","src":"10124:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10097:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10106:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10093:3:11"},"nodeType":"YulFunctionCall","src":"10093:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"10118:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10089:3:11"},"nodeType":"YulFunctionCall","src":"10089:32:11"},"nodeType":"YulIf","src":"10086:119:11"},{"nodeType":"YulBlock","src":"10215:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10230:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10244:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10234:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10259:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10302:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10313:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:11"},"nodeType":"YulFunctionCall","src":"10298:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10322:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"10269:28:11"},"nodeType":"YulFunctionCall","src":"10269:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10259:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10046:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10057:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10069:6:11","type":""}],"src":"10002:345:11"},{"body":{"nodeType":"YulBlock","src":"10381:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10398:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10401:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10391:6:11"},"nodeType":"YulFunctionCall","src":"10391:88:11"},"nodeType":"YulExpressionStatement","src":"10391:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10495:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10498:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10488:6:11"},"nodeType":"YulFunctionCall","src":"10488:15:11"},"nodeType":"YulExpressionStatement","src":"10488:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10519:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10522:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10512:6:11"},"nodeType":"YulFunctionCall","src":"10512:15:11"},"nodeType":"YulExpressionStatement","src":"10512:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10353:180:11"},{"body":{"nodeType":"YulBlock","src":"10583:147:11","statements":[{"nodeType":"YulAssignment","src":"10593:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10616:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10598:17:11"},"nodeType":"YulFunctionCall","src":"10598:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10593:1:11"}]},{"nodeType":"YulAssignment","src":"10627:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10650:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10632:17:11"},"nodeType":"YulFunctionCall","src":"10632:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10627:1:11"}]},{"nodeType":"YulAssignment","src":"10661:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10672:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"10675:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10668:3:11"},"nodeType":"YulFunctionCall","src":"10668:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10661:3:11"}]},{"body":{"nodeType":"YulBlock","src":"10701:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10703:16:11"},"nodeType":"YulFunctionCall","src":"10703:18:11"},"nodeType":"YulExpressionStatement","src":"10703:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10693:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"10696:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10690:2:11"},"nodeType":"YulFunctionCall","src":"10690:10:11"},"nodeType":"YulIf","src":"10687:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10570:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"10573:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10579:3:11","type":""}],"src":"10539:191:11"},{"body":{"nodeType":"YulBlock","src":"10781:149:11","statements":[{"nodeType":"YulAssignment","src":"10791:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10814:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10796:17:11"},"nodeType":"YulFunctionCall","src":"10796:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10791:1:11"}]},{"nodeType":"YulAssignment","src":"10825:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10848:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10830:17:11"},"nodeType":"YulFunctionCall","src":"10830:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10825:1:11"}]},{"nodeType":"YulAssignment","src":"10859:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10871:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"10874:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10867:3:11"},"nodeType":"YulFunctionCall","src":"10867:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10859:4:11"}]},{"body":{"nodeType":"YulBlock","src":"10901:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10903:16:11"},"nodeType":"YulFunctionCall","src":"10903:18:11"},"nodeType":"YulExpressionStatement","src":"10903:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10892:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"10898:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10889:2:11"},"nodeType":"YulFunctionCall","src":"10889:11:11"},"nodeType":"YulIf","src":"10886:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10767:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"10770:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10776:4:11","type":""}],"src":"10736:194:11"},{"body":{"nodeType":"YulBlock","src":"10984:362:11","statements":[{"nodeType":"YulAssignment","src":"10994:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11017:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10999:17:11"},"nodeType":"YulFunctionCall","src":"10999:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10994:1:11"}]},{"nodeType":"YulAssignment","src":"11028:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11051:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11033:17:11"},"nodeType":"YulFunctionCall","src":"11033:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11028:1:11"}]},{"nodeType":"YulVariableDeclaration","src":"11062:28:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11085:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"11088:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11081:3:11"},"nodeType":"YulFunctionCall","src":"11081:9:11"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"11066:11:11","type":""}]},{"nodeType":"YulAssignment","src":"11099:41:11","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"11128:11:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11110:17:11"},"nodeType":"YulFunctionCall","src":"11110:30:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11099:7:11"}]},{"body":{"nodeType":"YulBlock","src":"11317:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11319:16:11"},"nodeType":"YulFunctionCall","src":"11319:18:11"},"nodeType":"YulExpressionStatement","src":"11319:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11250:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11243:6:11"},"nodeType":"YulFunctionCall","src":"11243:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11273:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11280:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"11289:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11276:3:11"},"nodeType":"YulFunctionCall","src":"11276:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11270:2:11"},"nodeType":"YulFunctionCall","src":"11270:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11223:2:11"},"nodeType":"YulFunctionCall","src":"11223:83:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11203:6:11"},"nodeType":"YulFunctionCall","src":"11203:113:11"},"nodeType":"YulIf","src":"11200:139:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10967:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"10970:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10976:7:11","type":""}],"src":"10936:410:11"},{"body":{"nodeType":"YulBlock","src":"11380:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11397:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11400:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11390:6:11"},"nodeType":"YulFunctionCall","src":"11390:88:11"},"nodeType":"YulExpressionStatement","src":"11390:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11494:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11497:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11487:6:11"},"nodeType":"YulFunctionCall","src":"11487:15:11"},"nodeType":"YulExpressionStatement","src":"11487:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11518:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11521:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11511:6:11"},"nodeType":"YulFunctionCall","src":"11511:15:11"},"nodeType":"YulExpressionStatement","src":"11511:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11352:180:11"},{"body":{"nodeType":"YulBlock","src":"11580:143:11","statements":[{"nodeType":"YulAssignment","src":"11590:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11613:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11595:17:11"},"nodeType":"YulFunctionCall","src":"11595:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11590:1:11"}]},{"nodeType":"YulAssignment","src":"11624:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11647:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11629:17:11"},"nodeType":"YulFunctionCall","src":"11629:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11624:1:11"}]},{"body":{"nodeType":"YulBlock","src":"11671:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"11673:16:11"},"nodeType":"YulFunctionCall","src":"11673:18:11"},"nodeType":"YulExpressionStatement","src":"11673:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11668:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11661:6:11"},"nodeType":"YulFunctionCall","src":"11661:9:11"},"nodeType":"YulIf","src":"11658:35:11"},{"nodeType":"YulAssignment","src":"11703:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11712:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"11715:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11708:3:11"},"nodeType":"YulFunctionCall","src":"11708:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11703:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11569:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"11572:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11578:1:11","type":""}],"src":"11538:185:11"},{"body":{"nodeType":"YulBlock","src":"11835:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11857:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11865:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11853:3:11"},"nodeType":"YulFunctionCall","src":"11853:14:11"},{"hexValue":"416d6f756e74206f6620746f6b656e732073656e74206973206c657373207468","kind":"string","nodeType":"YulLiteral","src":"11869:34:11","type":"","value":"Amount of tokens sent is less th"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11846:6:11"},"nodeType":"YulFunctionCall","src":"11846:58:11"},"nodeType":"YulExpressionStatement","src":"11846:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11925:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11933:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11921:3:11"},"nodeType":"YulFunctionCall","src":"11921:15:11"},{"hexValue":"616e20746865206d696e696d756d20746f6b656e73207265717569726564","kind":"string","nodeType":"YulLiteral","src":"11938:32:11","type":"","value":"an the minimum tokens required"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11914:6:11"},"nodeType":"YulFunctionCall","src":"11914:57:11"},"nodeType":"YulExpressionStatement","src":"11914:57:11"}]},"name":"store_literal_in_memory_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11827:6:11","type":""}],"src":"11729:249:11"},{"body":{"nodeType":"YulBlock","src":"12130:220:11","statements":[{"nodeType":"YulAssignment","src":"12140:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12206:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12211:2:11","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12147:58:11"},"nodeType":"YulFunctionCall","src":"12147:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12140:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12312:3:11"}],"functionName":{"name":"store_literal_in_memory_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4","nodeType":"YulIdentifier","src":"12223:88:11"},"nodeType":"YulFunctionCall","src":"12223:93:11"},"nodeType":"YulExpressionStatement","src":"12223:93:11"},{"nodeType":"YulAssignment","src":"12325:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12336:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12341:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12332:3:11"},"nodeType":"YulFunctionCall","src":"12332:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12325:3:11"}]}]},"name":"abi_encode_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12118:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12126:3:11","type":""}],"src":"11984:366:11"},{"body":{"nodeType":"YulBlock","src":"12527:248:11","statements":[{"nodeType":"YulAssignment","src":"12537:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12549:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12560:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12545:3:11"},"nodeType":"YulFunctionCall","src":"12545:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12537:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12584:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12595:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12580:3:11"},"nodeType":"YulFunctionCall","src":"12580:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12603:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12609:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12599:3:11"},"nodeType":"YulFunctionCall","src":"12599:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12573:6:11"},"nodeType":"YulFunctionCall","src":"12573:47:11"},"nodeType":"YulExpressionStatement","src":"12573:47:11"},{"nodeType":"YulAssignment","src":"12629:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12763:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12637:124:11"},"nodeType":"YulFunctionCall","src":"12637:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12629:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12507:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12522:4:11","type":""}],"src":"12356:419:11"},{"body":{"nodeType":"YulBlock","src":"12844:80:11","statements":[{"nodeType":"YulAssignment","src":"12854:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12869:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12863:5:11"},"nodeType":"YulFunctionCall","src":"12863:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12854:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12912:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"12885:26:11"},"nodeType":"YulFunctionCall","src":"12885:33:11"},"nodeType":"YulExpressionStatement","src":"12885:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12822:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"12830:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12838:5:11","type":""}],"src":"12781:143:11"},{"body":{"nodeType":"YulBlock","src":"13007:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"13053:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13055:77:11"},"nodeType":"YulFunctionCall","src":"13055:79:11"},"nodeType":"YulExpressionStatement","src":"13055:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13028:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13037:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13024:3:11"},"nodeType":"YulFunctionCall","src":"13024:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"13049:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13020:3:11"},"nodeType":"YulFunctionCall","src":"13020:32:11"},"nodeType":"YulIf","src":"13017:119:11"},{"nodeType":"YulBlock","src":"13146:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13161:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13175:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13165:6:11","type":""}]},{"nodeType":"YulAssignment","src":"13190:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13236:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"13247:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:11"},"nodeType":"YulFunctionCall","src":"13232:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13256:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"13200:31:11"},"nodeType":"YulFunctionCall","src":"13200:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13190:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12977:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12988:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13000:6:11","type":""}],"src":"12930:351:11"},{"body":{"nodeType":"YulBlock","src":"13393:60:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13415:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13423:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13411:3:11"},"nodeType":"YulFunctionCall","src":"13411:14:11"},{"hexValue":"696e76616c6964207265736572766573","kind":"string","nodeType":"YulLiteral","src":"13427:18:11","type":"","value":"invalid reserves"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13404:6:11"},"nodeType":"YulFunctionCall","src":"13404:42:11"},"nodeType":"YulExpressionStatement","src":"13404:42:11"}]},"name":"store_literal_in_memory_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13385:6:11","type":""}],"src":"13287:166:11"},{"body":{"nodeType":"YulBlock","src":"13605:220:11","statements":[{"nodeType":"YulAssignment","src":"13615:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13681:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13686:2:11","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13622:58:11"},"nodeType":"YulFunctionCall","src":"13622:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13615:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13787:3:11"}],"functionName":{"name":"store_literal_in_memory_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e","nodeType":"YulIdentifier","src":"13698:88:11"},"nodeType":"YulFunctionCall","src":"13698:93:11"},"nodeType":"YulExpressionStatement","src":"13698:93:11"},{"nodeType":"YulAssignment","src":"13800:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13811:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13816:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13807:3:11"},"nodeType":"YulFunctionCall","src":"13807:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13800:3:11"}]}]},"name":"abi_encode_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13593:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13601:3:11","type":""}],"src":"13459:366:11"},{"body":{"nodeType":"YulBlock","src":"14002:248:11","statements":[{"nodeType":"YulAssignment","src":"14012:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14024:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14035:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14020:3:11"},"nodeType":"YulFunctionCall","src":"14020:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14012:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14059:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14070:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14055:3:11"},"nodeType":"YulFunctionCall","src":"14055:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14078:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14084:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14074:3:11"},"nodeType":"YulFunctionCall","src":"14074:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14048:6:11"},"nodeType":"YulFunctionCall","src":"14048:47:11"},"nodeType":"YulExpressionStatement","src":"14048:47:11"},{"nodeType":"YulAssignment","src":"14104:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14238:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14112:124:11"},"nodeType":"YulFunctionCall","src":"14112:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14104:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13982:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13997:4:11","type":""}],"src":"13831:419:11"},{"body":{"nodeType":"YulBlock","src":"14382:206:11","statements":[{"nodeType":"YulAssignment","src":"14392:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14404:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14415:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14400:3:11"},"nodeType":"YulFunctionCall","src":"14400:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14392:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14472:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14485:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14496:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14481:3:11"},"nodeType":"YulFunctionCall","src":"14481:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14428:43:11"},"nodeType":"YulFunctionCall","src":"14428:71:11"},"nodeType":"YulExpressionStatement","src":"14428:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14553:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14566:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14577:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14562:3:11"},"nodeType":"YulFunctionCall","src":"14562:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14509:43:11"},"nodeType":"YulFunctionCall","src":"14509:72:11"},"nodeType":"YulExpressionStatement","src":"14509:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14346:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14358:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14366:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14377:4:11","type":""}],"src":"14256:332:11"},{"body":{"nodeType":"YulBlock","src":"14700:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14722:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14730:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14718:3:11"},"nodeType":"YulFunctionCall","src":"14718:14:11"},{"hexValue":"5f616d6f756e742073686f756c642062652067726561746572207468616e207a","kind":"string","nodeType":"YulLiteral","src":"14734:34:11","type":"","value":"_amount should be greater than z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14711:6:11"},"nodeType":"YulFunctionCall","src":"14711:58:11"},"nodeType":"YulExpressionStatement","src":"14711:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14790:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14798:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14786:3:11"},"nodeType":"YulFunctionCall","src":"14786:15:11"},{"hexValue":"65726f","kind":"string","nodeType":"YulLiteral","src":"14803:5:11","type":"","value":"ero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14779:6:11"},"nodeType":"YulFunctionCall","src":"14779:30:11"},"nodeType":"YulExpressionStatement","src":"14779:30:11"}]},"name":"store_literal_in_memory_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14692:6:11","type":""}],"src":"14594:222:11"},{"body":{"nodeType":"YulBlock","src":"14968:220:11","statements":[{"nodeType":"YulAssignment","src":"14978:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15044:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15049:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14985:58:11"},"nodeType":"YulFunctionCall","src":"14985:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14978:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15150:3:11"}],"functionName":{"name":"store_literal_in_memory_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98","nodeType":"YulIdentifier","src":"15061:88:11"},"nodeType":"YulFunctionCall","src":"15061:93:11"},"nodeType":"YulExpressionStatement","src":"15061:93:11"},{"nodeType":"YulAssignment","src":"15163:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15174:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15179:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15170:3:11"},"nodeType":"YulFunctionCall","src":"15170:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15163:3:11"}]}]},"name":"abi_encode_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14956:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14964:3:11","type":""}],"src":"14822:366:11"},{"body":{"nodeType":"YulBlock","src":"15365:248:11","statements":[{"nodeType":"YulAssignment","src":"15375:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15387:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15398:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15383:3:11"},"nodeType":"YulFunctionCall","src":"15383:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15375:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15422:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15433:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15418:3:11"},"nodeType":"YulFunctionCall","src":"15418:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15441:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15447:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15437:3:11"},"nodeType":"YulFunctionCall","src":"15437:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15411:6:11"},"nodeType":"YulFunctionCall","src":"15411:47:11"},"nodeType":"YulExpressionStatement","src":"15411:47:11"},{"nodeType":"YulAssignment","src":"15467:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15601:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15475:124:11"},"nodeType":"YulFunctionCall","src":"15475:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15467:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15345:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15360:4:11","type":""}],"src":"15194:419:11"},{"body":{"nodeType":"YulBlock","src":"15725:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15747:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15755:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15743:3:11"},"nodeType":"YulFunctionCall","src":"15743:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"15759:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15736:6:11"},"nodeType":"YulFunctionCall","src":"15736:58:11"},"nodeType":"YulExpressionStatement","src":"15736:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15815:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15823:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15811:3:11"},"nodeType":"YulFunctionCall","src":"15811:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"15828:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15804:6:11"},"nodeType":"YulFunctionCall","src":"15804:32:11"},"nodeType":"YulExpressionStatement","src":"15804:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15717:6:11","type":""}],"src":"15619:224:11"},{"body":{"nodeType":"YulBlock","src":"15995:220:11","statements":[{"nodeType":"YulAssignment","src":"16005:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16071:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16076:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16012:58:11"},"nodeType":"YulFunctionCall","src":"16012:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16005:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16177:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"16088:88:11"},"nodeType":"YulFunctionCall","src":"16088:93:11"},"nodeType":"YulExpressionStatement","src":"16088:93:11"},{"nodeType":"YulAssignment","src":"16190:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16201:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16206:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16197:3:11"},"nodeType":"YulFunctionCall","src":"16197:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16190:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15983:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15991:3:11","type":""}],"src":"15849:366:11"},{"body":{"nodeType":"YulBlock","src":"16392:248:11","statements":[{"nodeType":"YulAssignment","src":"16402:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16414:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16425:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16410:3:11"},"nodeType":"YulFunctionCall","src":"16410:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16402:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16449:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16460:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16445:3:11"},"nodeType":"YulFunctionCall","src":"16445:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16468:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16474:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16464:3:11"},"nodeType":"YulFunctionCall","src":"16464:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16438:6:11"},"nodeType":"YulFunctionCall","src":"16438:47:11"},"nodeType":"YulExpressionStatement","src":"16438:47:11"},{"nodeType":"YulAssignment","src":"16494:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16628:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16502:124:11"},"nodeType":"YulFunctionCall","src":"16502:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16494:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16372:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16387:4:11","type":""}],"src":"16221:419:11"},{"body":{"nodeType":"YulBlock","src":"16752:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16774:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16770:3:11"},"nodeType":"YulFunctionCall","src":"16770:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"16786:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16763:6:11"},"nodeType":"YulFunctionCall","src":"16763:58:11"},"nodeType":"YulExpressionStatement","src":"16763:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16842:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16850:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16838:3:11"},"nodeType":"YulFunctionCall","src":"16838:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"16855:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16831:6:11"},"nodeType":"YulFunctionCall","src":"16831:31:11"},"nodeType":"YulExpressionStatement","src":"16831:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16744:6:11","type":""}],"src":"16646:223:11"},{"body":{"nodeType":"YulBlock","src":"17021:220:11","statements":[{"nodeType":"YulAssignment","src":"17031:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17097:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17102:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17038:58:11"},"nodeType":"YulFunctionCall","src":"17038:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17031:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17203:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"17114:88:11"},"nodeType":"YulFunctionCall","src":"17114:93:11"},"nodeType":"YulExpressionStatement","src":"17114:93:11"},{"nodeType":"YulAssignment","src":"17216:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17227:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17232:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17223:3:11"},"nodeType":"YulFunctionCall","src":"17223:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17216:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17009:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17017:3:11","type":""}],"src":"16875:366:11"},{"body":{"nodeType":"YulBlock","src":"17418:248:11","statements":[{"nodeType":"YulAssignment","src":"17428:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17440:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17451:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17436:3:11"},"nodeType":"YulFunctionCall","src":"17436:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17428:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17475:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17486:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17471:3:11"},"nodeType":"YulFunctionCall","src":"17471:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17494:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17500:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17490:3:11"},"nodeType":"YulFunctionCall","src":"17490:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17464:6:11"},"nodeType":"YulFunctionCall","src":"17464:47:11"},"nodeType":"YulExpressionStatement","src":"17464:47:11"},{"nodeType":"YulAssignment","src":"17520:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17654:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17528:124:11"},"nodeType":"YulFunctionCall","src":"17528:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17520:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17398:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17413:4:11","type":""}],"src":"17247:419:11"},{"body":{"nodeType":"YulBlock","src":"17778:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17800:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17808:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17796:3:11"},"nodeType":"YulFunctionCall","src":"17796:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"17812:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17789:6:11"},"nodeType":"YulFunctionCall","src":"17789:58:11"},"nodeType":"YulExpressionStatement","src":"17789:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17868:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17876:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17864:3:11"},"nodeType":"YulFunctionCall","src":"17864:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"17881:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17857:6:11"},"nodeType":"YulFunctionCall","src":"17857:29:11"},"nodeType":"YulExpressionStatement","src":"17857:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17770:6:11","type":""}],"src":"17672:221:11"},{"body":{"nodeType":"YulBlock","src":"18045:220:11","statements":[{"nodeType":"YulAssignment","src":"18055:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18121:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18126:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18062:58:11"},"nodeType":"YulFunctionCall","src":"18062:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18055:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18227:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"18138:88:11"},"nodeType":"YulFunctionCall","src":"18138:93:11"},"nodeType":"YulExpressionStatement","src":"18138:93:11"},{"nodeType":"YulAssignment","src":"18240:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18251:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18256:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18247:3:11"},"nodeType":"YulFunctionCall","src":"18247:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18240:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18033:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18041:3:11","type":""}],"src":"17899:366:11"},{"body":{"nodeType":"YulBlock","src":"18442:248:11","statements":[{"nodeType":"YulAssignment","src":"18452:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18464:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18475:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18460:3:11"},"nodeType":"YulFunctionCall","src":"18460:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18452:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18499:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18510:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18495:3:11"},"nodeType":"YulFunctionCall","src":"18495:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18518:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18524:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18514:3:11"},"nodeType":"YulFunctionCall","src":"18514:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18488:6:11"},"nodeType":"YulFunctionCall","src":"18488:47:11"},"nodeType":"YulExpressionStatement","src":"18488:47:11"},{"nodeType":"YulAssignment","src":"18544:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18678:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18552:124:11"},"nodeType":"YulFunctionCall","src":"18552:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18544:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18422:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18437:4:11","type":""}],"src":"18271:419:11"},{"body":{"nodeType":"YulBlock","src":"18802:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18824:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18832:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18820:3:11"},"nodeType":"YulFunctionCall","src":"18820:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"18836:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18813:6:11"},"nodeType":"YulFunctionCall","src":"18813:55:11"},"nodeType":"YulExpressionStatement","src":"18813:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18794:6:11","type":""}],"src":"18696:179:11"},{"body":{"nodeType":"YulBlock","src":"19027:220:11","statements":[{"nodeType":"YulAssignment","src":"19037:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19103:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19108:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19044:58:11"},"nodeType":"YulFunctionCall","src":"19044:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19037:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19209:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"19120:88:11"},"nodeType":"YulFunctionCall","src":"19120:93:11"},"nodeType":"YulExpressionStatement","src":"19120:93:11"},{"nodeType":"YulAssignment","src":"19222:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19233:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19238:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19229:3:11"},"nodeType":"YulFunctionCall","src":"19229:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19222:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19015:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19023:3:11","type":""}],"src":"18881:366:11"},{"body":{"nodeType":"YulBlock","src":"19424:248:11","statements":[{"nodeType":"YulAssignment","src":"19434:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19446:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19457:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19442:3:11"},"nodeType":"YulFunctionCall","src":"19442:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19434:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19481:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19492:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19477:3:11"},"nodeType":"YulFunctionCall","src":"19477:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19500:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"19506:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19496:3:11"},"nodeType":"YulFunctionCall","src":"19496:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19470:6:11"},"nodeType":"YulFunctionCall","src":"19470:47:11"},"nodeType":"YulExpressionStatement","src":"19470:47:11"},{"nodeType":"YulAssignment","src":"19526:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19660:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19534:124:11"},"nodeType":"YulFunctionCall","src":"19534:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19526:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19404:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19419:4:11","type":""}],"src":"19253:419:11"},{"body":{"nodeType":"YulBlock","src":"19784:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19806:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19814:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19802:3:11"},"nodeType":"YulFunctionCall","src":"19802:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"19818:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19795:6:11"},"nodeType":"YulFunctionCall","src":"19795:58:11"},"nodeType":"YulExpressionStatement","src":"19795:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19874:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19882:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19870:3:11"},"nodeType":"YulFunctionCall","src":"19870:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"19887:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19863:6:11"},"nodeType":"YulFunctionCall","src":"19863:32:11"},"nodeType":"YulExpressionStatement","src":"19863:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19776:6:11","type":""}],"src":"19678:224:11"},{"body":{"nodeType":"YulBlock","src":"20054:220:11","statements":[{"nodeType":"YulAssignment","src":"20064:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20130:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20135:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20071:58:11"},"nodeType":"YulFunctionCall","src":"20071:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20064:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20236:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"20147:88:11"},"nodeType":"YulFunctionCall","src":"20147:93:11"},"nodeType":"YulExpressionStatement","src":"20147:93:11"},{"nodeType":"YulAssignment","src":"20249:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20260:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20265:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20256:3:11"},"nodeType":"YulFunctionCall","src":"20256:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20249:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20042:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20050:3:11","type":""}],"src":"19908:366:11"},{"body":{"nodeType":"YulBlock","src":"20451:248:11","statements":[{"nodeType":"YulAssignment","src":"20461:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20473:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20484:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20469:3:11"},"nodeType":"YulFunctionCall","src":"20469:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20461:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20508:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20519:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20504:3:11"},"nodeType":"YulFunctionCall","src":"20504:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20527:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20533:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20523:3:11"},"nodeType":"YulFunctionCall","src":"20523:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20497:6:11"},"nodeType":"YulFunctionCall","src":"20497:47:11"},"nodeType":"YulExpressionStatement","src":"20497:47:11"},{"nodeType":"YulAssignment","src":"20553:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20687:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20561:124:11"},"nodeType":"YulFunctionCall","src":"20561:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20553:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20431:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20446:4:11","type":""}],"src":"20280:419:11"},{"body":{"nodeType":"YulBlock","src":"20811:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20833:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20841:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20829:3:11"},"nodeType":"YulFunctionCall","src":"20829:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"20845:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20822:6:11"},"nodeType":"YulFunctionCall","src":"20822:58:11"},"nodeType":"YulExpressionStatement","src":"20822:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20901:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20909:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20897:3:11"},"nodeType":"YulFunctionCall","src":"20897:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"20914:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20890:6:11"},"nodeType":"YulFunctionCall","src":"20890:30:11"},"nodeType":"YulExpressionStatement","src":"20890:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20803:6:11","type":""}],"src":"20705:222:11"},{"body":{"nodeType":"YulBlock","src":"21079:220:11","statements":[{"nodeType":"YulAssignment","src":"21089:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21155:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21160:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21096:58:11"},"nodeType":"YulFunctionCall","src":"21096:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21089:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21261:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"21172:88:11"},"nodeType":"YulFunctionCall","src":"21172:93:11"},"nodeType":"YulExpressionStatement","src":"21172:93:11"},{"nodeType":"YulAssignment","src":"21274:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21285:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21290:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21281:3:11"},"nodeType":"YulFunctionCall","src":"21281:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21274:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21067:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21075:3:11","type":""}],"src":"20933:366:11"},{"body":{"nodeType":"YulBlock","src":"21476:248:11","statements":[{"nodeType":"YulAssignment","src":"21486:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21498:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21509:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21494:3:11"},"nodeType":"YulFunctionCall","src":"21494:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21486:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21533:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21544:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21529:3:11"},"nodeType":"YulFunctionCall","src":"21529:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21552:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"21558:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21548:3:11"},"nodeType":"YulFunctionCall","src":"21548:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21522:6:11"},"nodeType":"YulFunctionCall","src":"21522:47:11"},"nodeType":"YulExpressionStatement","src":"21522:47:11"},{"nodeType":"YulAssignment","src":"21578:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21712:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21586:124:11"},"nodeType":"YulFunctionCall","src":"21586:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21578:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21456:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21471:4:11","type":""}],"src":"21305:419:11"},{"body":{"nodeType":"YulBlock","src":"21836:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21858:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21866:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21854:3:11"},"nodeType":"YulFunctionCall","src":"21854:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"21870:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21847:6:11"},"nodeType":"YulFunctionCall","src":"21847:58:11"},"nodeType":"YulExpressionStatement","src":"21847:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21926:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21934:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21922:3:11"},"nodeType":"YulFunctionCall","src":"21922:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"21939:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21915:6:11"},"nodeType":"YulFunctionCall","src":"21915:33:11"},"nodeType":"YulExpressionStatement","src":"21915:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21828:6:11","type":""}],"src":"21730:225:11"},{"body":{"nodeType":"YulBlock","src":"22107:220:11","statements":[{"nodeType":"YulAssignment","src":"22117:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22183:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22188:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22124:58:11"},"nodeType":"YulFunctionCall","src":"22124:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22117:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22289:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"22200:88:11"},"nodeType":"YulFunctionCall","src":"22200:93:11"},"nodeType":"YulExpressionStatement","src":"22200:93:11"},{"nodeType":"YulAssignment","src":"22302:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22313:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22318:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22309:3:11"},"nodeType":"YulFunctionCall","src":"22309:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22302:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22095:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22103:3:11","type":""}],"src":"21961:366:11"},{"body":{"nodeType":"YulBlock","src":"22504:248:11","statements":[{"nodeType":"YulAssignment","src":"22514:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22526:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22537:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22522:3:11"},"nodeType":"YulFunctionCall","src":"22522:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22514:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22561:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22572:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22557:3:11"},"nodeType":"YulFunctionCall","src":"22557:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22580:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"22586:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22576:3:11"},"nodeType":"YulFunctionCall","src":"22576:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22550:6:11"},"nodeType":"YulFunctionCall","src":"22550:47:11"},"nodeType":"YulExpressionStatement","src":"22550:47:11"},{"nodeType":"YulAssignment","src":"22606:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22740:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22614:124:11"},"nodeType":"YulFunctionCall","src":"22614:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22606:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22484:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22499:4:11","type":""}],"src":"22333:419:11"},{"body":{"nodeType":"YulBlock","src":"22864:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22886:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22894:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22882:3:11"},"nodeType":"YulFunctionCall","src":"22882:14:11"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"22898:33:11","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22875:6:11"},"nodeType":"YulFunctionCall","src":"22875:57:11"},"nodeType":"YulExpressionStatement","src":"22875:57:11"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22856:6:11","type":""}],"src":"22758:181:11"},{"body":{"nodeType":"YulBlock","src":"23091:220:11","statements":[{"nodeType":"YulAssignment","src":"23101:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23167:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"23172:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23108:58:11"},"nodeType":"YulFunctionCall","src":"23108:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23101:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23273:3:11"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"23184:88:11"},"nodeType":"YulFunctionCall","src":"23184:93:11"},"nodeType":"YulExpressionStatement","src":"23184:93:11"},{"nodeType":"YulAssignment","src":"23286:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23297:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"23302:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23293:3:11"},"nodeType":"YulFunctionCall","src":"23293:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23286:3:11"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23079:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23087:3:11","type":""}],"src":"22945:366:11"},{"body":{"nodeType":"YulBlock","src":"23488:248:11","statements":[{"nodeType":"YulAssignment","src":"23498:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23510:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23521:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23506:3:11"},"nodeType":"YulFunctionCall","src":"23506:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23498:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23545:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23556:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23541:3:11"},"nodeType":"YulFunctionCall","src":"23541:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23564:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23570:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23560:3:11"},"nodeType":"YulFunctionCall","src":"23560:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23534:6:11"},"nodeType":"YulFunctionCall","src":"23534:47:11"},"nodeType":"YulExpressionStatement","src":"23534:47:11"},{"nodeType":"YulAssignment","src":"23590:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23724:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23598:124:11"},"nodeType":"YulFunctionCall","src":"23598:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23590:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23468:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23483:4:11","type":""}],"src":"23317:419:11"},{"body":{"nodeType":"YulBlock","src":"23848:114:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23870:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23878:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23866:3:11"},"nodeType":"YulFunctionCall","src":"23866:14:11"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"23882:34:11","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23859:6:11"},"nodeType":"YulFunctionCall","src":"23859:58:11"},"nodeType":"YulExpressionStatement","src":"23859:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23938:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23946:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23934:3:11"},"nodeType":"YulFunctionCall","src":"23934:15:11"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"23951:3:11","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23927:6:11"},"nodeType":"YulFunctionCall","src":"23927:28:11"},"nodeType":"YulExpressionStatement","src":"23927:28:11"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23840:6:11","type":""}],"src":"23742:220:11"},{"body":{"nodeType":"YulBlock","src":"24114:220:11","statements":[{"nodeType":"YulAssignment","src":"24124:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24190:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"24195:2:11","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24131:58:11"},"nodeType":"YulFunctionCall","src":"24131:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24124:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24296:3:11"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"24207:88:11"},"nodeType":"YulFunctionCall","src":"24207:93:11"},"nodeType":"YulExpressionStatement","src":"24207:93:11"},{"nodeType":"YulAssignment","src":"24309:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24320:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"24325:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24316:3:11"},"nodeType":"YulFunctionCall","src":"24316:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24309:3:11"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24102:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24110:3:11","type":""}],"src":"23968:366:11"},{"body":{"nodeType":"YulBlock","src":"24511:248:11","statements":[{"nodeType":"YulAssignment","src":"24521:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24533:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24544:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24529:3:11"},"nodeType":"YulFunctionCall","src":"24529:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24521:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24568:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24579:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24564:3:11"},"nodeType":"YulFunctionCall","src":"24564:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24587:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"24593:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24583:3:11"},"nodeType":"YulFunctionCall","src":"24583:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24557:6:11"},"nodeType":"YulFunctionCall","src":"24557:47:11"},"nodeType":"YulExpressionStatement","src":"24557:47:11"},{"nodeType":"YulAssignment","src":"24613:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24747:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24621:124:11"},"nodeType":"YulFunctionCall","src":"24621:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24613:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24491:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24506:4:11","type":""}],"src":"24340:419:11"},{"body":{"nodeType":"YulBlock","src":"24871:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24893:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24901:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24889:3:11"},"nodeType":"YulFunctionCall","src":"24889:14:11"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"24905:34:11","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24882:6:11"},"nodeType":"YulFunctionCall","src":"24882:58:11"},"nodeType":"YulExpressionStatement","src":"24882:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24961:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24969:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24957:3:11"},"nodeType":"YulFunctionCall","src":"24957:15:11"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"24974:4:11","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24950:6:11"},"nodeType":"YulFunctionCall","src":"24950:29:11"},"nodeType":"YulExpressionStatement","src":"24950:29:11"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24863:6:11","type":""}],"src":"24765:221:11"},{"body":{"nodeType":"YulBlock","src":"25138:220:11","statements":[{"nodeType":"YulAssignment","src":"25148:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25214:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25219:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25155:58:11"},"nodeType":"YulFunctionCall","src":"25155:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25148:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25320:3:11"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"25231:88:11"},"nodeType":"YulFunctionCall","src":"25231:93:11"},"nodeType":"YulExpressionStatement","src":"25231:93:11"},{"nodeType":"YulAssignment","src":"25333:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25344:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25349:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25340:3:11"},"nodeType":"YulFunctionCall","src":"25340:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25333:3:11"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25126:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25134:3:11","type":""}],"src":"24992:366:11"},{"body":{"nodeType":"YulBlock","src":"25535:248:11","statements":[{"nodeType":"YulAssignment","src":"25545:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25557:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25568:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25553:3:11"},"nodeType":"YulFunctionCall","src":"25553:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25545:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25592:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25603:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25588:3:11"},"nodeType":"YulFunctionCall","src":"25588:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25611:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"25617:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25607:3:11"},"nodeType":"YulFunctionCall","src":"25607:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25581:6:11"},"nodeType":"YulFunctionCall","src":"25581:47:11"},"nodeType":"YulExpressionStatement","src":"25581:47:11"},{"nodeType":"YulAssignment","src":"25637:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25771:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25645:124:11"},"nodeType":"YulFunctionCall","src":"25645:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25637:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25515:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25530:4:11","type":""}],"src":"25364:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2c3b30d16a1e06e6981a644b0caea273d71bd7ab8616e891716fb48a5bd90ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount of tokens sent is less th\")\n\n        mstore(add(memPtr, 32), \"an the minimum tokens required\")\n\n    }\n\n    function abi_encode_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13072a1282354d28f27c0fc2ab6f3aaad8c7a77e7543ebd5edc409e2dbcaffa4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f591f5c95926056c124bdf2e232fe663759276f960db0a1830d4066ba4d65f9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98(memPtr) {\n\n        mstore(add(memPtr, 0), \"_amount should be greater than z\")\n\n        mstore(add(memPtr, 32), \"ero\")\n\n    }\n\n    function abi_encode_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_519e2fb1157b7f705c6cac37a6f024677b82624d2a10a769df5719acef8acc98_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101095760003560e01c806370a08231116100955780639c8f9f23116100645780639c8f9f231461038b578063a457c2d7146103c9578063a9059cbb14610406578063c68f5eaa14610443578063dd62ed3e1461046e57610109565b806370a08231146102ca5780637386479e14610307578063860865dd1461034457806395d89b411461036057610109565b80632dfb72b3116100dc5780632dfb72b3146101de578063313ce56714610207578063395093511461023257806351c6590a1461026f57806359bf5d391461029f57610109565b806306fdde031461010e578063095ea7b31461013957806318160ddd1461017657806323b872dd146101a1575b600080fd5b34801561011a57600080fd5b506101236104ab565b60405161013091906117c2565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b919061187d565b61053d565b60405161016d91906118d8565b60405180910390f35b34801561018257600080fd5b5061018b610560565b6040516101989190611902565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c3919061191d565b61056a565b6040516101d591906118d8565b60405180910390f35b3480156101ea57600080fd5b5061020560048036038101906102009190611970565b610599565b005b34801561021357600080fd5b5061021c6106e7565b60405161022991906119cc565b60405180910390f35b34801561023e57600080fd5b506102596004803603810190610254919061187d565b6106f0565b60405161026691906118d8565b60405180910390f35b610289600480360381019061028491906119e7565b610727565b6040516102969190611902565b60405180910390f35b3480156102ab57600080fd5b506102b4610925565b6040516102c19190611902565b60405180910390f35b3480156102d657600080fd5b506102f160048036038101906102ec9190611a14565b6109c8565b6040516102fe9190611902565b60405180910390f35b34801561031357600080fd5b5061032e60048036038101906103299190611a41565b610a10565b60405161033b9190611902565b60405180910390f35b61035e600480360381019061035991906119e7565b610ab5565b005b34801561036c57600080fd5b50610375610bc4565b60405161038291906117c2565b60405180910390f35b34801561039757600080fd5b506103b260048036038101906103ad91906119e7565b610c56565b6040516103c0929190611a94565b60405180910390f35b3480156103d557600080fd5b506103f060048036038101906103eb919061187d565b610deb565b6040516103fd91906118d8565b60405180910390f35b34801561041257600080fd5b5061042d6004803603810190610428919061187d565b610e62565b60405161043a91906118d8565b60405180910390f35b34801561044f57600080fd5b50610458610e85565b6040516104659190611acc565b60405180910390f35b34801561047a57600080fd5b5061049560048036038101906104909190611ae7565b610eab565b6040516104a29190611902565b60405180910390f35b6060600380546104ba90611b56565b80601f01602080910402602001604051908101604052809291908181526020018280546104e690611b56565b80156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b5050505050905090565b600080610548610f32565b9050610555818585610f3a565b600191505092915050565b6000600254905090565b600080610575610f32565b9050610582858285611103565b61058d85858561118f565b60019150509392505050565b60006105a3610925565b905060006105b2848347610a10565b9050828110156105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90611bd3565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161065693929190611bf3565b6020604051808303816000875af1158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190611c56565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106e0573d6000803e3d6000fd5b5050505050565b60006012905090565b6000806106fb610f32565b905061071c81858561070d8589610eab565b6107179190611cb2565b610f3a565b600191505092915050565b60008060004790506000610739610925565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600082036107fd578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016107a793929190611bf3565b6020604051808303816000875af11580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190611c56565b508293506107f83385611405565b610919565b6000348461080b9190611ce6565b9050600081843461081c9190611d1a565b6108269190611d8b565b90508088101561086b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086290611e2e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016108a893929190611bf3565b6020604051808303816000875af11580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611c56565b5081346108f6610560565b6109009190611d1a565b61090a9190611d8b565b95506109163387611405565b50505b83945050505050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109829190611acc565b602060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c39190611e63565b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008083118015610a215750600082115b610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790611edc565b60405180910390fd5b6000606385610a6f9190611d1a565b905060008382610a7f9190611d1a565b9050600082606487610a919190611d1a565b610a9b9190611cb2565b90508082610aa99190611d8b565b93505050509392505050565b6000610abf610925565b90506000610ad9343447610ad39190611ce6565b84610a10565b905082811015610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611bd3565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b7b929190611efc565b6020604051808303816000875af1158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe9190611c56565b50505050565b606060048054610bd390611b56565b80601f0160208091040260200160405190810160405280929190818152602001828054610bff90611b56565b8015610c4c5780601f10610c2157610100808354040283529160200191610c4c565b820191906000526020600020905b815481529060010190602001808311610c2f57829003601f168201915b5050505050905090565b60008060008311610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390611f97565b60405180910390fd5b60004790506000610cab610560565b90506000818684610cbc9190611d1a565b610cc69190611d8b565b905060008287610cd4610925565b610cde9190611d1a565b610ce89190611d8b565b9050610cf4338861155b565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610d3a573d6000803e3d6000fd5b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d98929190611efc565b6020604051808303816000875af1158015610db7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddb9190611c56565b5081819550955050505050915091565b600080610df6610f32565b90506000610e048286610eab565b905083811015610e49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4090612029565b60405180910390fd5b610e568286868403610f3a565b60019250505092915050565b600080610e6d610f32565b9050610e7a81858561118f565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa0906120bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100f9061214d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110f69190611902565b60405180910390a3505050565b600061110f8484610eab565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611189578181101561117b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611172906121b9565b60405180910390fd5b6111888484848403610f3a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f59061224b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361126d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611264906122dd565b60405180910390fd5b611278838383611728565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f59061236f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113ec9190611902565b60405180910390a36113ff84848461172d565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146b906123db565b60405180910390fd5b61148060008383611728565b80600260008282546114929190611cb2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115439190611902565b60405180910390a36115576000838361172d565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c19061246d565b60405180910390fd5b6115d682600083611728565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561165c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611653906124ff565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161170f9190611902565b60405180910390a36117238360008461172d565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561176c578082015181840152602081019050611751565b60008484015250505050565b6000601f19601f8301169050919050565b600061179482611732565b61179e818561173d565b93506117ae81856020860161174e565b6117b781611778565b840191505092915050565b600060208201905081810360008301526117dc8184611789565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611814826117e9565b9050919050565b61182481611809565b811461182f57600080fd5b50565b6000813590506118418161181b565b92915050565b6000819050919050565b61185a81611847565b811461186557600080fd5b50565b60008135905061187781611851565b92915050565b60008060408385031215611894576118936117e4565b5b60006118a285828601611832565b92505060206118b385828601611868565b9150509250929050565b60008115159050919050565b6118d2816118bd565b82525050565b60006020820190506118ed60008301846118c9565b92915050565b6118fc81611847565b82525050565b600060208201905061191760008301846118f3565b92915050565b600080600060608486031215611936576119356117e4565b5b600061194486828701611832565b935050602061195586828701611832565b925050604061196686828701611868565b9150509250925092565b60008060408385031215611987576119866117e4565b5b600061199585828601611868565b92505060206119a685828601611868565b9150509250929050565b600060ff82169050919050565b6119c6816119b0565b82525050565b60006020820190506119e160008301846119bd565b92915050565b6000602082840312156119fd576119fc6117e4565b5b6000611a0b84828501611868565b91505092915050565b600060208284031215611a2a57611a296117e4565b5b6000611a3884828501611832565b91505092915050565b600080600060608486031215611a5a57611a596117e4565b5b6000611a6886828701611868565b9350506020611a7986828701611868565b9250506040611a8a86828701611868565b9150509250925092565b6000604082019050611aa960008301856118f3565b611ab660208301846118f3565b9392505050565b611ac681611809565b82525050565b6000602082019050611ae16000830184611abd565b92915050565b60008060408385031215611afe57611afd6117e4565b5b6000611b0c85828601611832565b9250506020611b1d85828601611832565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b6e57607f821691505b602082108103611b8157611b80611b27565b5b50919050565b7f696e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b6000611bbd601a8361173d565b9150611bc882611b87565b602082019050919050565b60006020820190508181036000830152611bec81611bb0565b9050919050565b6000606082019050611c086000830186611abd565b611c156020830185611abd565b611c2260408301846118f3565b949350505050565b611c33816118bd565b8114611c3e57600080fd5b50565b600081519050611c5081611c2a565b92915050565b600060208284031215611c6c57611c6b6117e4565b5b6000611c7a84828501611c41565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cbd82611847565b9150611cc883611847565b9250828201905080821115611ce057611cdf611c83565b5b92915050565b6000611cf182611847565b9150611cfc83611847565b9250828203905081811115611d1457611d13611c83565b5b92915050565b6000611d2582611847565b9150611d3083611847565b9250828202611d3e81611847565b91508282048414831517611d5557611d54611c83565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d9682611847565b9150611da183611847565b925082611db157611db0611d5c565b5b828204905092915050565b7f416d6f756e74206f6620746f6b656e732073656e74206973206c65737320746860008201527f616e20746865206d696e696d756d20746f6b656e732072657175697265640000602082015250565b6000611e18603e8361173d565b9150611e2382611dbc565b604082019050919050565b60006020820190508181036000830152611e4781611e0b565b9050919050565b600081519050611e5d81611851565b92915050565b600060208284031215611e7957611e786117e4565b5b6000611e8784828501611e4e565b91505092915050565b7f696e76616c696420726573657276657300000000000000000000000000000000600082015250565b6000611ec660108361173d565b9150611ed182611e90565b602082019050919050565b60006020820190508181036000830152611ef581611eb9565b9050919050565b6000604082019050611f116000830185611abd565b611f1e60208301846118f3565b9392505050565b7f5f616d6f756e742073686f756c642062652067726561746572207468616e207a60008201527f65726f0000000000000000000000000000000000000000000000000000000000602082015250565b6000611f8160238361173d565b9150611f8c82611f25565b604082019050919050565b60006020820190508181036000830152611fb081611f74565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061201360258361173d565b915061201e82611fb7565b604082019050919050565b6000602082019050818103600083015261204281612006565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006120a560248361173d565b91506120b082612049565b604082019050919050565b600060208201905081810360008301526120d481612098565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061213760228361173d565b9150612142826120db565b604082019050919050565b600060208201905081810360008301526121668161212a565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006121a3601d8361173d565b91506121ae8261216d565b602082019050919050565b600060208201905081810360008301526121d281612196565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061223560258361173d565b9150612240826121d9565b604082019050919050565b6000602082019050818103600083015261226481612228565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006122c760238361173d565b91506122d28261226b565b604082019050919050565b600060208201905081810360008301526122f6816122ba565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061235960268361173d565b9150612364826122fd565b604082019050919050565b600060208201905081810360008301526123888161234c565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006123c5601f8361173d565b91506123d08261238f565b602082019050919050565b600060208201905081810360008301526123f4816123b8565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061245760218361173d565b9150612462826123fb565b604082019050919050565b600060208201905081810360008301526124868161244a565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006124e960228361173d565b91506124f48261248d565b604082019050919050565b60006020820190508181036000830152612518816124dc565b905091905056fea26469706673582212203e30066d0c5c9e56ab71b11a2173fc5326f0a9931850581e5da6f248867ba11f64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xC68F5EAA EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46E JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x7386479E EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x860865DD EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x2DFB72B3 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2DFB72B3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x59BF5D39 EQ PUSH2 0x29F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP3 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x533 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x508 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x533 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x516 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x548 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0x555 DUP2 DUP6 DUP6 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x575 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0x582 DUP6 DUP3 DUP6 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0x58D DUP6 DUP6 DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 PUSH2 0x925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5B2 DUP5 DUP4 SELFBALANCE PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x656 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6FB PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C DUP2 DUP6 DUP6 PUSH2 0x70D DUP6 DUP10 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x739 PUSH2 0x925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x7FD JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP DUP3 SWAP4 POP PUSH2 0x7F8 CALLER DUP6 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 CALLVALUE DUP5 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 CALLVALUE PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP DUP1 DUP9 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP DUP2 CALLVALUE PUSH2 0x8F6 PUSH2 0x560 JUMP JUMPDEST PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP6 POP PUSH2 0x916 CALLER DUP8 PUSH2 0x1405 JUMP JUMPDEST POP POP JUMPDEST DUP4 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0xA21 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x63 DUP6 PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x64 DUP8 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABF PUSH2 0x925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAD9 CALLVALUE CALLVALUE SELFBALANCE PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP5 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7B SWAP3 SWAP2 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBD3 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBFF SWAP1 PUSH2 0x1B56 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0xCAB PUSH2 0x560 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 DUP5 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP8 PUSH2 0xCD4 PUSH2 0x925 JUMP JUMPDEST PUSH2 0xCDE SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0xCE8 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 CALLER DUP9 PUSH2 0x155B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP3 SWAP2 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST POP DUP2 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDF6 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE04 DUP3 DUP7 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE40 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE56 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE6D PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH2 0xE7A DUP2 DUP6 DUP6 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA0 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F6 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP5 DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1189 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x117B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1188 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF3A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1278 DUP4 DUP4 DUP4 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F5 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13FF DUP5 DUP5 DUP5 PUSH2 0x172D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146B SWAP1 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1480 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1728 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1492 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1543 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1557 PUSH1 0x0 DUP4 DUP4 PUSH2 0x172D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C1 SWAP1 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D6 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1653 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x170F SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1723 DUP4 PUSH1 0x0 DUP5 PUSH2 0x172D JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x179E DUP2 DUP6 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x17AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x174E JUMP JUMPDEST PUSH2 0x17B7 DUP2 PUSH2 0x1778 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DC DUP2 DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1814 DUP3 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1824 DUP2 PUSH2 0x1809 JUMP JUMPDEST DUP2 EQ PUSH2 0x182F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1841 DUP2 PUSH2 0x181B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185A DUP2 PUSH2 0x1847 JUMP JUMPDEST DUP2 EQ PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1877 DUP2 PUSH2 0x1851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1894 JUMPI PUSH2 0x1893 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x18BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FC DUP2 PUSH2 0x1847 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1917 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1944 DUP7 DUP3 DUP8 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1955 DUP7 DUP3 DUP8 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1966 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1995 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A6 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C6 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0B DUP5 DUP3 DUP6 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A38 DUP5 DUP3 DUP6 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A68 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A79 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A8A DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1AB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x1809 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B0C DUP6 DUP3 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1D DUP6 DUP3 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B6E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x1B27 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBD PUSH1 0x1A DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC8 DUP3 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BEC DUP2 PUSH2 0x1BB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C08 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1C15 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1C22 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C33 DUP2 PUSH2 0x18BD JUMP JUMPDEST DUP2 EQ PUSH2 0x1C3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C50 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6C JUMPI PUSH2 0x1C6B PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7A DUP5 DUP3 DUP6 ADD PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CBD DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC8 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CE0 JUMPI PUSH2 0x1CDF PUSH2 0x1C83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF1 DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFC DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x1C83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D25 DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D30 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D3E DUP2 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D55 JUMPI PUSH2 0x1D54 PUSH2 0x1C83 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D96 DUP3 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA1 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DB1 JUMPI PUSH2 0x1DB0 PUSH2 0x1D5C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206F6620746F6B656E732073656E74206973206C657373207468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E20746865206D696E696D756D20746F6B656E732072657175697265640000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E18 PUSH1 0x3E DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E23 DUP3 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1E0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x17E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420726573657276657300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC6 PUSH1 0x10 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED1 DUP3 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF5 DUP2 PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F11 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1F1E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5F616D6F756E742073686F756C642062652067726561746572207468616E207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F81 PUSH1 0x23 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8C DUP3 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB0 DUP2 PUSH2 0x1F74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2013 PUSH1 0x25 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x201E DUP3 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2042 DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A5 PUSH1 0x24 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 DUP3 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D4 DUP2 PUSH2 0x2098 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 PUSH1 0x22 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2166 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A3 PUSH1 0x1D DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x21AE DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x2196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2235 PUSH1 0x25 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2240 DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2264 DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C7 PUSH1 0x23 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D2 DUP3 PUSH2 0x226B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F6 DUP2 PUSH2 0x22BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2359 PUSH1 0x26 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2364 DUP3 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2388 DUP2 PUSH2 0x234C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C5 PUSH1 0x1F DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x23D0 DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F4 DUP2 PUSH2 0x23B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 PUSH1 0x21 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x2462 DUP3 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2486 DUP2 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E9 PUSH1 0x22 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x24F4 DUP3 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2518 DUP2 PUSH2 0x24DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY ADDRESS MOD PUSH14 0xC5C9E56AB71B11A2173FC5326F0 0xA9 SWAP4 XOR POP PC 0x1E 0x5D 0xA6 CALLCODE BASEFEE DUP7 PUSH28 0xA11F64736F6C63430008110033000000000000000000000000000000 ","sourceMap":"114:3320:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2922:510:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3091:91:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:933:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:122;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2031:468:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2505:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2365:102:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1450:575:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6592:427:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;148:32:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;2922:510:9:-;2996:20;3019:12;:10;:12::i;:::-;2996:35;;3041:17;3061:113;3092:11;3117:12;3143:21;3061:17;:113::i;:::-;3041:133;;3205:7;3192:9;:20;;3184:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3259:17;;;;;;;;;;;3253:37;;;3304:10;3336:4;3355:11;3253:123;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3394:10;3386:28;;:39;3415:9;3386:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:446;;2922:510;;:::o;3091:91:0:-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;511:933:9:-;571:4;587:14;611:15;629:21;611:39;;660:22;685:12;:10;:12::i;:::-;660:37;;707:16;732:17;;;;;;;;;;;707:43;;785:1;764:17;:22;761:650;;802:10;:23;;;826:10;846:4;853:7;802:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;888:10;876:22;;912:28;918:10;930:9;912:5;:28::i;:::-;761:650;;;971:15;1003:9;990:10;:22;;;;:::i;:::-;971:41;;1026:21;1083:10;1063:17;1051:9;:29;;;;:::i;:::-;1050:44;;;;:::i;:::-;1026:68;;1128:16;1117:7;:27;;1109:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;1225:10;:23;;;1249:10;1269:4;1276:16;1225:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1348:10;1336:9;1320:13;:11;:13::i;:::-;:25;;;;:::i;:::-;1319:39;;;;:::i;:::-;1307:51;;1372:28;1378:10;1390:9;1372:5;:28::i;:::-;957:454;;761:650;1428:9;1421:16;;;;;;511:933;;;:::o;383:122::-;426:4;455:17;;;;;;;;;;;449:34;;;492:4;449:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;442:56;;383:122;:::o;3406:125:0:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2031:468:9:-;2175:7;2217:1;2202:12;:16;:37;;;;;2238:1;2222:13;:17;2202:37;2194:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2270:26;2313:2;2299:11;:16;;;;:::i;:::-;2270:45;;2325:17;2366:13;2345:18;:34;;;;:::i;:::-;2325:54;;2389:19;2434:18;2427:3;2412:12;:18;;;;:::i;:::-;2411:41;;;;:::i;:::-;2389:63;;2481:11;2469:9;:23;;;;:::i;:::-;2462:30;;;;;2031:468;;;;;:::o;2505:411::-;2572:20;2595:12;:10;:12::i;:::-;2572:35;;2618:20;2641:123;2672:9;2719;2695:21;:33;;;;:::i;:::-;2742:12;2641:17;:123::i;:::-;2618:146;;2799:10;2783:12;:26;;2775:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2856:17;;;;;;;;;;;2850:33;;;2884:10;2896:12;2850:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2562:354;;2505:411;:::o;2365:102:0:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;1450:575:9:-;1505:4;1512;1546:1;1536:7;:11;1528:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:15;1615:21;1597:39;;1646:17;1666:13;:11;:13::i;:::-;1646:33;;1689:14;1730:12;1720:7;1707:10;:20;;;;:::i;:::-;1706:36;;;;:::i;:::-;1689:53;;1752:21;1802:12;1792:7;1777:12;:10;:12::i;:::-;:22;;;;:::i;:::-;1776:38;;;;:::i;:::-;1752:62;;1824:26;1830:10;1842:7;1824:5;:26::i;:::-;1868:10;1860:28;;:39;1889:9;1860:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1915:17;;;;;;;;;;;1909:33;;;1943:10;1955:16;1909:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1990:9;2001:16;1982:36;;;;;;;;1450:575;;;:::o;6592:427:0:-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;148:32:9:-;;;;;;;;;;;;;:::o;3974:149:0:-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:0:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;8567:535::-;8669:1;8650:21;;:7;:21;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;9422:659::-;9524:1;9505:21;;:7;:21;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:474::-;4491:6;4499;4548:2;4536:9;4527:7;4523:23;4519:32;4516:119;;;4554:79;;:::i;:::-;4516:119;4674:1;4699:53;4744:7;4735:6;4724:9;4720:22;4699:53;:::i;:::-;4689:63;;4645:117;4801:2;4827:53;4872:7;4863:6;4852:9;4848:22;4827:53;:::i;:::-;4817:63;;4772:118;4423:474;;;;;:::o;4903:86::-;4938:7;4978:4;4971:5;4967:16;4956:27;;4903:86;;;:::o;4995:112::-;5078:22;5094:5;5078:22;:::i;:::-;5073:3;5066:35;4995:112;;:::o;5113:214::-;5202:4;5240:2;5229:9;5225:18;5217:26;;5253:67;5317:1;5306:9;5302:17;5293:6;5253:67;:::i;:::-;5113:214;;;;:::o;5333:329::-;5392:6;5441:2;5429:9;5420:7;5416:23;5412:32;5409:119;;;5447:79;;:::i;:::-;5409:119;5567:1;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5538:117;5333:329;;;;:::o;5668:::-;5727:6;5776:2;5764:9;5755:7;5751:23;5747:32;5744:119;;;5782:79;;:::i;:::-;5744:119;5902:1;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5873:117;5668:329;;;;:::o;6003:619::-;6080:6;6088;6096;6145:2;6133:9;6124:7;6120:23;6116:32;6113:119;;;6151:79;;:::i;:::-;6113:119;6271:1;6296:53;6341:7;6332:6;6321:9;6317:22;6296:53;:::i;:::-;6286:63;;6242:117;6398:2;6424:53;6469:7;6460:6;6449:9;6445:22;6424:53;:::i;:::-;6414:63;;6369:118;6526:2;6552:53;6597:7;6588:6;6577:9;6573:22;6552:53;:::i;:::-;6542:63;;6497:118;6003:619;;;;;:::o;6628:332::-;6749:4;6787:2;6776:9;6772:18;6764:26;;6800:71;6868:1;6857:9;6853:17;6844:6;6800:71;:::i;:::-;6881:72;6949:2;6938:9;6934:18;6925:6;6881:72;:::i;:::-;6628:332;;;;;:::o;6966:118::-;7053:24;7071:5;7053:24;:::i;:::-;7048:3;7041:37;6966:118;;:::o;7090:222::-;7183:4;7221:2;7210:9;7206:18;7198:26;;7234:71;7302:1;7291:9;7287:17;7278:6;7234:71;:::i;:::-;7090:222;;;;:::o;7318:474::-;7386:6;7394;7443:2;7431:9;7422:7;7418:23;7414:32;7411:119;;;7449:79;;:::i;:::-;7411:119;7569:1;7594:53;7639:7;7630:6;7619:9;7615:22;7594:53;:::i;:::-;7584:63;;7540:117;7696:2;7722:53;7767:7;7758:6;7747:9;7743:22;7722:53;:::i;:::-;7712:63;;7667:118;7318:474;;;;;:::o;7798:180::-;7846:77;7843:1;7836:88;7943:4;7940:1;7933:15;7967:4;7964:1;7957:15;7984:320;8028:6;8065:1;8059:4;8055:12;8045:22;;8112:1;8106:4;8102:12;8133:18;8123:81;;8189:4;8181:6;8177:17;8167:27;;8123:81;8251:2;8243:6;8240:14;8220:18;8217:38;8214:84;;8270:18;;:::i;:::-;8214:84;8035:269;7984:320;;;:::o;8310:176::-;8450:28;8446:1;8438:6;8434:14;8427:52;8310:176;:::o;8492:366::-;8634:3;8655:67;8719:2;8714:3;8655:67;:::i;:::-;8648:74;;8731:93;8820:3;8731:93;:::i;:::-;8849:2;8844:3;8840:12;8833:19;;8492:366;;;:::o;8864:419::-;9030:4;9068:2;9057:9;9053:18;9045:26;;9117:9;9111:4;9107:20;9103:1;9092:9;9088:17;9081:47;9145:131;9271:4;9145:131;:::i;:::-;9137:139;;8864:419;;;:::o;9289:442::-;9438:4;9476:2;9465:9;9461:18;9453:26;;9489:71;9557:1;9546:9;9542:17;9533:6;9489:71;:::i;:::-;9570:72;9638:2;9627:9;9623:18;9614:6;9570:72;:::i;:::-;9652;9720:2;9709:9;9705:18;9696:6;9652:72;:::i;:::-;9289:442;;;;;;:::o;9737:116::-;9807:21;9822:5;9807:21;:::i;:::-;9800:5;9797:32;9787:60;;9843:1;9840;9833:12;9787:60;9737:116;:::o;9859:137::-;9913:5;9944:6;9938:13;9929:22;;9960:30;9984:5;9960:30;:::i;:::-;9859:137;;;;:::o;10002:345::-;10069:6;10118:2;10106:9;10097:7;10093:23;10089:32;10086:119;;;10124:79;;:::i;:::-;10086:119;10244:1;10269:61;10322:7;10313:6;10302:9;10298:22;10269:61;:::i;:::-;10259:71;;10215:125;10002:345;;;;:::o;10353:180::-;10401:77;10398:1;10391:88;10498:4;10495:1;10488:15;10522:4;10519:1;10512:15;10539:191;10579:3;10598:20;10616:1;10598:20;:::i;:::-;10593:25;;10632:20;10650:1;10632:20;:::i;:::-;10627:25;;10675:1;10672;10668:9;10661:16;;10696:3;10693:1;10690:10;10687:36;;;10703:18;;:::i;:::-;10687:36;10539:191;;;;:::o;10736:194::-;10776:4;10796:20;10814:1;10796:20;:::i;:::-;10791:25;;10830:20;10848:1;10830:20;:::i;:::-;10825:25;;10874:1;10871;10867:9;10859:17;;10898:1;10892:4;10889:11;10886:37;;;10903:18;;:::i;:::-;10886:37;10736:194;;;;:::o;10936:410::-;10976:7;10999:20;11017:1;10999:20;:::i;:::-;10994:25;;11033:20;11051:1;11033:20;:::i;:::-;11028:25;;11088:1;11085;11081:9;11110:30;11128:11;11110:30;:::i;:::-;11099:41;;11289:1;11280:7;11276:15;11273:1;11270:22;11250:1;11243:9;11223:83;11200:139;;11319:18;;:::i;:::-;11200:139;10984:362;10936:410;;;;:::o;11352:180::-;11400:77;11397:1;11390:88;11497:4;11494:1;11487:15;11521:4;11518:1;11511:15;11538:185;11578:1;11595:20;11613:1;11595:20;:::i;:::-;11590:25;;11629:20;11647:1;11629:20;:::i;:::-;11624:25;;11668:1;11658:35;;11673:18;;:::i;:::-;11658:35;11715:1;11712;11708:9;11703:14;;11538:185;;;;:::o;11729:249::-;11869:34;11865:1;11857:6;11853:14;11846:58;11938:32;11933:2;11925:6;11921:15;11914:57;11729:249;:::o;11984:366::-;12126:3;12147:67;12211:2;12206:3;12147:67;:::i;:::-;12140:74;;12223:93;12312:3;12223:93;:::i;:::-;12341:2;12336:3;12332:12;12325:19;;11984:366;;;:::o;12356:419::-;12522:4;12560:2;12549:9;12545:18;12537:26;;12609:9;12603:4;12599:20;12595:1;12584:9;12580:17;12573:47;12637:131;12763:4;12637:131;:::i;:::-;12629:139;;12356:419;;;:::o;12781:143::-;12838:5;12869:6;12863:13;12854:22;;12885:33;12912:5;12885:33;:::i;:::-;12781:143;;;;:::o;12930:351::-;13000:6;13049:2;13037:9;13028:7;13024:23;13020:32;13017:119;;;13055:79;;:::i;:::-;13017:119;13175:1;13200:64;13256:7;13247:6;13236:9;13232:22;13200:64;:::i;:::-;13190:74;;13146:128;12930:351;;;;:::o;13287:166::-;13427:18;13423:1;13415:6;13411:14;13404:42;13287:166;:::o;13459:366::-;13601:3;13622:67;13686:2;13681:3;13622:67;:::i;:::-;13615:74;;13698:93;13787:3;13698:93;:::i;:::-;13816:2;13811:3;13807:12;13800:19;;13459:366;;;:::o;13831:419::-;13997:4;14035:2;14024:9;14020:18;14012:26;;14084:9;14078:4;14074:20;14070:1;14059:9;14055:17;14048:47;14112:131;14238:4;14112:131;:::i;:::-;14104:139;;13831:419;;;:::o;14256:332::-;14377:4;14415:2;14404:9;14400:18;14392:26;;14428:71;14496:1;14485:9;14481:17;14472:6;14428:71;:::i;:::-;14509:72;14577:2;14566:9;14562:18;14553:6;14509:72;:::i;:::-;14256:332;;;;;:::o;14594:222::-;14734:34;14730:1;14722:6;14718:14;14711:58;14803:5;14798:2;14790:6;14786:15;14779:30;14594:222;:::o;14822:366::-;14964:3;14985:67;15049:2;15044:3;14985:67;:::i;:::-;14978:74;;15061:93;15150:3;15061:93;:::i;:::-;15179:2;15174:3;15170:12;15163:19;;14822:366;;;:::o;15194:419::-;15360:4;15398:2;15387:9;15383:18;15375:26;;15447:9;15441:4;15437:20;15433:1;15422:9;15418:17;15411:47;15475:131;15601:4;15475:131;:::i;:::-;15467:139;;15194:419;;;:::o;15619:224::-;15759:34;15755:1;15747:6;15743:14;15736:58;15828:7;15823:2;15815:6;15811:15;15804:32;15619:224;:::o;15849:366::-;15991:3;16012:67;16076:2;16071:3;16012:67;:::i;:::-;16005:74;;16088:93;16177:3;16088:93;:::i;:::-;16206:2;16201:3;16197:12;16190:19;;15849:366;;;:::o;16221:419::-;16387:4;16425:2;16414:9;16410:18;16402:26;;16474:9;16468:4;16464:20;16460:1;16449:9;16445:17;16438:47;16502:131;16628:4;16502:131;:::i;:::-;16494:139;;16221:419;;;:::o;16646:223::-;16786:34;16782:1;16774:6;16770:14;16763:58;16855:6;16850:2;16842:6;16838:15;16831:31;16646:223;:::o;16875:366::-;17017:3;17038:67;17102:2;17097:3;17038:67;:::i;:::-;17031:74;;17114:93;17203:3;17114:93;:::i;:::-;17232:2;17227:3;17223:12;17216:19;;16875:366;;;:::o;17247:419::-;17413:4;17451:2;17440:9;17436:18;17428:26;;17500:9;17494:4;17490:20;17486:1;17475:9;17471:17;17464:47;17528:131;17654:4;17528:131;:::i;:::-;17520:139;;17247:419;;;:::o;17672:221::-;17812:34;17808:1;17800:6;17796:14;17789:58;17881:4;17876:2;17868:6;17864:15;17857:29;17672:221;:::o;17899:366::-;18041:3;18062:67;18126:2;18121:3;18062:67;:::i;:::-;18055:74;;18138:93;18227:3;18138:93;:::i;:::-;18256:2;18251:3;18247:12;18240:19;;17899:366;;;:::o;18271:419::-;18437:4;18475:2;18464:9;18460:18;18452:26;;18524:9;18518:4;18514:20;18510:1;18499:9;18495:17;18488:47;18552:131;18678:4;18552:131;:::i;:::-;18544:139;;18271:419;;;:::o;18696:179::-;18836:31;18832:1;18824:6;18820:14;18813:55;18696:179;:::o;18881:366::-;19023:3;19044:67;19108:2;19103:3;19044:67;:::i;:::-;19037:74;;19120:93;19209:3;19120:93;:::i;:::-;19238:2;19233:3;19229:12;19222:19;;18881:366;;;:::o;19253:419::-;19419:4;19457:2;19446:9;19442:18;19434:26;;19506:9;19500:4;19496:20;19492:1;19481:9;19477:17;19470:47;19534:131;19660:4;19534:131;:::i;:::-;19526:139;;19253:419;;;:::o;19678:224::-;19818:34;19814:1;19806:6;19802:14;19795:58;19887:7;19882:2;19874:6;19870:15;19863:32;19678:224;:::o;19908:366::-;20050:3;20071:67;20135:2;20130:3;20071:67;:::i;:::-;20064:74;;20147:93;20236:3;20147:93;:::i;:::-;20265:2;20260:3;20256:12;20249:19;;19908:366;;;:::o;20280:419::-;20446:4;20484:2;20473:9;20469:18;20461:26;;20533:9;20527:4;20523:20;20519:1;20508:9;20504:17;20497:47;20561:131;20687:4;20561:131;:::i;:::-;20553:139;;20280:419;;;:::o;20705:222::-;20845:34;20841:1;20833:6;20829:14;20822:58;20914:5;20909:2;20901:6;20897:15;20890:30;20705:222;:::o;20933:366::-;21075:3;21096:67;21160:2;21155:3;21096:67;:::i;:::-;21089:74;;21172:93;21261:3;21172:93;:::i;:::-;21290:2;21285:3;21281:12;21274:19;;20933:366;;;:::o;21305:419::-;21471:4;21509:2;21498:9;21494:18;21486:26;;21558:9;21552:4;21548:20;21544:1;21533:9;21529:17;21522:47;21586:131;21712:4;21586:131;:::i;:::-;21578:139;;21305:419;;;:::o;21730:225::-;21870:34;21866:1;21858:6;21854:14;21847:58;21939:8;21934:2;21926:6;21922:15;21915:33;21730:225;:::o;21961:366::-;22103:3;22124:67;22188:2;22183:3;22124:67;:::i;:::-;22117:74;;22200:93;22289:3;22200:93;:::i;:::-;22318:2;22313:3;22309:12;22302:19;;21961:366;;;:::o;22333:419::-;22499:4;22537:2;22526:9;22522:18;22514:26;;22586:9;22580:4;22576:20;22572:1;22561:9;22557:17;22550:47;22614:131;22740:4;22614:131;:::i;:::-;22606:139;;22333:419;;;:::o;22758:181::-;22898:33;22894:1;22886:6;22882:14;22875:57;22758:181;:::o;22945:366::-;23087:3;23108:67;23172:2;23167:3;23108:67;:::i;:::-;23101:74;;23184:93;23273:3;23184:93;:::i;:::-;23302:2;23297:3;23293:12;23286:19;;22945:366;;;:::o;23317:419::-;23483:4;23521:2;23510:9;23506:18;23498:26;;23570:9;23564:4;23560:20;23556:1;23545:9;23541:17;23534:47;23598:131;23724:4;23598:131;:::i;:::-;23590:139;;23317:419;;;:::o;23742:220::-;23882:34;23878:1;23870:6;23866:14;23859:58;23951:3;23946:2;23938:6;23934:15;23927:28;23742:220;:::o;23968:366::-;24110:3;24131:67;24195:2;24190:3;24131:67;:::i;:::-;24124:74;;24207:93;24296:3;24207:93;:::i;:::-;24325:2;24320:3;24316:12;24309:19;;23968:366;;;:::o;24340:419::-;24506:4;24544:2;24533:9;24529:18;24521:26;;24593:9;24587:4;24583:20;24579:1;24568:9;24564:17;24557:47;24621:131;24747:4;24621:131;:::i;:::-;24613:139;;24340:419;;;:::o;24765:221::-;24905:34;24901:1;24893:6;24889:14;24882:58;24974:4;24969:2;24961:6;24957:15;24950:29;24765:221;:::o;24992:366::-;25134:3;25155:67;25219:2;25214:3;25155:67;:::i;:::-;25148:74;;25231:93;25320:3;25231:93;:::i;:::-;25349:2;25344:3;25340:12;25333:19;;24992:366;;;:::o;25364:419::-;25530:4;25568:2;25557:9;25553:18;25545:26;;25617:9;25611:4;25607:20;25603:1;25592:9;25588:17;25581:47;25645:131;25771:4;25645:131;:::i;:::-;25637:139;;25364:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1911400","executionCost":"infinite","totalCost":"infinite"},"external":{"addLiquidity(uint256)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2864","cbiosTokenAddress()":"2602","cbiosTokenToEth(uint256,uint256)":"infinite","decimals()":"388","decreaseAllowance(address,uint256)":"infinite","ethToCbiosToken(uint256)":"infinite","getAmountOfTokens(uint256,uint256,uint256)":"infinite","getReserve()":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","removeLiquidity(uint256)":"infinite","symbol()":"infinite","totalSupply()":"2505","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"addLiquidity(uint256)":"51c6590a","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cbiosTokenAddress()":"c68f5eaa","cbiosTokenToEth(uint256,uint256)":"2dfb72b3","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","ethToCbiosToken(uint256)":"860865dd","getAmountOfTokens(uint256,uint256,uint256)":"7386479e","getReserve()":"59bf5d39","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","removeLiquidity(uint256)":"9c8f9f23","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Cbiostoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cbiosTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minEth\",\"type\":\"uint256\"}],\"name\":\"cbiosTokenToEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minTokens\",\"type\":\"uint256\"}],\"name\":\"ethToCbiosToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputReserve\",\"type\":\"uint256\"}],\"name\":\"getAmountOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract Exchange is ERC20 {\\n\\n    address public cbiosTokenAddress;\\n\\n    constructor(address _Cbiostoken) ERC20(\\\"CBios\\\", \\\"CBIO\\\") {\\n        require(_Cbiostoken != address(0), \\\"Token address passed is a null address\\\");\\n        cbiosTokenAddress = _Cbiostoken;\\n    }\\n\\n    function getReserve() public view returns (uint) {\\n        return ERC20(cbiosTokenAddress).balanceOf(address(this));\\n    }\\n\\n    function addLiquidity(uint _amount) public payable returns (uint) {\\n        uint liquidity;\\n        uint ethBalance = address(this).balance;\\n        uint cbiosTokenReserve = getReserve();\\n        ERC20 cbiosToken = ERC20(cbiosTokenAddress);\\n\\n        if(cbiosTokenReserve == 0) {\\n            cbiosToken.transferFrom(msg.sender, address(this), _amount);\\n\\n            liquidity = ethBalance;\\n            _mint(msg.sender, liquidity);\\n        } else {\\n            uint ethReserve =  ethBalance - msg.value;\\n            uint cbiosTokenAmount = (msg.value * cbiosTokenReserve)/(ethReserve);\\n\\n            require(_amount >= cbiosTokenAmount, \\\"Amount of tokens sent is less than the minimum tokens required\\\");\\n            cbiosToken.transferFrom(msg.sender, address(this), cbiosTokenAmount);\\n            liquidity = (totalSupply() * msg.value)/ ethReserve;\\n            _mint(msg.sender, liquidity);\\n        }\\n         return liquidity;\\n    }\\n\\n    function removeLiquidity(uint _amount) public returns (uint , uint) {\\n        require(_amount > 0, \\\"_amount should be greater than zero\\\");\\n        uint ethReserve = address(this).balance;\\n        uint _totalSupply = totalSupply();\\n        uint ethAmount = (ethReserve * _amount)/ _totalSupply;\\n        uint cbiosTokenAmount = (getReserve() * _amount)/ _totalSupply;\\n        _burn(msg.sender, _amount);\\n        payable(msg.sender).transfer(ethAmount);\\n        ERC20(cbiosTokenAddress).transfer(msg.sender, cbiosTokenAmount);\\n        return (ethAmount, cbiosTokenAmount);\\n    }\\n\\n    function getAmountOfTokens(\\n        uint256 inputAmount,\\n        uint256 inputReserve,\\n        uint256 outputReserve\\n    ) public pure returns (uint256) {\\n        require(inputReserve > 0 && outputReserve > 0, \\\"invalid reserves\\\");\\n        uint256 inputAmountWithFee = inputAmount * 99;\\n        uint256 numerator = inputAmountWithFee * outputReserve;\\n        uint256 denominator = (inputReserve * 100) + inputAmountWithFee;\\n        return numerator / denominator;\\n    }\\n\\n    function ethToCbiosToken(uint _minTokens) public payable {\\n        uint256 tokenReserve = getReserve();\\n\\n        uint256 tokensBought = getAmountOfTokens(\\n            msg.value,\\n            address(this).balance - msg.value,\\n            tokenReserve\\n        );\\n\\n        require(tokensBought >= _minTokens, \\\"insufficient output amount\\\");\\n        ERC20(cbiosTokenAddress).transfer(msg.sender, tokensBought);\\n    }\\n\\n    function cbiosTokenToEth(uint _tokensSold, uint _minEth) public {\\n        uint256 tokenReserve = getReserve();\\n        uint256 ethBought = getAmountOfTokens(\\n            _tokensSold,\\n            tokenReserve,\\n            address(this).balance\\n        );\\n        require(ethBought >= _minEth, \\\"insufficient output amount\\\");\\n        ERC20(cbiosTokenAddress).transferFrom(\\n            msg.sender,\\n            address(this),\\n            _tokensSold\\n        );\\n        payable(msg.sender).transfer(ethBought);\\n    }\\n}\",\"keccak256\":\"0x014f3940529d2e419f9228a3cb90340efacd00b78cba6ec4a425d852ce12d806\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"contracts/Exchange.sol:Exchange","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"contracts/Exchange.sol:Exchange","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"contracts/Exchange.sol:Exchange","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"contracts/Exchange.sol:Exchange","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"contracts/Exchange.sol:Exchange","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1512,"contract":"contracts/Exchange.sol:Exchange","label":"cbiosTokenAddress","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RetireCBIO.sol":{"RetirerCBIO":{"abi":[{"inputs":[{"internalType":"address","name":"_cbioToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"RetireCBIO","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"addRetirer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cbioToken","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getCBIOSRetired","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"isAddressAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1928":{"entryPoint":null,"id":1928,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":284,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":222,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":190,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":185,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":240,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"759:80:11","statements":[{"nodeType":"YulAssignment","src":"769:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:11"},"nodeType":"YulFunctionCall","src":"778:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:11"},"nodeType":"YulFunctionCall","src":"800:33:11"},"nodeType":"YulExpressionStatement","src":"800:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:11","type":""}],"src":"696:143:11"},{"body":{"nodeType":"YulBlock","src":"922:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:11"},"nodeType":"YulFunctionCall","src":"970:79:11"},"nodeType":"YulExpressionStatement","src":"970:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:11"},"nodeType":"YulFunctionCall","src":"939:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:11"},"nodeType":"YulFunctionCall","src":"935:32:11"},"nodeType":"YulIf","src":"932:119:11"},{"nodeType":"YulBlock","src":"1061:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:11"},"nodeType":"YulFunctionCall","src":"1147:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:11"},"nodeType":"YulFunctionCall","src":"1115:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:11","type":""}],"src":"845:351:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610e6e380380610e6e8339818101604052810190610032919061011c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610d16806101586000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633374ccba1461005c5780633ca9dd5e146100665780634d00c736146100965780638fa2a903146100b257806399e1f6f9146100e2575b600080fd5b610064610100565b005b610080600480360381019061007b919061072f565b6101af565b60405161008d9190610775565b60405180910390f35b6100b060048036038101906100ab91906107bc565b6101f8565b005b6100cc60048036038101906100c7919061072f565b610335565b6040516100d99190610817565b60405180910390f35b6100ea61038b565b6040516100f79190610891565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101ad5760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000811161023b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102329061092f565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610331576102da82308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103af909392919063ffffffff16565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610329919061097e565b925050819055505b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610432846323b872dd60e01b8585856040516024016103d0939291906109c1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610438565b50505050565b600061049a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104ff9092919063ffffffff16565b90506000815111156104fa57808060200190518101906104ba9190610a24565b6104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090610ac3565b60405180910390fd5b5b505050565b606061050e8484600085610517565b90509392505050565b60608247101561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610b55565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516105859190610be6565b60006040518083038185875af1925050503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b50915091506105d8878383876105e4565b92505050949350505050565b6060831561064657600083510361063e576105fe85610659565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490610c49565b60405180910390fd5b5b829050610651565b610650838361067c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561068f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c39190610cbe565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106fc826106d1565b9050919050565b61070c816106f1565b811461071757600080fd5b50565b60008135905061072981610703565b92915050565b600060208284031215610745576107446106cc565b5b60006107538482850161071a565b91505092915050565b6000819050919050565b61076f8161075c565b82525050565b600060208201905061078a6000830184610766565b92915050565b6107998161075c565b81146107a457600080fd5b50565b6000813590506107b681610790565b92915050565b600080604083850312156107d3576107d26106cc565b5b60006107e18582860161071a565b92505060206107f2858286016107a7565b9150509250929050565b60008115159050919050565b610811816107fc565b82525050565b600060208201905061082c6000830184610808565b92915050565b6000819050919050565b600061085761085261084d846106d1565b610832565b6106d1565b9050919050565b60006108698261083c565b9050919050565b600061087b8261085e565b9050919050565b61088b81610870565b82525050565b60006020820190506108a66000830184610882565b92915050565b600082825260208201905092915050565b7f5265746972654342494f3a20616d6f756e74206d75737420626520677265617460008201527f6572207468616e20300000000000000000000000000000000000000000000000602082015250565b60006109196029836108ac565b9150610924826108bd565b604082019050919050565b600060208201905081810360008301526109488161090c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109898261075c565b91506109948361075c565b92508282019050808211156109ac576109ab61094f565b5b92915050565b6109bb816106f1565b82525050565b60006060820190506109d660008301866109b2565b6109e360208301856109b2565b6109f06040830184610766565b949350505050565b610a01816107fc565b8114610a0c57600080fd5b50565b600081519050610a1e816109f8565b92915050565b600060208284031215610a3a57610a396106cc565b5b6000610a4884828501610a0f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610aad602a836108ac565b9150610ab882610a51565b604082019050919050565b60006020820190508181036000830152610adc81610aa0565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610b3f6026836108ac565b9150610b4a82610ae3565b604082019050919050565b60006020820190508181036000830152610b6e81610b32565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610ba9578082015181840152602081019050610b8e565b60008484015250505050565b6000610bc082610b75565b610bca8185610b80565b9350610bda818560208601610b8b565b80840191505092915050565b6000610bf28284610bb5565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610c33601d836108ac565b9150610c3e82610bfd565b602082019050919050565b60006020820190508181036000830152610c6281610c26565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610c9082610c69565b610c9a81856108ac565b9350610caa818560208601610b8b565b610cb381610c74565b840191505092915050565b60006020820190508181036000830152610cd88184610c85565b90509291505056fea2646970667358221220676489a5b54720339153107237ac06e2de35caa9c65cc363e3331bc4b04fa5ff64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE6E CODESIZE SUB DUP1 PUSH2 0xE6E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP5 DUP3 DUP6 ADD PUSH2 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD16 DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3374CCBA EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3CA9DD5E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x4D00C736 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8FA2A903 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x99E1F6F9 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AD JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x331 JUMPI PUSH2 0x2DA DUP3 ADDRESS DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x97E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x432 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x438 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x4FA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x50E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x517 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5D8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x63E JUMPI PUSH2 0x5FE DUP6 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x651 JUMP JUMPDEST PUSH2 0x650 DUP4 DUP4 PUSH2 0x67C JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x68F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70C DUP2 PUSH2 0x6F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x729 DUP2 PUSH2 0x703 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH2 0x744 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x753 DUP5 DUP3 DUP6 ADD PUSH2 0x71A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76F DUP2 PUSH2 0x75C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x78A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x75C JUMP JUMPDEST DUP2 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7B6 DUP2 PUSH2 0x790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D3 JUMPI PUSH2 0x7D2 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7E1 DUP6 DUP3 DUP7 ADD PUSH2 0x71A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7F2 DUP6 DUP3 DUP7 ADD PUSH2 0x7A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x7FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x857 PUSH2 0x852 PUSH2 0x84D DUP5 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 DUP3 PUSH2 0x83C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP3 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88B DUP2 PUSH2 0x870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265746972654342494F3A20616D6F756E74206D757374206265206772656174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572207468616E20300000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x919 PUSH1 0x29 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x924 DUP3 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x948 DUP2 PUSH2 0x90C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x989 DUP3 PUSH2 0x75C JUMP JUMPDEST SWAP2 POP PUSH2 0x994 DUP4 PUSH2 0x75C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x94F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x6F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x766 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA01 DUP2 PUSH2 0x7FC JUMP JUMPDEST DUP2 EQ PUSH2 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1E DUP2 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA48 DUP5 DUP3 DUP6 ADD PUSH2 0xA0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAD PUSH1 0x2A DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0xAB8 DUP3 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADC DUP2 PUSH2 0xAA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3F PUSH1 0x26 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0xB4A DUP3 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB6E DUP2 PUSH2 0xB32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC0 DUP3 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xBCA DUP2 DUP6 PUSH2 0xB80 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB8B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP3 DUP5 PUSH2 0xBB5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC33 PUSH1 0x1D DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0xC3E DUP3 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC62 DUP2 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC90 DUP3 PUSH2 0xC69 JUMP JUMPDEST PUSH2 0xC9A DUP2 DUP6 PUSH2 0x8AC JUMP JUMPDEST SWAP4 POP PUSH2 0xCAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD8 DUP2 DUP5 PUSH2 0xC85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x6489A5B547203391 MSTORE8 LT PUSH19 0x37AC06E2DE35CAA9C65CC363E3331BC4B04FA5 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"180:1015:10:-:0;;;381:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;441:10;423:9;;:29;;;;;;;;;;;;;;;;;;478:10;462:13;;:26;;;;;;;;;;;;;;;;;;381:114;180:1015;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;180:1015:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@RetireCBIO_2007":{"entryPoint":504,"id":2007,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_1005":{"entryPoint":1080,"id":1005,"parameterSlots":2,"returnSlots":0},"@_revert_1335":{"entryPoint":1660,"id":1335,"parameterSlots":2,"returnSlots":0},"@addRetirer_1945":{"entryPoint":256,"id":1945,"parameterSlots":0,"returnSlots":0},"@cbioToken_1901":{"entryPoint":907,"id":1901,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_1160":{"entryPoint":1303,"id":1160,"parameterSlots":4,"returnSlots":1},"@functionCall_1096":{"entryPoint":1279,"id":1096,"parameterSlots":3,"returnSlots":1},"@getCBIOSRetired_1969":{"entryPoint":431,"id":1969,"parameterSlots":1,"returnSlots":1},"@isAddressAllowed_1957":{"entryPoint":821,"id":1957,"parameterSlots":1,"returnSlots":1},"@isContract_1024":{"entryPoint":1625,"id":1024,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_783":{"entryPoint":943,"id":783,"parameterSlots":4,"returnSlots":0},"@verifyCallResultFromTarget_1291":{"entryPoint":1508,"id":1291,"parameterSlots":4,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":2575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1980,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2482,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2056,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":2866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49_to_t_string_memory_ptr_fromStack":{"entryPoint":2316,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":3110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":2720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1894,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3046,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":2497,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$586__to_t_address__fromStack_reversed":{"entryPoint":2193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3145,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2755,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1909,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2933,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2944,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2220,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2430,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1777,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2044,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1745,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1884,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ERC20_$586_to_t_address":{"entryPoint":2160,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2142,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2108,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2955,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":2098,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2383,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1740,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3188,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":2787,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49":{"entryPoint":2237,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":3069,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":2641,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1795,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":2552,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1936,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11608:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"748:87:11","statements":[{"nodeType":"YulAssignment","src":"758:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:11"},"nodeType":"YulFunctionCall","src":"767:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:11"},"nodeType":"YulFunctionCall","src":"796:33:11"},"nodeType":"YulExpressionStatement","src":"796:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:11","type":""}],"src":"696:139:11"},{"body":{"nodeType":"YulBlock","src":"907:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:11"},"nodeType":"YulFunctionCall","src":"955:79:11"},"nodeType":"YulExpressionStatement","src":"955:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:11"},"nodeType":"YulFunctionCall","src":"924:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:11"},"nodeType":"YulFunctionCall","src":"920:32:11"},"nodeType":"YulIf","src":"917:119:11"},{"nodeType":"YulBlock","src":"1046:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:11"},"nodeType":"YulFunctionCall","src":"1121:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:11"},"nodeType":"YulFunctionCall","src":"1100:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:11","type":""}],"src":"841:329:11"},{"body":{"nodeType":"YulBlock","src":"1221:32:11","statements":[{"nodeType":"YulAssignment","src":"1231:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:11","type":""}],"src":"1176:77:11"},{"body":{"nodeType":"YulBlock","src":"1324:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:11"},"nodeType":"YulFunctionCall","src":"1346:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:11"},"nodeType":"YulFunctionCall","src":"1334:37:11"},"nodeType":"YulExpressionStatement","src":"1334:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:11","type":""}],"src":"1259:118:11"},{"body":{"nodeType":"YulBlock","src":"1481:124:11","statements":[{"nodeType":"YulAssignment","src":"1491:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:11"},"nodeType":"YulFunctionCall","src":"1499:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:11"},"nodeType":"YulFunctionCall","src":"1580:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:11"},"nodeType":"YulFunctionCall","src":"1527:71:11"},"nodeType":"YulExpressionStatement","src":"1527:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:11","type":""}],"src":"1383:222:11"},{"body":{"nodeType":"YulBlock","src":"1654:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:11"},"nodeType":"YulFunctionCall","src":"1713:12:11"},"nodeType":"YulExpressionStatement","src":"1713:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1684:17:11"},"nodeType":"YulFunctionCall","src":"1684:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:11"},"nodeType":"YulFunctionCall","src":"1674:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:11"},"nodeType":"YulFunctionCall","src":"1667:43:11"},"nodeType":"YulIf","src":"1664:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:11","type":""}],"src":"1611:122:11"},{"body":{"nodeType":"YulBlock","src":"1791:87:11","statements":[{"nodeType":"YulAssignment","src":"1801:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:11"},"nodeType":"YulFunctionCall","src":"1810:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1839:26:11"},"nodeType":"YulFunctionCall","src":"1839:33:11"},"nodeType":"YulExpressionStatement","src":"1839:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:11","type":""}],"src":"1739:139:11"},{"body":{"nodeType":"YulBlock","src":"1967:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2013:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2015:77:11"},"nodeType":"YulFunctionCall","src":"2015:79:11"},"nodeType":"YulExpressionStatement","src":"2015:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1988:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1997:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1984:3:11"},"nodeType":"YulFunctionCall","src":"1984:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2009:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1980:3:11"},"nodeType":"YulFunctionCall","src":"1980:32:11"},"nodeType":"YulIf","src":"1977:119:11"},{"nodeType":"YulBlock","src":"2106:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2121:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2135:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2125:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2150:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2196:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2181:3:11"},"nodeType":"YulFunctionCall","src":"2181:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2205:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2160:20:11"},"nodeType":"YulFunctionCall","src":"2160:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2150:6:11"}]}]},{"nodeType":"YulBlock","src":"2233:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2248:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2262:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2252:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2278:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2324:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:11"},"nodeType":"YulFunctionCall","src":"2309:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2333:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2288:20:11"},"nodeType":"YulFunctionCall","src":"2288:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2278:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1929:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1940:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1952:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1960:6:11","type":""}],"src":"1884:474:11"},{"body":{"nodeType":"YulBlock","src":"2406:48:11","statements":[{"nodeType":"YulAssignment","src":"2416:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2441:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2434:6:11"},"nodeType":"YulFunctionCall","src":"2434:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2427:6:11"},"nodeType":"YulFunctionCall","src":"2427:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2416:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2388:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2398:7:11","type":""}],"src":"2364:90:11"},{"body":{"nodeType":"YulBlock","src":"2519:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2536:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2556:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2541:14:11"},"nodeType":"YulFunctionCall","src":"2541:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2529:6:11"},"nodeType":"YulFunctionCall","src":"2529:34:11"},"nodeType":"YulExpressionStatement","src":"2529:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2507:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2514:3:11","type":""}],"src":"2460:109:11"},{"body":{"nodeType":"YulBlock","src":"2667:118:11","statements":[{"nodeType":"YulAssignment","src":"2677:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2689:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2700:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2685:3:11"},"nodeType":"YulFunctionCall","src":"2685:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2677:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2751:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:11"},"nodeType":"YulFunctionCall","src":"2760:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2713:37:11"},"nodeType":"YulFunctionCall","src":"2713:65:11"},"nodeType":"YulExpressionStatement","src":"2713:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2639:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2651:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2662:4:11","type":""}],"src":"2575:210:11"},{"body":{"nodeType":"YulBlock","src":"2823:28:11","statements":[{"nodeType":"YulAssignment","src":"2833:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2840:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2833:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2809:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2819:3:11","type":""}],"src":"2791:60:11"},{"body":{"nodeType":"YulBlock","src":"2917:82:11","statements":[{"nodeType":"YulAssignment","src":"2927:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2967:17:11"},"nodeType":"YulFunctionCall","src":"2967:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2958:8:11"},"nodeType":"YulFunctionCall","src":"2958:34:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2940:17:11"},"nodeType":"YulFunctionCall","src":"2940:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2927:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2897:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2907:9:11","type":""}],"src":"2857:142:11"},{"body":{"nodeType":"YulBlock","src":"3065:66:11","statements":[{"nodeType":"YulAssignment","src":"3075:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3119:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3088:30:11"},"nodeType":"YulFunctionCall","src":"3088:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3075:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3045:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3055:9:11","type":""}],"src":"3005:126:11"},{"body":{"nodeType":"YulBlock","src":"3210:66:11","statements":[{"nodeType":"YulAssignment","src":"3220:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3233:30:11"},"nodeType":"YulFunctionCall","src":"3233:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3220:9:11"}]}]},"name":"convert_t_contract$_ERC20_$586_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3190:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3200:9:11","type":""}],"src":"3137:139:11"},{"body":{"nodeType":"YulBlock","src":"3360:79:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3377:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3426:5:11"}],"functionName":{"name":"convert_t_contract$_ERC20_$586_to_t_address","nodeType":"YulIdentifier","src":"3382:43:11"},"nodeType":"YulFunctionCall","src":"3382:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3370:6:11"},"nodeType":"YulFunctionCall","src":"3370:63:11"},"nodeType":"YulExpressionStatement","src":"3370:63:11"}]},"name":"abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3348:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3355:3:11","type":""}],"src":"3282:157:11"},{"body":{"nodeType":"YulBlock","src":"3556:137:11","statements":[{"nodeType":"YulAssignment","src":"3566:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3589:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:11"},"nodeType":"YulFunctionCall","src":"3574:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3566:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3659:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3683:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:11"},"nodeType":"YulFunctionCall","src":"3668:17:11"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3602:56:11"},"nodeType":"YulFunctionCall","src":"3602:84:11"},"nodeType":"YulExpressionStatement","src":"3602:84:11"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$586__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3528:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3540:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3551:4:11","type":""}],"src":"3445:248:11"},{"body":{"nodeType":"YulBlock","src":"3795:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3812:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3817:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3805:6:11"},"nodeType":"YulFunctionCall","src":"3805:19:11"},"nodeType":"YulExpressionStatement","src":"3805:19:11"},{"nodeType":"YulAssignment","src":"3833:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3852:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3857:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:11"},"nodeType":"YulFunctionCall","src":"3848:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3833:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3767:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3772:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3783:11:11","type":""}],"src":"3699:169:11"},{"body":{"nodeType":"YulBlock","src":"3980:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4002:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4010:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:11"},"nodeType":"YulFunctionCall","src":"3998:14:11"},{"hexValue":"5265746972654342494f3a20616d6f756e74206d757374206265206772656174","kind":"string","nodeType":"YulLiteral","src":"4014:34:11","type":"","value":"RetireCBIO: amount must be great"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3991:6:11"},"nodeType":"YulFunctionCall","src":"3991:58:11"},"nodeType":"YulExpressionStatement","src":"3991:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4070:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4078:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4066:3:11"},"nodeType":"YulFunctionCall","src":"4066:15:11"},{"hexValue":"6572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"4083:11:11","type":"","value":"er than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4059:6:11"},"nodeType":"YulFunctionCall","src":"4059:36:11"},"nodeType":"YulExpressionStatement","src":"4059:36:11"}]},"name":"store_literal_in_memory_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3972:6:11","type":""}],"src":"3874:228:11"},{"body":{"nodeType":"YulBlock","src":"4254:220:11","statements":[{"nodeType":"YulAssignment","src":"4264:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4330:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4335:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4271:58:11"},"nodeType":"YulFunctionCall","src":"4271:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4264:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4436:3:11"}],"functionName":{"name":"store_literal_in_memory_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49","nodeType":"YulIdentifier","src":"4347:88:11"},"nodeType":"YulFunctionCall","src":"4347:93:11"},"nodeType":"YulExpressionStatement","src":"4347:93:11"},{"nodeType":"YulAssignment","src":"4449:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4460:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4465:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4456:3:11"},"nodeType":"YulFunctionCall","src":"4456:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4449:3:11"}]}]},"name":"abi_encode_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4242:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4250:3:11","type":""}],"src":"4108:366:11"},{"body":{"nodeType":"YulBlock","src":"4651:248:11","statements":[{"nodeType":"YulAssignment","src":"4661:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4673:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4684:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4669:3:11"},"nodeType":"YulFunctionCall","src":"4669:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4661:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4708:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4719:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4704:3:11"},"nodeType":"YulFunctionCall","src":"4704:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4727:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4733:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4723:3:11"},"nodeType":"YulFunctionCall","src":"4723:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4697:6:11"},"nodeType":"YulFunctionCall","src":"4697:47:11"},"nodeType":"YulExpressionStatement","src":"4697:47:11"},{"nodeType":"YulAssignment","src":"4753:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4887:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4761:124:11"},"nodeType":"YulFunctionCall","src":"4761:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4753:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4631:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4646:4:11","type":""}],"src":"4480:419:11"},{"body":{"nodeType":"YulBlock","src":"4933:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4950:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4953:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4943:6:11"},"nodeType":"YulFunctionCall","src":"4943:88:11"},"nodeType":"YulExpressionStatement","src":"4943:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5047:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5050:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5040:6:11"},"nodeType":"YulFunctionCall","src":"5040:15:11"},"nodeType":"YulExpressionStatement","src":"5040:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5071:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5074:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5064:6:11"},"nodeType":"YulFunctionCall","src":"5064:15:11"},"nodeType":"YulExpressionStatement","src":"5064:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4905:180:11"},{"body":{"nodeType":"YulBlock","src":"5135:147:11","statements":[{"nodeType":"YulAssignment","src":"5145:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5168:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5150:17:11"},"nodeType":"YulFunctionCall","src":"5150:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5145:1:11"}]},{"nodeType":"YulAssignment","src":"5179:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5202:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5184:17:11"},"nodeType":"YulFunctionCall","src":"5184:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5179:1:11"}]},{"nodeType":"YulAssignment","src":"5213:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5224:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"5227:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5220:3:11"},"nodeType":"YulFunctionCall","src":"5220:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5213:3:11"}]},{"body":{"nodeType":"YulBlock","src":"5253:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5255:16:11"},"nodeType":"YulFunctionCall","src":"5255:18:11"},"nodeType":"YulExpressionStatement","src":"5255:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5245:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"5248:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5242:2:11"},"nodeType":"YulFunctionCall","src":"5242:10:11"},"nodeType":"YulIf","src":"5239:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5122:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"5125:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5131:3:11","type":""}],"src":"5091:191:11"},{"body":{"nodeType":"YulBlock","src":"5353:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5370:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5393:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5375:17:11"},"nodeType":"YulFunctionCall","src":"5375:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5363:6:11"},"nodeType":"YulFunctionCall","src":"5363:37:11"},"nodeType":"YulExpressionStatement","src":"5363:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5341:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5348:3:11","type":""}],"src":"5288:118:11"},{"body":{"nodeType":"YulBlock","src":"5566:288:11","statements":[{"nodeType":"YulAssignment","src":"5576:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5588:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5599:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5584:3:11"},"nodeType":"YulFunctionCall","src":"5584:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5576:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5656:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5669:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5680:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5665:3:11"},"nodeType":"YulFunctionCall","src":"5665:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5612:43:11"},"nodeType":"YulFunctionCall","src":"5612:71:11"},"nodeType":"YulExpressionStatement","src":"5612:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5737:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5750:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5761:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:11"},"nodeType":"YulFunctionCall","src":"5746:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5693:43:11"},"nodeType":"YulFunctionCall","src":"5693:72:11"},"nodeType":"YulExpressionStatement","src":"5693:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5819:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5832:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5843:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5828:3:11"},"nodeType":"YulFunctionCall","src":"5828:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5775:43:11"},"nodeType":"YulFunctionCall","src":"5775:72:11"},"nodeType":"YulExpressionStatement","src":"5775:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5522:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5534:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5542:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5550:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5561:4:11","type":""}],"src":"5412:442:11"},{"body":{"nodeType":"YulBlock","src":"5900:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"5954:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5963:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5966:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5956:6:11"},"nodeType":"YulFunctionCall","src":"5956:12:11"},"nodeType":"YulExpressionStatement","src":"5956:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5923:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5945:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5930:14:11"},"nodeType":"YulFunctionCall","src":"5930:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5920:2:11"},"nodeType":"YulFunctionCall","src":"5920:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5913:6:11"},"nodeType":"YulFunctionCall","src":"5913:40:11"},"nodeType":"YulIf","src":"5910:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5893:5:11","type":""}],"src":"5860:116:11"},{"body":{"nodeType":"YulBlock","src":"6042:77:11","statements":[{"nodeType":"YulAssignment","src":"6052:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6067:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6061:5:11"},"nodeType":"YulFunctionCall","src":"6061:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6052:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6107:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6083:23:11"},"nodeType":"YulFunctionCall","src":"6083:30:11"},"nodeType":"YulExpressionStatement","src":"6083:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6020:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6028:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:11","type":""}],"src":"5982:137:11"},{"body":{"nodeType":"YulBlock","src":"6199:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"6245:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6247:77:11"},"nodeType":"YulFunctionCall","src":"6247:79:11"},"nodeType":"YulExpressionStatement","src":"6247:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6220:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6229:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6216:3:11"},"nodeType":"YulFunctionCall","src":"6216:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6241:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6212:3:11"},"nodeType":"YulFunctionCall","src":"6212:32:11"},"nodeType":"YulIf","src":"6209:119:11"},{"nodeType":"YulBlock","src":"6338:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6353:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6367:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6357:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6382:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6425:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6436:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6421:3:11"},"nodeType":"YulFunctionCall","src":"6421:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6445:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"6392:28:11"},"nodeType":"YulFunctionCall","src":"6392:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6382:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6169:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6180:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6192:6:11","type":""}],"src":"6125:345:11"},{"body":{"nodeType":"YulBlock","src":"6582:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6604:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6612:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6600:3:11"},"nodeType":"YulFunctionCall","src":"6600:14:11"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"6616:34:11","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6593:6:11"},"nodeType":"YulFunctionCall","src":"6593:58:11"},"nodeType":"YulExpressionStatement","src":"6593:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6672:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6680:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6668:3:11"},"nodeType":"YulFunctionCall","src":"6668:15:11"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"6685:12:11","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6661:6:11"},"nodeType":"YulFunctionCall","src":"6661:37:11"},"nodeType":"YulExpressionStatement","src":"6661:37:11"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6574:6:11","type":""}],"src":"6476:229:11"},{"body":{"nodeType":"YulBlock","src":"6857:220:11","statements":[{"nodeType":"YulAssignment","src":"6867:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6933:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6938:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6874:58:11"},"nodeType":"YulFunctionCall","src":"6874:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6867:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7039:3:11"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"6950:88:11"},"nodeType":"YulFunctionCall","src":"6950:93:11"},"nodeType":"YulExpressionStatement","src":"6950:93:11"},{"nodeType":"YulAssignment","src":"7052:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7063:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7068:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7059:3:11"},"nodeType":"YulFunctionCall","src":"7059:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7052:3:11"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6845:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6853:3:11","type":""}],"src":"6711:366:11"},{"body":{"nodeType":"YulBlock","src":"7254:248:11","statements":[{"nodeType":"YulAssignment","src":"7264:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7276:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7287:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7272:3:11"},"nodeType":"YulFunctionCall","src":"7272:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7264:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7311:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7322:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7307:3:11"},"nodeType":"YulFunctionCall","src":"7307:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7330:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7336:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7326:3:11"},"nodeType":"YulFunctionCall","src":"7326:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7300:6:11"},"nodeType":"YulFunctionCall","src":"7300:47:11"},"nodeType":"YulExpressionStatement","src":"7300:47:11"},{"nodeType":"YulAssignment","src":"7356:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7490:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7364:124:11"},"nodeType":"YulFunctionCall","src":"7364:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7356:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7234:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7249:4:11","type":""}],"src":"7083:419:11"},{"body":{"nodeType":"YulBlock","src":"7614:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7636:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7644:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7632:3:11"},"nodeType":"YulFunctionCall","src":"7632:14:11"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"7648:34:11","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:11"},"nodeType":"YulFunctionCall","src":"7625:58:11"},"nodeType":"YulExpressionStatement","src":"7625:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7704:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7712:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7700:3:11"},"nodeType":"YulFunctionCall","src":"7700:15:11"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"7717:8:11","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7693:6:11"},"nodeType":"YulFunctionCall","src":"7693:33:11"},"nodeType":"YulExpressionStatement","src":"7693:33:11"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7606:6:11","type":""}],"src":"7508:225:11"},{"body":{"nodeType":"YulBlock","src":"7885:220:11","statements":[{"nodeType":"YulAssignment","src":"7895:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7961:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7966:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7902:58:11"},"nodeType":"YulFunctionCall","src":"7902:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7895:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8067:3:11"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"7978:88:11"},"nodeType":"YulFunctionCall","src":"7978:93:11"},"nodeType":"YulExpressionStatement","src":"7978:93:11"},{"nodeType":"YulAssignment","src":"8080:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8091:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8096:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8087:3:11"},"nodeType":"YulFunctionCall","src":"8087:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8080:3:11"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7873:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7881:3:11","type":""}],"src":"7739:366:11"},{"body":{"nodeType":"YulBlock","src":"8282:248:11","statements":[{"nodeType":"YulAssignment","src":"8292:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8304:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8315:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8300:3:11"},"nodeType":"YulFunctionCall","src":"8300:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8292:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8339:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8350:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8335:3:11"},"nodeType":"YulFunctionCall","src":"8335:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8358:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8354:3:11"},"nodeType":"YulFunctionCall","src":"8354:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8328:6:11"},"nodeType":"YulFunctionCall","src":"8328:47:11"},"nodeType":"YulExpressionStatement","src":"8328:47:11"},{"nodeType":"YulAssignment","src":"8384:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8518:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8392:124:11"},"nodeType":"YulFunctionCall","src":"8392:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8384:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8262:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8277:4:11","type":""}],"src":"8111:419:11"},{"body":{"nodeType":"YulBlock","src":"8594:40:11","statements":[{"nodeType":"YulAssignment","src":"8605:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8621:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8615:5:11"},"nodeType":"YulFunctionCall","src":"8615:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8605:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8577:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8587:6:11","type":""}],"src":"8536:98:11"},{"body":{"nodeType":"YulBlock","src":"8753:34:11","statements":[{"nodeType":"YulAssignment","src":"8763:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"8778:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8763:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8725:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"8730:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8741:11:11","type":""}],"src":"8640:147:11"},{"body":{"nodeType":"YulBlock","src":"8855:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8865:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8874:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8869:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8934:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8959:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"8964:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8955:3:11"},"nodeType":"YulFunctionCall","src":"8955:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8978:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"8983:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8974:3:11"},"nodeType":"YulFunctionCall","src":"8974:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8968:5:11"},"nodeType":"YulFunctionCall","src":"8968:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8948:6:11"},"nodeType":"YulFunctionCall","src":"8948:39:11"},"nodeType":"YulExpressionStatement","src":"8948:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8895:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"8898:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8892:2:11"},"nodeType":"YulFunctionCall","src":"8892:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8906:19:11","statements":[{"nodeType":"YulAssignment","src":"8908:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8917:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"8920:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8913:3:11"},"nodeType":"YulFunctionCall","src":"8913:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8908:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"8888:3:11","statements":[]},"src":"8884:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9017:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9022:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9013:3:11"},"nodeType":"YulFunctionCall","src":"9013:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"9031:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9006:6:11"},"nodeType":"YulFunctionCall","src":"9006:27:11"},"nodeType":"YulExpressionStatement","src":"9006:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8837:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8842:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"8847:6:11","type":""}],"src":"8793:246:11"},{"body":{"nodeType":"YulBlock","src":"9153:278:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9163:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9209:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9177:31:11"},"nodeType":"YulFunctionCall","src":"9177:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9167:6:11","type":""}]},{"nodeType":"YulAssignment","src":"9224:95:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9307:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9312:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9231:75:11"},"nodeType":"YulFunctionCall","src":"9231:88:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9224:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9367:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9374:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9363:3:11"},"nodeType":"YulFunctionCall","src":"9363:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"9381:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9386:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9328:34:11"},"nodeType":"YulFunctionCall","src":"9328:65:11"},"nodeType":"YulExpressionStatement","src":"9328:65:11"},{"nodeType":"YulAssignment","src":"9402:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9413:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9418:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9409:3:11"},"nodeType":"YulFunctionCall","src":"9409:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9402:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9134:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9141:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9149:3:11","type":""}],"src":"9045:386:11"},{"body":{"nodeType":"YulBlock","src":"9571:137:11","statements":[{"nodeType":"YulAssignment","src":"9582:100:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9669:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"9678:3:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9589:79:11"},"nodeType":"YulFunctionCall","src":"9589:93:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9582:3:11"}]},{"nodeType":"YulAssignment","src":"9692:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"9699:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9692:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9550:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9556:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9567:3:11","type":""}],"src":"9437:271:11"},{"body":{"nodeType":"YulBlock","src":"9820:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9842:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9850:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9838:3:11"},"nodeType":"YulFunctionCall","src":"9838:14:11"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9854:31:11","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9831:6:11"},"nodeType":"YulFunctionCall","src":"9831:55:11"},"nodeType":"YulExpressionStatement","src":"9831:55:11"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9812:6:11","type":""}],"src":"9714:179:11"},{"body":{"nodeType":"YulBlock","src":"10045:220:11","statements":[{"nodeType":"YulAssignment","src":"10055:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10121:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10126:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10062:58:11"},"nodeType":"YulFunctionCall","src":"10062:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10055:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10227:3:11"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"10138:88:11"},"nodeType":"YulFunctionCall","src":"10138:93:11"},"nodeType":"YulExpressionStatement","src":"10138:93:11"},{"nodeType":"YulAssignment","src":"10240:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10251:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10256:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10247:3:11"},"nodeType":"YulFunctionCall","src":"10247:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10240:3:11"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10033:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10041:3:11","type":""}],"src":"9899:366:11"},{"body":{"nodeType":"YulBlock","src":"10442:248:11","statements":[{"nodeType":"YulAssignment","src":"10452:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10464:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10475:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10460:3:11"},"nodeType":"YulFunctionCall","src":"10460:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10452:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10499:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10510:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10495:3:11"},"nodeType":"YulFunctionCall","src":"10495:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10518:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10524:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10514:3:11"},"nodeType":"YulFunctionCall","src":"10514:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10488:6:11"},"nodeType":"YulFunctionCall","src":"10488:47:11"},"nodeType":"YulExpressionStatement","src":"10488:47:11"},{"nodeType":"YulAssignment","src":"10544:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10678:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10552:124:11"},"nodeType":"YulFunctionCall","src":"10552:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10544:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10422:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10437:4:11","type":""}],"src":"10271:419:11"},{"body":{"nodeType":"YulBlock","src":"10755:40:11","statements":[{"nodeType":"YulAssignment","src":"10766:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10782:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10776:5:11"},"nodeType":"YulFunctionCall","src":"10776:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10766:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10738:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10748:6:11","type":""}],"src":"10696:99:11"},{"body":{"nodeType":"YulBlock","src":"10849:54:11","statements":[{"nodeType":"YulAssignment","src":"10859:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10877:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10884:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10873:3:11"},"nodeType":"YulFunctionCall","src":"10873:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10893:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10889:3:11"},"nodeType":"YulFunctionCall","src":"10889:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10869:3:11"},"nodeType":"YulFunctionCall","src":"10869:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10859:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10832:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10842:6:11","type":""}],"src":"10801:102:11"},{"body":{"nodeType":"YulBlock","src":"11001:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11011:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11058:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11025:32:11"},"nodeType":"YulFunctionCall","src":"11025:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11015:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11073:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11139:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11144:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11080:58:11"},"nodeType":"YulFunctionCall","src":"11080:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11073:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11199:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11206:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11195:3:11"},"nodeType":"YulFunctionCall","src":"11195:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11213:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11218:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11160:34:11"},"nodeType":"YulFunctionCall","src":"11160:65:11"},"nodeType":"YulExpressionStatement","src":"11160:65:11"},{"nodeType":"YulAssignment","src":"11234:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11245:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11272:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11250:21:11"},"nodeType":"YulFunctionCall","src":"11250:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11241:3:11"},"nodeType":"YulFunctionCall","src":"11241:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11234:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10982:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10989:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10997:3:11","type":""}],"src":"10909:377:11"},{"body":{"nodeType":"YulBlock","src":"11410:195:11","statements":[{"nodeType":"YulAssignment","src":"11420:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11432:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11443:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11428:3:11"},"nodeType":"YulFunctionCall","src":"11428:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11420:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11467:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11478:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11463:3:11"},"nodeType":"YulFunctionCall","src":"11463:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11486:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11492:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11482:3:11"},"nodeType":"YulFunctionCall","src":"11482:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11456:6:11"},"nodeType":"YulFunctionCall","src":"11456:47:11"},"nodeType":"YulExpressionStatement","src":"11456:47:11"},{"nodeType":"YulAssignment","src":"11512:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11584:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"11593:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11520:63:11"},"nodeType":"YulFunctionCall","src":"11520:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11512:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11382:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11394:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11405:4:11","type":""}],"src":"11292:313:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$586_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$586_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$586__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$586_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49(memPtr) {\n\n        mstore(add(memPtr, 0), \"RetireCBIO: amount must be great\")\n\n        mstore(add(memPtr, 32), \"er than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a579313b08b4cbb0ce21c034df9503f8164ca033281619a8e279a6ec94607a49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80633374ccba1461005c5780633ca9dd5e146100665780634d00c736146100965780638fa2a903146100b257806399e1f6f9146100e2575b600080fd5b610064610100565b005b610080600480360381019061007b919061072f565b6101af565b60405161008d9190610775565b60405180910390f35b6100b060048036038101906100ab91906107bc565b6101f8565b005b6100cc60048036038101906100c7919061072f565b610335565b6040516100d99190610817565b60405180910390f35b6100ea61038b565b6040516100f79190610891565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101ad5760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000811161023b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102329061092f565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610331576102da82308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103af909392919063ffffffff16565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610329919061097e565b925050819055505b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610432846323b872dd60e01b8585856040516024016103d0939291906109c1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610438565b50505050565b600061049a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104ff9092919063ffffffff16565b90506000815111156104fa57808060200190518101906104ba9190610a24565b6104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090610ac3565b60405180910390fd5b5b505050565b606061050e8484600085610517565b90509392505050565b60608247101561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610b55565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516105859190610be6565b60006040518083038185875af1925050503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b50915091506105d8878383876105e4565b92505050949350505050565b6060831561064657600083510361063e576105fe85610659565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490610c49565b60405180910390fd5b5b829050610651565b610650838361067c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561068f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c39190610cbe565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106fc826106d1565b9050919050565b61070c816106f1565b811461071757600080fd5b50565b60008135905061072981610703565b92915050565b600060208284031215610745576107446106cc565b5b60006107538482850161071a565b91505092915050565b6000819050919050565b61076f8161075c565b82525050565b600060208201905061078a6000830184610766565b92915050565b6107998161075c565b81146107a457600080fd5b50565b6000813590506107b681610790565b92915050565b600080604083850312156107d3576107d26106cc565b5b60006107e18582860161071a565b92505060206107f2858286016107a7565b9150509250929050565b60008115159050919050565b610811816107fc565b82525050565b600060208201905061082c6000830184610808565b92915050565b6000819050919050565b600061085761085261084d846106d1565b610832565b6106d1565b9050919050565b60006108698261083c565b9050919050565b600061087b8261085e565b9050919050565b61088b81610870565b82525050565b60006020820190506108a66000830184610882565b92915050565b600082825260208201905092915050565b7f5265746972654342494f3a20616d6f756e74206d75737420626520677265617460008201527f6572207468616e20300000000000000000000000000000000000000000000000602082015250565b60006109196029836108ac565b9150610924826108bd565b604082019050919050565b600060208201905081810360008301526109488161090c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109898261075c565b91506109948361075c565b92508282019050808211156109ac576109ab61094f565b5b92915050565b6109bb816106f1565b82525050565b60006060820190506109d660008301866109b2565b6109e360208301856109b2565b6109f06040830184610766565b949350505050565b610a01816107fc565b8114610a0c57600080fd5b50565b600081519050610a1e816109f8565b92915050565b600060208284031215610a3a57610a396106cc565b5b6000610a4884828501610a0f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610aad602a836108ac565b9150610ab882610a51565b604082019050919050565b60006020820190508181036000830152610adc81610aa0565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610b3f6026836108ac565b9150610b4a82610ae3565b604082019050919050565b60006020820190508181036000830152610b6e81610b32565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610ba9578082015181840152602081019050610b8e565b60008484015250505050565b6000610bc082610b75565b610bca8185610b80565b9350610bda818560208601610b8b565b80840191505092915050565b6000610bf28284610bb5565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610c33601d836108ac565b9150610c3e82610bfd565b602082019050919050565b60006020820190508181036000830152610c6281610c26565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610c9082610c69565b610c9a81856108ac565b9350610caa818560208601610b8b565b610cb381610c74565b840191505092915050565b60006020820190508181036000830152610cd88184610c85565b90509291505056fea2646970667358221220676489a5b54720339153107237ac06e2de35caa9c65cc363e3331bc4b04fa5ff64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3374CCBA EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3CA9DD5E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x4D00C736 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8FA2A903 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x99E1F6F9 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AD JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x331 JUMPI PUSH2 0x2DA DUP3 ADDRESS DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x97E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x432 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x438 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x4FA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x50E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x517 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5D8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x63E JUMPI PUSH2 0x5FE DUP6 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x651 JUMP JUMPDEST PUSH2 0x650 DUP4 DUP4 PUSH2 0x67C JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x68F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70C DUP2 PUSH2 0x6F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x729 DUP2 PUSH2 0x703 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH2 0x744 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x753 DUP5 DUP3 DUP6 ADD PUSH2 0x71A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76F DUP2 PUSH2 0x75C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x78A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x75C JUMP JUMPDEST DUP2 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7B6 DUP2 PUSH2 0x790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D3 JUMPI PUSH2 0x7D2 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7E1 DUP6 DUP3 DUP7 ADD PUSH2 0x71A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7F2 DUP6 DUP3 DUP7 ADD PUSH2 0x7A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x7FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x857 PUSH2 0x852 PUSH2 0x84D DUP5 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 DUP3 PUSH2 0x83C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B DUP3 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88B DUP2 PUSH2 0x870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265746972654342494F3A20616D6F756E74206D757374206265206772656174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572207468616E20300000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x919 PUSH1 0x29 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0x924 DUP3 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x948 DUP2 PUSH2 0x90C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x989 DUP3 PUSH2 0x75C JUMP JUMPDEST SWAP2 POP PUSH2 0x994 DUP4 PUSH2 0x75C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x94F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x6F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x766 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA01 DUP2 PUSH2 0x7FC JUMP JUMPDEST DUP2 EQ PUSH2 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1E DUP2 PUSH2 0x9F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA48 DUP5 DUP3 DUP6 ADD PUSH2 0xA0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAD PUSH1 0x2A DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0xAB8 DUP3 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADC DUP2 PUSH2 0xAA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3F PUSH1 0x26 DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0xB4A DUP3 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB6E DUP2 PUSH2 0xB32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC0 DUP3 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xBCA DUP2 DUP6 PUSH2 0xB80 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB8B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP3 DUP5 PUSH2 0xBB5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC33 PUSH1 0x1D DUP4 PUSH2 0x8AC JUMP JUMPDEST SWAP2 POP PUSH2 0xC3E DUP3 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC62 DUP2 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC90 DUP3 PUSH2 0xC69 JUMP JUMPDEST PUSH2 0xC9A DUP2 DUP6 PUSH2 0x8AC JUMP JUMPDEST SWAP4 POP PUSH2 0xCAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD8 DUP2 DUP5 PUSH2 0xC85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x6489A5B547203391 MSTORE8 LT PUSH19 0x37AC06E2DE35CAA9C65CC363E3331BC4B04FA5 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"180:1015:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:133;;;:::i;:::-;;761:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;881:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;640:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;238:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;501:133;557:13;;;;;;;;;;;543:27;;:10;:27;;;540:88;;613:4;585:13;:25;599:10;585:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;540:88;501:133::o;761:114::-;824:4;846:12;:22;859:8;846:22;;;;;;;;;;;;;;;;839:29;;761:114;;;:::o;881:311::-;970:1;960:7;:11;952:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1030:13;:25;1044:10;1030:25;;;;;;;;;;;;;;;;;;;;;;;;;1027:159;;;1070:59;1097:7;1114:4;1121:7;1070:9;;;;;;;;;;:26;;;;:59;;;;;;:::i;:::-;1168:7;1143:12;:21;1156:7;1143:21;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;1027:159;881:311;;:::o;640:116::-;704:4;726:13;:23;740:8;726:23;;;;;;;;;;;;;;;;;;;;;;;;;719:30;;640:116;;;:::o;238:22::-;;;;;;;;;;;;:::o;974:241:4:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:5:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:60::-;2819:3;2840:5;2833:12;;2791:60;;;:::o;2857:142::-;2907:9;2940:53;2958:34;2967:24;2985:5;2967:24;:::i;:::-;2958:34;:::i;:::-;2940:53;:::i;:::-;2927:66;;2857:142;;;:::o;3005:126::-;3055:9;3088:37;3119:5;3088:37;:::i;:::-;3075:50;;3005:126;;;:::o;3137:139::-;3200:9;3233:37;3264:5;3233:37;:::i;:::-;3220:50;;3137:139;;;:::o;3282:157::-;3382:50;3426:5;3382:50;:::i;:::-;3377:3;3370:63;3282:157;;:::o;3445:248::-;3551:4;3589:2;3578:9;3574:18;3566:26;;3602:84;3683:1;3672:9;3668:17;3659:6;3602:84;:::i;:::-;3445:248;;;;:::o;3699:169::-;3783:11;3817:6;3812:3;3805:19;3857:4;3852:3;3848:14;3833:29;;3699:169;;;;:::o;3874:228::-;4014:34;4010:1;4002:6;3998:14;3991:58;4083:11;4078:2;4070:6;4066:15;4059:36;3874:228;:::o;4108:366::-;4250:3;4271:67;4335:2;4330:3;4271:67;:::i;:::-;4264:74;;4347:93;4436:3;4347:93;:::i;:::-;4465:2;4460:3;4456:12;4449:19;;4108:366;;;:::o;4480:419::-;4646:4;4684:2;4673:9;4669:18;4661:26;;4733:9;4727:4;4723:20;4719:1;4708:9;4704:17;4697:47;4761:131;4887:4;4761:131;:::i;:::-;4753:139;;4480:419;;;:::o;4905:180::-;4953:77;4950:1;4943:88;5050:4;5047:1;5040:15;5074:4;5071:1;5064:15;5091:191;5131:3;5150:20;5168:1;5150:20;:::i;:::-;5145:25;;5184:20;5202:1;5184:20;:::i;:::-;5179:25;;5227:1;5224;5220:9;5213:16;;5248:3;5245:1;5242:10;5239:36;;;5255:18;;:::i;:::-;5239:36;5091:191;;;;:::o;5288:118::-;5375:24;5393:5;5375:24;:::i;:::-;5370:3;5363:37;5288:118;;:::o;5412:442::-;5561:4;5599:2;5588:9;5584:18;5576:26;;5612:71;5680:1;5669:9;5665:17;5656:6;5612:71;:::i;:::-;5693:72;5761:2;5750:9;5746:18;5737:6;5693:72;:::i;:::-;5775;5843:2;5832:9;5828:18;5819:6;5775:72;:::i;:::-;5412:442;;;;;;:::o;5860:116::-;5930:21;5945:5;5930:21;:::i;:::-;5923:5;5920:32;5910:60;;5966:1;5963;5956:12;5910:60;5860:116;:::o;5982:137::-;6036:5;6067:6;6061:13;6052:22;;6083:30;6107:5;6083:30;:::i;:::-;5982:137;;;;:::o;6125:345::-;6192:6;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:61;6445:7;6436:6;6425:9;6421:22;6392:61;:::i;:::-;6382:71;;6338:125;6125:345;;;;:::o;6476:229::-;6616:34;6612:1;6604:6;6600:14;6593:58;6685:12;6680:2;6672:6;6668:15;6661:37;6476:229;:::o;6711:366::-;6853:3;6874:67;6938:2;6933:3;6874:67;:::i;:::-;6867:74;;6950:93;7039:3;6950:93;:::i;:::-;7068:2;7063:3;7059:12;7052:19;;6711:366;;;:::o;7083:419::-;7249:4;7287:2;7276:9;7272:18;7264:26;;7336:9;7330:4;7326:20;7322:1;7311:9;7307:17;7300:47;7364:131;7490:4;7364:131;:::i;:::-;7356:139;;7083:419;;;:::o;7508:225::-;7648:34;7644:1;7636:6;7632:14;7625:58;7717:8;7712:2;7704:6;7700:15;7693:33;7508:225;:::o;7739:366::-;7881:3;7902:67;7966:2;7961:3;7902:67;:::i;:::-;7895:74;;7978:93;8067:3;7978:93;:::i;:::-;8096:2;8091:3;8087:12;8080:19;;7739:366;;;:::o;8111:419::-;8277:4;8315:2;8304:9;8300:18;8292:26;;8364:9;8358:4;8354:20;8350:1;8339:9;8335:17;8328:47;8392:131;8518:4;8392:131;:::i;:::-;8384:139;;8111:419;;;:::o;8536:98::-;8587:6;8621:5;8615:12;8605:22;;8536:98;;;:::o;8640:147::-;8741:11;8778:3;8763:18;;8640:147;;;;:::o;8793:246::-;8874:1;8884:113;8898:6;8895:1;8892:13;8884:113;;;8983:1;8978:3;8974:11;8968:18;8964:1;8959:3;8955:11;8948:39;8920:2;8917:1;8913:10;8908:15;;8884:113;;;9031:1;9022:6;9017:3;9013:16;9006:27;8855:184;8793:246;;;:::o;9045:386::-;9149:3;9177:38;9209:5;9177:38;:::i;:::-;9231:88;9312:6;9307:3;9231:88;:::i;:::-;9224:95;;9328:65;9386:6;9381:3;9374:4;9367:5;9363:16;9328:65;:::i;:::-;9418:6;9413:3;9409:16;9402:23;;9153:278;9045:386;;;;:::o;9437:271::-;9567:3;9589:93;9678:3;9669:6;9589:93;:::i;:::-;9582:100;;9699:3;9692:10;;9437:271;;;;:::o;9714:179::-;9854:31;9850:1;9842:6;9838:14;9831:55;9714:179;:::o;9899:366::-;10041:3;10062:67;10126:2;10121:3;10062:67;:::i;:::-;10055:74;;10138:93;10227:3;10138:93;:::i;:::-;10256:2;10251:3;10247:12;10240:19;;9899:366;;;:::o;10271:419::-;10437:4;10475:2;10464:9;10460:18;10452:26;;10524:9;10518:4;10514:20;10510:1;10499:9;10495:17;10488:47;10552:131;10678:4;10552:131;:::i;:::-;10544:139;;10271:419;;;:::o;10696:99::-;10748:6;10782:5;10776:12;10766:22;;10696:99;;;:::o;10801:102::-;10842:6;10893:2;10889:7;10884:2;10877:5;10873:14;10869:28;10859:38;;10801:102;;;:::o;10909:377::-;10997:3;11025:39;11058:5;11025:39;:::i;:::-;11080:71;11144:6;11139:3;11080:71;:::i;:::-;11073:78;;11160:65;11218:6;11213:3;11206:4;11199:5;11195:16;11160:65;:::i;:::-;11250:29;11272:6;11250:29;:::i;:::-;11245:3;11241:39;11234:46;;11001:285;10909:377;;;;:::o;11292:313::-;11405:4;11443:2;11432:9;11428:18;11420:26;;11492:9;11486:4;11482:20;11478:1;11467:9;11463:17;11456:47;11520:78;11593:4;11584:6;11520:78;:::i;:::-;11512:86;;11292:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"670000","executionCost":"infinite","totalCost":"infinite"},"external":{"RetireCBIO(address,uint256)":"infinite","addRetirer()":"26648","cbioToken()":"infinite","getCBIOSRetired(address)":"2841","isAddressAllowed(address)":"2927"}},"methodIdentifiers":{"RetireCBIO(address,uint256)":"4d00c736","addRetirer()":"3374ccba","cbioToken()":"99e1f6f9","getCBIOSRetired(address)":"3ca9dd5e","isAddressAllowed(address)":"8fa2a903"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cbioToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RetireCBIO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addRetirer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cbioToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getCBIOSRetired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RetireCBIO.sol\":\"RetirerCBIO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/RetireCBIO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract RetirerCBIO{\\n    using SafeERC20 for ERC20;\\n\\n    ERC20 public cbioToken;\\n    mapping(address => bool) allowedRetire;\\n    mapping(address => uint) cbiosRetired;\\n    address ownerExchange;\\n\\n    constructor(address _cbioToken) {\\n        cbioToken = ERC20(_cbioToken);\\n        ownerExchange = msg.sender;\\n    }\\n\\n    function addRetirer() public {\\n        if(msg.sender == ownerExchange){\\n            allowedRetire[msg.sender] = true;\\n        }\\n    }\\n\\n    function isAddressAllowed(address _address) public view returns(bool){\\n        return allowedRetire[_address];\\n    }\\n    function getCBIOSRetired(address _address) public view returns(uint){\\n        return cbiosRetired[_address];\\n    }\\n\\n    function RetireCBIO(address _sender, uint256 _amount) public {\\n        require(_amount > 0, \\\"RetireCBIO: amount must be greater than 0\\\");\\n        if(allowedRetire[msg.sender]){\\n            cbioToken.safeTransferFrom(_sender, address(this), _amount);\\n            cbiosRetired[_sender] += _amount;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x31509f33f1506f5d1107bf1d70a131561c6cf2b243db801eb2305511622c358d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1901,"contract":"contracts/RetireCBIO.sol:RetirerCBIO","label":"cbioToken","offset":0,"slot":"0","type":"t_contract(ERC20)586"},{"astId":1905,"contract":"contracts/RetireCBIO.sol:RetirerCBIO","label":"allowedRetire","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":1909,"contract":"contracts/RetireCBIO.sol:RetirerCBIO","label":"cbiosRetired","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":1911,"contract":"contracts/RetireCBIO.sol:RetirerCBIO","label":"ownerExchange","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ERC20)586":{"encoding":"inplace","label":"contract ERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}